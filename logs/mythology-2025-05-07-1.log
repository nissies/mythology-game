2025-05-07 21:25:50.184 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS player_bag ( id INTEGER PRIMARY KEY AUTOINCREMENT, player_id INTEGER NOT NULL, capacity INTEGER DEFAULT 100, upgraded_capacity INTEGER DEFAULT 0, last_updated TIMESTAMP DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (player_id) REFERENCES player(id) )
2025-05-07 21:25:50.185 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #199 of class path resource [schema.sql]: UPDATE npc SET name = '太上老君', type = '仙界祖师', location = '兜率宫', description = '道教祖师，精通丹道和炼器，掌管天界炼丹房，太极真人。', cultivation_level = '混元大罗金仙', gender = '男', age = 9999, dialogue_prefix = '太上老君捋须道：' WHERE id = 1
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (no such column: cultivation_level)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:135)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:55)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.185 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #200 of class path resource [schema.sql]: UPDATE npc SET name = '王母娘娘', type = '天庭统领', location = '瑶池', description = '天界女主，掌管蟠桃盛会，赐福凡间，精通仙道。', cultivation_level = '混元大罗金仙', gender = '女', age = 8888, dialogue_prefix = '王母娘娘微笑道：' WHERE id = 2
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (no such column: cultivation_level)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:135)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:55)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.186 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #201 of class path resource [schema.sql]: UPDATE npc SET name = '二郎神', type = '天庭战神', location = '灌江口', description = '神通广大的天界战神，善用三尖两刃刀，有眉心天眼，坐骑哮天犬。', cultivation_level = '太乙金仙', gender = '男', age = 3000, dialogue_prefix = '二郎神正色道：' WHERE id = 3
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (no such column: cultivation_level)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:135)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:55)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.186 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #202 of class path resource [schema.sql]: UPDATE npc SET name = '观音菩萨', type = '慈悲使者', location = '南海普陀山', description = '大慈大悲，救苦救难，手持杨柳净瓶，渡化众生。', cultivation_level = '准提佛母', gender = '女', age = 5000, dialogue_prefix = '观音菩萨慈祥地说：' WHERE id = 4
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (no such column: cultivation_level)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:135)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:55)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.186 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #203 of class path resource [schema.sql]: INSERT INTO npc (id, name, type, location, description, cultivation_level, gender, age, dialogue_prefix) VALUES (5, '哪吒', '三太子', '陈塘关', '莲花化身，三头六臂，脚踏风火轮，手持乾坤圈和火尖枪。', '大罗金仙', '男', 1500, '哪吒傲然道：'), (6, '猪八戒', '天蓬元帅', '高老庄', '曾为天庭元帅，因调戏嫦娥被贬，贪吃好色但重情重义。', '太乙真仙', '男', 2000, '猪八戒挠头笑道：'), (7, '嫦娥', '月宫仙子', '广寒宫', '美丽高贵的月宫主人，因偷食仙丹而奔月，与玉兔为伴。', '金仙', '女', 3500, '嫦娥轻叹道：'), (8, '东海龙王', '四海之主', '东海龙宫', '掌管东海水域，能呼风唤雨，性情多变。', '大罗金仙', '男', 7000, '龙王摇头晃脑道：'), (9, '牛魔王', '妖界领袖', '积雷山', '妖界霸主，力大无穷，使用混铁棍，生性狂傲。', '太乙金仙', '男', 4000, '牛魔王怒喝道：'), (10, '铁拐李', '八仙之首', '蓬莱仙岛', '腿疾拄拐，腰挂葫芦，神通广大，善解人意。', '大罗金仙', '男', 5000, '铁拐李笑呵呵地说：'), (11, '何仙姑', '八仙之一', '蓬莱仙岛', '手持荷花，仪态万千，擅长医术和音律。', '太乙金仙', '女', 2800, '何仙姑莞尔一笑：'), (12, '赤脚大仙', '天庭星官', '南天门', '天庭重要官员，神通广大，执掌天规。', '金仙', '男', 3200, '赤脚大仙沉声道：'), (13, '土地公', '福德正神', '各地祠庙', '守护一方百姓的地方神灵，和蔼可亲。', '地仙', '男', 500, '土地公作揖道：'), (14, '镇元大仙', '地仙之祖', '五庄观', '地仙之祖，道行高深，掌管人参果园，性格淡然。', '准圣', '男', 12000, '镇元子微微一笑：'), (15, '瑶姬', '仙族公主', '昆仑山', '昆仑山玉女，美丽聪慧，精通丹药和符咒。', '金仙', '女', 1800, '瑶姬轻声说道：'), (16, '九天玄女', '战争女神', '九霄宫', '上古战神，精通阵法和兵法，曾助黄帝战蚩尤。', '准圣', '女', 15000, '玄女肃然道：'), (17, '三圣母', '花果山神', '华山', '华山三圣母，杨婵，司掌山林与花果，温柔善良。', '太乙金仙', '女', 2500, '三圣母微笑着说：'), (18, '太白金星', '文曲星君', '天庭文昌宫', '天庭文臣，负责传达天帝旨意，为人圆滑。', '金仙', '男', 6000, '太白金星拱手道：'), (19, '赵公明', '财神', '五行山', '黑面长须，骑黑虎，掌管财富，公正严明。', '太乙金仙', '男', 5500, '赵公明沉声道：'), (20, '玉兔', '月宫仙子', '广寒宫', '嫦娥的伴侣，擅长捣药，天真可爱。', '天仙', '女', 3000, '玉兔蹦蹦跳跳地说：')
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (table npc has no column named cultivation_level)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:135)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:55)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.186 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #204 of class path resource [schema.sql]: UPDATE cultivation_level SET name = '凡人', description = '未入修行之门，与普通人无异' WHERE id = 1
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (no such column: name)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:135)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:55)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.186 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #205 of class path resource [schema.sql]: UPDATE cultivation_level SET name = '练气期', description = '开始感知天地灵气，体内开始形成灵力' WHERE id = 2
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (no such column: name)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:135)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:55)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.186 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #206 of class path resource [schema.sql]: UPDATE cultivation_level SET name = '筑基期', description = '体内筑就灵力基础，寿命开始延长' WHERE id = 3
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (no such column: name)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:135)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:55)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.186 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #207 of class path resource [schema.sql]: UPDATE cultivation_level SET name = '金丹期', description = '凝结金丹，脱离凡胎，寿达三百' WHERE id = 4
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (no such column: name)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:135)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:55)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.186 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #208 of class path resource [schema.sql]: UPDATE cultivation_level SET name = '元婴期', description = '元婴出窍，可分神行动，寿达五百' WHERE id = 5
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (no such column: name)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:135)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:55)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.186 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #209 of class path resource [schema.sql]: UPDATE cultivation_level SET name = '化神期', description = '元神初成，羽化登仙在望，寿达千年' WHERE id = 6
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (no such column: name)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:135)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:55)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.186 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #210 of class path resource [schema.sql]: UPDATE cultivation_level SET name = '炼虚期', description = '形神俱妙，介乎仙凡之间，寿达三千' WHERE id = 7
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (no such column: name)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:135)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:55)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.187 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #211 of class path resource [schema.sql]: UPDATE cultivation_level SET name = '合体期', description = '天人合一，即将飞升，寿达五千' WHERE id = 8
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (no such column: name)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:135)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:55)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.187 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #212 of class path resource [schema.sql]: UPDATE cultivation_level SET name = '大乘期', description = '道果圆满，随时可飞升成仙' WHERE id = 9
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (no such column: name)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:135)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:55)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.187 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #213 of class path resource [schema.sql]: UPDATE cultivation_level SET name = '地仙', description = '初入仙道，成就地仙之位' WHERE id = 10
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (no such column: name)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:135)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:55)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.187 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #214 of class path resource [schema.sql]: UPDATE cultivation_level SET name = '天仙', description = '脱离地仙束缚，得证天仙果位' WHERE id = 11
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (no such column: name)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:135)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:55)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.187 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #215 of class path resource [schema.sql]: UPDATE cultivation_level SET name = '金仙', description = '三灾已过，不坠轮回，长生不老' WHERE id = 12
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (no such column: name)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:135)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:55)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.187 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #216 of class path resource [schema.sql]: UPDATE cultivation_level SET name = '太乙真仙', description = '可开天辟地，寿与天齐' WHERE id = 13
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (no such column: name)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:135)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:55)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.188 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #217 of class path resource [schema.sql]: UPDATE cultivation_level SET name = '大罗金仙', description = '超脱时空，寿与天地同存' WHERE id = 14
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (no such column: name)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:135)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:55)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.188 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #218 of class path resource [schema.sql]: UPDATE cultivation_level SET name = '混元大罗金仙', description = '近乎于道，与天地同源' WHERE id = 15
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (no such column: name)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:135)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:55)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.188 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #219 of class path resource [schema.sql]: UPDATE cultivation_level SET name = '准圣', description = '半只脚踏入圣人境界，差一步可成圣' WHERE id = 16
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (no such column: name)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:135)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:55)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.188 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #220 of class path resource [schema.sql]: UPDATE cultivation_level SET name = '圣人', description = '道法自然，与道合真，天地不能灭' WHERE id = 17
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (no such column: name)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:135)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:55)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.188 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-0 returned as update count for SQL: UPDATE item SET name = '三尖两刃刀', description = '二郎神杨戬的神兵，锋利无比，可开山断海', rarity = '神话' WHERE id = 110
2025-05-07 21:25:50.188 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-0 returned as update count for SQL: UPDATE item SET name = '如意金箍棒', description = '齐天大圣孙悟空的兵器，重达一万三千五百斤，可大可小', rarity = '神话' WHERE id = 111
2025-05-07 21:25:50.188 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-0 returned as update count for SQL: UPDATE item SET name = '混元金斗', description = '太上老君的宝物，可收纳万物，炼化一切', rarity = '神话' WHERE id = 112
2025-05-07 21:25:50.188 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #224 of class path resource [schema.sql]: INSERT INTO item (id, name, type, subtype, description, rarity, level_requirement, base_value, max_stack, cultivation_level_requirement, category_id) VALUES (9, '风火轮', '法器', '脚踏', '哪吒所用宝物，踏之如履平地，速度无双', '神话', 50, 6000, 1, '太乙真仙', 1), (10, '乾坤圈', '法器', '圈', '哪吒的武器，掷出可捆缚敌人，刚柔并济', '神话', 48, 5800, 1, '太乙真仙', 1), (11, '火尖枪', '法器', '枪', '哪吒的武器，枪尖常燃烈火，所向披靡', '神话', 48, 5700, 1, '太乙真仙', 1), (12, '九齿钉耙', '法器', '耙', '猪八戒的武器，曾为天庭兵器，沉重锋利', '稀有', 40, 4500, 1, '金仙', 1), (13, '降妖宝杖', '法器', '杖', '玄奘法师的武器，可降妖除魔，保护善良', '稀有', 35, 4200, 1, '金仙', 1), (14, '玲珑宝塔', '法器', '塔', '可收纳妖魔，层层禁制，威力无穷', '神话', 55, 7000, 1, '大罗金仙', 1), (15, '芭蕉扇', '法器', '扇', '铁扇公主的宝物，可扇灭山火，掀起狂风', '稀有', 45, 5200, 1, '金仙', 1), (16, '混铁棍', '法器', '棍', '牛魔王的武器，坚硬无比，势大力沉', '稀有', 42, 4800, 1, '金仙', 1), (17, '照妖镜', '法器', '镜', '可照出妖魔原形，刺穿伪装，威力奇大', '稀有', 38, 4300, 1, '金仙', 1), (18, '紫金葫芦', '法器', '葫芦', '可收纳万物，内有乾坤，道家重宝', '神话', 52, 6500, 1, '大罗金仙', 1), (19, '昊天锤', '法器', '锤', '太乙真人的宝物，一击可破天地，威力无穷', '神话', 58, 7500, 1, '大罗金仙', 1), (20, '阴阳镜', '法器', '镜', '能看透阴阳两界，洞察过去未来', '稀有', 45, 5000, 1, '太乙真仙', 1), (21, '番天印', '法器', '印', '天庭重宝，压制妖魔，威力无穷', '神话', 60, 8000, 1, '大罗金仙', 1)
org.sqlite.SQLiteException: [SQLITE_CONSTRAINT_PRIMARYKEY] A PRIMARY KEY constraint failed (UNIQUE constraint failed: item.id)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.CoreStatement.exec(CoreStatement.java:91)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:56)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.188 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-0 returned as update count for SQL: UPDATE item SET name = '锁子黄金甲', description = '二郎神所穿战甲，坚不可摧，可抵御神兵利器', rarity = '神话' WHERE id = 210
2025-05-07 21:25:50.188 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-0 returned as update count for SQL: UPDATE item SET name = '凤翎织锦袍', description = '王母娘娘赐下的仙袍，轻若无物，防御极强', rarity = '神话' WHERE id = 211
2025-05-07 21:25:50.188 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-0 returned as update count for SQL: UPDATE item SET name = '五彩祥云履', description = '可腾云驾雾，速度奇快，避水火', rarity = '神话' WHERE id = 212
2025-05-07 21:25:50.188 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #228 of class path resource [schema.sql]: INSERT INTO item (id, name, type, subtype, description, rarity, level_requirement, base_value, max_stack, cultivation_level_requirement, category_id) VALUES (22, '金刚不坏衣', '防具', '衣服', '佛门至宝，穿上刀枪不入，水火不侵', '神话', 50, 6000, 1, '大罗金仙', 2), (23, '八卦金光衣', '防具', '衣服', '太极八卦加持的法衣，自动护主', '稀有', 40, 4500, 1, '金仙', 2), (24, '混元一气袍', '防具', '衣服', '太上老君赐下的道袍，蕴含天地之力', '神话', 55, 7000, 1, '太乙真仙', 2), (25, '七星宝帽', '防具', '头饰', '北斗七星之力加持，提升神识和法力', '稀有', 42, 4800, 1, '金仙', 2), (26, '龙鳞护腕', '防具', '护腕', '以真龙鳞片锻造，坚韧无比', '稀有', 38, 4300, 1, '金仙', 2), (27, '天蚕丝带', '防具', '腰带', '天蚕丝织就，轻盈坚韧，提升敏捷', '稀有', 36, 4000, 1, '金仙', 2), (28, '玄武护盾', '防具', '盾牌', '北方玄武之力凝聚，防御力超群', '稀有', 45, 5200, 1, '太乙真仙', 2), (29, '昊天战靴', '防具', '鞋子', '仙家战靴，踏云而行，快如闪电', '稀有', 44, 5000, 1, '太乙真仙', 2), (30, '太极玉佩', '防具', '饰品', '佩戴可增强法力，抵御邪气', '稀有', 40, 4600, 1, '金仙', 2), (31, '如意护心镜', '防具', '护心', '保护心脉，避免邪气入侵', '神话', 52, 6500, 1, '大罗金仙', 2)
org.sqlite.SQLiteException: [SQLITE_CONSTRAINT_PRIMARYKEY] A PRIMARY KEY constraint failed (UNIQUE constraint failed: item.id)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.CoreStatement.exec(CoreStatement.java:91)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:56)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.188 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-0 returned as update count for SQL: UPDATE item SET name = '人参果', description = '镇元大仙五庄观所产，三千年一熟，食之长生不老', rarity = '神话' WHERE id = 310
2025-05-07 21:25:50.188 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-0 returned as update count for SQL: UPDATE item SET name = '蟠桃', description = '王母娘娘蟠桃园所产，三千年一熟，可增寿延年', rarity = '神话' WHERE id = 311
2025-05-07 21:25:50.188 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-0 returned as update count for SQL: UPDATE item SET name = '仙草', description = '仙界灵草，能治百病，延年益寿', rarity = '神话' WHERE id = 312
2025-05-07 21:25:50.188 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #232 of class path resource [schema.sql]: INSERT INTO item (id, name, type, subtype, description, rarity, level_requirement, base_value, max_stack, cultivation_level_requirement, category_id) VALUES (32, '九转金丹草', '灵草', '草药', '炼制九转金丹的主材料，万年一现', '神话', 60, 10000, 10, '大罗金仙', 3), (33, '龙涎香', '灵草', '草药', '远古真龙的涎液凝结而成，炼丹圣品', '神话', 55, 8000, 20, '太乙真仙', 3), (34, '凤凰羽', '灵草', '材料', '凤凰浴火重生时脱落的羽毛，充满生命力', '神话', 58, 9000, 15, '太乙真仙', 3), (35, '麒麟角', '灵草', '材料', '祥瑞之兽麒麟的角，蕴含强大灵力', '神话', 62, 12000, 5, '大罗金仙', 3), (36, '九叶灵芝', '灵草', '草药', '九片叶子的灵芝，生长万年，仙家至宝', '神话', 50, 7000, 30, '太乙真仙', 3), (37, '月华露', '灵草', '草药', '月宫中采集的甘露，清凉无比，治愈效果极强', '稀有', 45, 6000, 50, '金仙', 3), (38, '玲珑仙果', '灵草', '果实', '形如心形，食之可增强心力和神识', '稀有', 40, 5000, 50, '金仙', 3), (39, '天香碧玉露', '灵草', '草药', '昆仑山顶采集的露水，可淬炼体魄', '稀有', 42, 5500, 50, '金仙', 3), (40, '七色莲心', '灵草', '花卉', '七色莲花的花心，可净化心灵，提升悟性', '神话', 53, 7500, 20, '太乙真仙', 3), (41, '龙须草', '灵草', '草药', '形似龙须，生长在悬崖绝壁，功效奇佳', '稀有', 38, 4500, 50, '金仙', 3)
org.sqlite.SQLiteException: [SQLITE_CONSTRAINT_PRIMARYKEY] A PRIMARY KEY constraint failed (UNIQUE constraint failed: item.id)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.CoreStatement.exec(CoreStatement.java:91)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:56)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.189 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-1 returned as update count for SQL: UPDATE item SET name = '九转金丹', description = '太上老君炼制的旷世奇丹，服用可白日飞升', rarity = '神话' WHERE id = 410
2025-05-07 21:25:50.189 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-0 returned as update count for SQL: UPDATE item SET name = '仙丹', description = '仙界灵丹，服用可延寿千年，起死回生', rarity = '神话' WHERE id = 411
2025-05-07 21:25:50.189 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-1 returned as update count for SQL: UPDATE item SET name = '天元丹', description = '融合天地元气的丹药，可助修士突破瓶颈', rarity = '神话' WHERE id = 412
2025-05-07 21:25:50.189 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #236 of class path resource [schema.sql]: INSERT INTO item (id, name, type, subtype, description, rarity, level_requirement, base_value, max_stack, cultivation_level_requirement, category_id) VALUES (45, '太上还魂丹', '丹药', '生命', '起死回生的神丹，可救活已死之人', '神话', 60, 15000, 3, '大罗金仙', 4), (46, '七转阴阳丹', '丹药', '修炼', '调和阴阳，平衡五行，提升修为', '神话', 55, 8000, 10, '太乙真仙', 4), (47, '九阳神丹', '丹药', '力量', '服用后力量大增，气血充盈', '稀有', 45, 6000, 20, '金仙', 4), (48, '玉清固元丹', '丹药', '修炼', '固本培元，稳固道基', '稀有', 40, 5000, 30, '金仙', 4), (49, '天灵聚神丹', '丹药', '神识', '增强神识，提高法术威力', '稀有', 42, 5500, 25, '金仙', 4), (50, '混元护体丹', '丹药', '防御', '服用后形成护体罡气，防御大增', '稀有', 43, 5800, 20, '金仙', 4), (51, '五行归一丹', '丹药', '平衡', '调和五行之力，使修为更加稳固', '稀有', 44, 6000, 20, '金仙', 4), (52, '龙虎丹', '丹药', '突破', '助修士冲破瓶颈，提升一个小境界', '神话', 50, 10000, 5, '太乙真仙', 4), (53, '紫气东来丹', '丹药', '灵力', '服用后灵力充盈，恢复极快', '稀有', 38, 4500, 30, '金仙', 4), (54, '太极化元丹', '丹药', '修炼', '融合太极之力，促进修为突破', '神话', 52, 12000, 8, '太乙真仙', 4)
org.sqlite.SQLiteException: [SQLITE_CONSTRAINT_PRIMARYKEY] A PRIMARY KEY constraint failed (UNIQUE constraint failed: item.id)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.CoreStatement.exec(CoreStatement.java:91)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:56)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.189 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-0 returned as update count for SQL: UPDATE item SET name = '太上天罡符', description = '太上老君传下的天罡大阵符，引动天雷轰击敌人', rarity = '神话' WHERE id = 510
2025-05-07 21:25:50.189 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-0 returned as update count for SQL: UPDATE item SET name = '八卦阴阳符', description = '蕴含八卦阴阳之力的符咒，可隔绝空间', rarity = '神话' WHERE id = 511
2025-05-07 21:25:50.189 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-0 returned as update count for SQL: UPDATE item SET name = '定海神针符', description = '镇压妖魔的强大符咒，威力无穷', rarity = '神话' WHERE id = 512
2025-05-07 21:25:50.189 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #240 of class path resource [schema.sql]: INSERT INTO item (id, name, type, subtype, description, rarity, level_requirement, base_value, max_stack, cultivation_level_requirement, category_id) VALUES (55, '玄黄镇魔符', '符篆', '攻击', '专克妖魔鬼怪，威力奇大', '神话', 50, 7000, 10, '太乙真仙', 5), (56, '紫薇护体符', '符篆', '防御', '紫薇大帝秘传护体符，防御极强', '稀有', 45, 6000, 20, '金仙', 5), (57, '天罡北斗符', '符篆', '定位', '可锁定敌人位置，使其无处可逃', '稀有', 43, 5500, 20, '金仙', 5), (58, '五雷正法符', '符篆', '攻击', '引动五雷轰顶，威力巨大', '稀有', 44, 5800, 15, '金仙', 5), (59, '六甲神行符', '符篆', '速度', '提高行动速度，如同瞬移', '稀有', 40, 5000, 25, '金仙', 5), (60, '天眼洞察符', '符篆', '探测', '激发天眼通，看破虚妄', '稀有', 42, 5200, 20, '金仙', 5), (61, '阴阳和合符', '符篆', '平衡', '调和阴阳，平衡气息', '稀有', 38, 4500, 30, '金仙', 5), (62, '茅山镇尸符', '符篆', '束缚', '镇压尸鬼妖魔，使其无法行动', '稀有', 41, 5100, 25, '金仙', 5), (63, '太乙分光符', '符篆', '分身', '可分出多个身外化身，迷惑敌人', '神话', 55, 8000, 10, '太乙真仙', 5), (64, '玉清净心符', '符篆', '心灵', '净化心灵，驱除杂念和干扰', '稀有', 39, 4800, 30, '金仙', 5)
org.sqlite.SQLiteException: [SQLITE_CONSTRAINT_PRIMARYKEY] A PRIMARY KEY constraint failed (UNIQUE constraint failed: item.id)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.CoreStatement.exec(CoreStatement.java:91)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:56)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.189 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-0 returned as update count for SQL: UPDATE item SET name = '哮天犬', description = '二郎神座下神犬，忠诚勇猛，嗅觉灵敏', rarity = '神话' WHERE id = 610
2025-05-07 21:25:50.189 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-0 returned as update count for SQL: UPDATE item SET name = '九头雉鸡', description = '传说中的神禽，通晓天机，预知吉凶', rarity = '神话' WHERE id = 611
2025-05-07 21:25:50.189 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-0 returned as update count for SQL: UPDATE item SET name = '应龙', description = '上古神兽，能行云布雨，掌控雷电', rarity = '神话' WHERE id = 612
2025-05-07 21:25:50.189 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #244 of class path resource [schema.sql]: INSERT INTO item (id, name, type, subtype, description, rarity, level_requirement, base_value, max_stack, cultivation_level_requirement, category_id) VALUES (620, '白泽', '灵宠', '契约', '知晓万物语言的神兽，通晓万物', '神话', 60, 15000, 1, '大罗金仙', 6), (621, '玄武', '灵宠', '蛋', '北方守护神兽，龟蛇合体，防御无双', '神话', 58, 13000, 1, '太乙真仙', 6), (622, '朱雀', '灵宠', '蛋', '南方火凤，掌控火焰，速度极快', '神话', 58, 14000, 1, '太乙真仙', 6), (623, '青龙', '灵宠', '蛋', '东方神龙，掌控风雨，威力无穷', '神话', 59, 15000, 1, '太乙真仙', 6)
org.sqlite.SQLiteException: [SQLITE_CONSTRAINT_PRIMARYKEY] A PRIMARY KEY constraint failed (UNIQUE constraint failed: item.id)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.CoreStatement.exec(CoreStatement.java:91)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:56)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.190 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-0 returned as update count for SQL: UPDATE item SET name = '昆仑神铁', description = '昆仑山脉深处的神铁，坚韧无比，可锻造神兵', rarity = '神话' WHERE id = 710
2025-05-07 21:25:50.190 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-0 returned as update count for SQL: UPDATE item SET name = '混沌玉髓', description = '蕴含混沌之力的奇石，可炼制顶级法宝', rarity = '神话' WHERE id = 711
2025-05-07 21:25:50.190 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-0 returned as update count for SQL: UPDATE item SET name = '建木神枝', description = '传说中通天建木的树枝，拥有沟通天地的神力', rarity = '神话' WHERE id = 712
2025-05-07 21:25:50.190 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #248 of class path resource [schema.sql]: INSERT INTO item (id, name, type, subtype, description, rarity, level_requirement, base_value, max_stack, cultivation_level_requirement, category_id) VALUES (720, '五色神石', '材料', '矿石', '蕴含五行之力的神奇石头，可炼制五行法宝', '神话', 55, 8000, 10, '太乙真仙', 7), (721, '凤凰羽毛', '材料', '羽毛', '凤凰身上的羽毛，带有不灭火焰', '神话', 53, 7500, 15, '太乙真仙', 7), (722, '龙筋', '材料', '筋骨', '真龙身上的筋脉，坚韧无比，是炼制弓弦的绝佳材料', '神话', 54, 7800, 15, '太乙真仙', 7), (723, '天河水', '材料', '液体', '天河中的特殊水质，可淬炼神兵', '神话', 50, 7000, 20, '太乙真仙', 7), (724, '三光神水', '材料', '液体', '集日月星三光精华的神水，炼器圣品', '神话', 58, 9000, 10, '大罗金仙', 7), (725, '七彩琉璃', '材料', '晶石', '七彩流转的琉璃，可制作各种法器核心', '稀有', 45, 6000, 30, '金仙', 7), (726, '紫金矿', '材料', '矿石', '含有纯净紫金的矿石，是炼制法器的上佳材料', '稀有', 42, 5500, 30, '金仙', 7), (727, '天蚕丝', '材料', '丝线', '天蚕吐出的丝线，柔韧无比，可织法衣', '稀有', 40, 5200, 40, '金仙', 7), (728, '玄铁精华', '材料', '金属', '玄铁提炼的精华，坚硬无比', '稀有', 43, 5800, 25, '金仙', 7), (729, '九幽冥火', '材料', '火焰', '来自九幽之地的特殊火焰，可炼化一切', '神话', 56, 8500, 10, '大罗金仙', 7)
org.sqlite.SQLiteException: [SQLITE_CONSTRAINT_PRIMARYKEY] A PRIMARY KEY constraint failed (UNIQUE constraint failed: item.id)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.CoreStatement.exec(CoreStatement.java:91)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:56)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.190 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-0 returned as update count for SQL: UPDATE item SET name = '太虚灵石', description = '蕴含纯净灵气的神石，是仙家的高级货币', rarity = '神话' WHERE id = 810
2025-05-07 21:25:50.190 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-0 returned as update count for SQL: UPDATE item SET name = '乾坤袋', description = '内藏乾坤，空间广阔，可收纳万物', rarity = '神话' WHERE id = 811
2025-05-07 21:25:50.190 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-0 returned as update count for SQL: UPDATE item SET name = '河图洛书', description = '蕴含天地玄机的神秘图册，参悟可增长道行', rarity = '神话' WHERE id = 812
2025-05-07 21:25:50.190 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #252 of class path resource [schema.sql]: INSERT INTO item (id, name, type, subtype, description, rarity, level_requirement, base_value, max_stack, cultivation_level_requirement, category_id) VALUES (820, '定海神针', '其他', '法宝', '可定海镇妖，随心变化大小', '神话', 60, 12000, 1, '大罗金仙', 8), (821, '玉清净瓶', '其他', '器物', '内含甘露，洒之可救万物', '神话', 58, 10000, 1, '大罗金仙', 8), (822, '昊天镜', '其他', '镜子', '可照见千里之外，追踪目标', '神话', 55, 9000, 1, '太乙真仙', 8), (823, '九龙神火罩', '其他', '法宝', '九条神龙守护的火罩，可困敌防身', '神话', 57, 9500, 1, '太乙真仙', 8), (824, '幽冥令', '其他', '令牌', '可通行幽冥界，与亡魂对话', '稀有', 45, 6000, 3, '金仙', 8), (825, '天机盘', '其他', '器物', '可推演天机，预知祸福', '稀有', 48, 6500, 2, '太乙真仙', 8), (826, '混元珠', '其他', '珠宝', '蕴含混元之气，可增强修为', '稀有', 42, 5500, 5, '金仙', 8), (827, '五行旗', '其他', '法宝', '五面旗帜，分别对应金木水火土五行', '稀有', 46, 6200, 5, '太乙真仙', 8), (828, '聚仙盆', '其他', '器物', '可聚集天地灵气，加速灵植生长', '稀有', 40, 5000, 5, '金仙', 8), (829, '引仙符', '其他', '符箓', '可引动天地灵气，辅助修炼', '稀有', 38, 4800, 20, '金仙', 8)
org.sqlite.SQLiteException: [SQLITE_CONSTRAINT_PRIMARYKEY] A PRIMARY KEY constraint failed (UNIQUE constraint failed: item.id)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.CoreStatement.exec(CoreStatement.java:91)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:56)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.190 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #253 of class path resource [schema.sql]: INSERT INTO item (id, name, type, subtype, description, rarity, level_requirement, base_value, max_stack, cultivation_level_requirement, category_id) VALUES (1001, '火球术秘籍', '技能书', '法术', '记载了火球术的秘籍，使用后可学会该技能。能凝聚灵力为火球，击向敌人。', '普通', 5, 2000, 1, '练气期·一重天', 8), (1002, '冰锥术秘籍', '技能书', '法术', '记载了冰锥术的秘籍，使用后可学会该技能。能凝聚水灵气形成冰锥，射向敌人。', '普通', 5, 1800, 1, '练气期·二重天', 8), (1003, '雷霆一击秘籍', '技能书', '法术', '记载了雷霆一击的秘籍，使用后可学会该技能。能引动天雷轰击敌人。', '高级', 15, 3000, 1, '筑基期·三重天', 8), (1004, '风刃术秘籍', '技能书', '法术', '记载了风刃术的秘籍，使用后可学会该技能。能凝聚风灵气为风刃，可切割敌人。', '普通', 5, 1600, 1, '练气期·一重天', 8), (1005, '土墙术秘籍', '技能书', '法术', '记载了土墙术的秘籍，使用后可学会该技能。能召唤土墙抵挡攻击。', '普通', 10, 1200, 1, '练气期·五重天', 8), (1006, '金光咒秘籍', '技能书', '法术', '记载了金光咒的秘籍，使用后可学会该技能。能释放纯净光明能量。', '高级', 12, 2400, 1, '筑基期·一重天', 8), (1007, '幽冥鬼爪秘籍', '技能书', '法术', '记载了幽冥鬼爪的秘籍，使用后可学会该技能。能召唤阴间之力攻击敌人。', '高级', 15, 2200, 1, '筑基期·二重天', 8), (1008, '五行轮转秘籍', '技能书', '法术', '记载了五行轮转的秘籍，使用后可学会该技能。能调动五行之力攻击敌人。', '珍贵', 30, 4000, 1, '金丹期·一重天', 8)
org.sqlite.SQLiteException: [SQLITE_CONSTRAINT_PRIMARYKEY] A PRIMARY KEY constraint failed (UNIQUE constraint failed: item.id)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.CoreStatement.exec(CoreStatement.java:91)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:56)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.190 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #254 of class path resource [schema.sql]: INSERT INTO item (id, name, type, subtype, description, rarity, level_requirement, base_value, max_stack, cultivation_level_requirement, category_id) VALUES (1011, '斩龙剑法秘籍', '技能书', '剑法', '记载了斩龙剑法的秘籍，使用后可学会该技能。刚猛有力的剑法，可斩妖除魔。', '高级', 15, 2400, 1, '筑基期·五重天', 8), (1012, '清风剑法秘籍', '技能书', '剑法', '记载了清风剑法的秘籍，使用后可学会该技能。轻灵飘逸的剑法，如清风拂过。', '普通', 10, 1800, 1, '练气期·九重天', 8), (1013, '烈焰剑法秘籍', '技能书', '剑法', '记载了烈焰剑法的秘籍，使用后可学会该技能。剑刃缠绕烈焰，灼烧敌人。', '高级', 12, 2200, 1, '筑基期·一重天', 8), (1014, '玄冰剑法秘籍', '技能书', '剑法', '记载了玄冰剑法的秘籍，使用后可学会该技能。剑气寒冷刺骨，冻结敌人。', '高级', 12, 2000, 1, '筑基期·一重天', 8), (1015, '奔雷剑法秘籍', '技能书', '剑法', '记载了奔雷剑法的秘籍，使用后可学会该技能。剑如雷霆，迅猛无比。', '高级', 15, 2600, 1, '筑基期·五重天', 8), (1016, '厚土剑法秘籍', '技能书', '剑法', '记载了厚土剑法的秘籍，使用后可学会该技能。稳重如山的剑法，破防能力强。', '高级', 15, 2300, 1, '筑基期·三重天', 8), (1017, '太极剑法秘籍', '技能书', '剑法', '记载了太极剑法的秘籍，使用后可学会该技能。阴阳调和，刚柔并济的剑法。', '珍贵', 25, 2800, 1, '金丹期·一重天', 8)
org.sqlite.SQLiteException: [SQLITE_CONSTRAINT_PRIMARYKEY] A PRIMARY KEY constraint failed (UNIQUE constraint failed: item.id)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.CoreStatement.exec(CoreStatement.java:91)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:56)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.191 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #255 of class path resource [schema.sql]: INSERT INTO item (id, name, type, subtype, description, rarity, level_requirement, base_value, max_stack, cultivation_level_requirement, category_id) VALUES (1041, '紫霞神功秘籍', '技能书', '心法', '记载了紫霞神功的秘籍，使用后可学会该技能。吸收天地灵气，壮大自身灵力。', '高级', 15, 2000, 1, '筑基期·五重天', 8), (1042, '金刚不坏秘籍', '技能书', '心法', '记载了金刚不坏的秘籍，使用后可学会该技能。运转心法，强化身体防御。', '高级', 20, 2500, 1, '金丹期·一重天', 8), (1043, '烈火心经秘籍', '技能书', '心法', '记载了烈火心经的秘籍，使用后可学会该技能。运转心法，提升火属性攻击。', '高级', 15, 2200, 1, '筑基期·五重天', 8), (1044, '玄冰心法秘籍', '技能书', '心法', '记载了玄冰心法的秘籍，使用后可学会该技能。运转心法，提升水属性抗性。', '高级', 15, 2200, 1, '筑基期·五重天', 8), (1045, '风行心诀秘籍', '技能书', '心法', '记载了风行心诀的秘籍，使用后可学会该技能。运转心法，提升移动速度和闪避。', '高级', 15, 2100, 1, '筑基期·三重天', 8)
org.sqlite.SQLiteException: [SQLITE_CONSTRAINT_PRIMARYKEY] A PRIMARY KEY constraint failed (UNIQUE constraint failed: item.id)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.CoreStatement.exec(CoreStatement.java:91)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:56)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.191 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-1 returned as update count for SQL: UPDATE location SET name = '昆仑山', description = '神话传说中仙人居住的圣地，群峰巍峨，云雾缭绕，有西王母瑶池', type = '仙山' WHERE id = 1
2025-05-07 21:25:50.191 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-1 returned as update count for SQL: UPDATE location SET name = '蓬莱仙岛', description = '东海三座仙山之一，常有仙雾环绕，居住着众多神仙', type = '仙岛' WHERE id = 2
2025-05-07 21:25:50.191 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-1 returned as update count for SQL: UPDATE location SET name = '方丈仙岛', description = '东海三座仙山之一，方圆数百里，奇花异草遍布', type = '仙岛' WHERE id = 3
2025-05-07 21:25:50.191 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-1 returned as update count for SQL: UPDATE location SET name = '瀛洲仙岛', description = '东海三座仙山之一，风景如画，有长生不老药', type = '仙岛' WHERE id = 4
2025-05-07 21:25:50.191 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #260 of class path resource [schema.sql]: INSERT INTO location (id, name, description, type) VALUES (5, '兜率宫', '道教所说三十六重天之一，太上老君的道场', '天庭'), (6, '南天门', '天庭南方大门，由四大天王把守', '天庭'), (7, '凌霄宝殿', '天庭中央宫殿，玉皇大帝议事之所', '天庭'), (8, '瑶池', '王母娘娘的居所，举办蟠桃盛会之地', '天庭'), (9, '广寒宫', '月宫中嫦娥的居所，清冷幽静', '月宫'), (10, '东海龙宫', '东海龙王统治的水晶宫殿，富丽堂皇', '龙宫'), (11, '南海普陀山', '观音菩萨修行之地，佛光普照', '佛地'), (12, '灵山', '如来佛祖讲经之地，佛门圣地', '佛地'), (13, '花果山', '齐天大圣孙悟空的出生和成长之地', '名山'), (14, '陈塘关', '哪吒出生和成长的地方', '人间'), (15, '高老庄', '猪八戒的栖身之地', '人间'), (16, '地府', '阎罗王统治的冥界，管理亡魂', '冥界'), (17, '十八层地狱', '地府最恐怖的地方，惩罚生前作恶多端者', '冥界'), (18, '五庄观', '镇元大仙的道场，种植人参果树', '道观'), (19, '万寿山', '镇元大仙居住的山脉，灵气充沛', '仙山'), (20, '火焰山', '传说中牛魔王的居所，终年烈火燃烧', '魔域')
org.sqlite.SQLiteException: [SQLITE_CONSTRAINT_PRIMARYKEY] A PRIMARY KEY constraint failed (UNIQUE constraint failed: location.id)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.CoreStatement.exec(CoreStatement.java:91)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:56)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.191 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-0 returned as update count for SQL: UPDATE sect SET name = '昆仑派', description = '道教正宗，居于昆仑山，修炼长生不老之术', master_npc_id = 1 WHERE id = 1
2025-05-07 21:25:50.191 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-0 returned as update count for SQL: UPDATE sect SET name = '峨眉派', description = '女子修行门派，居于峨眉山，修炼御剑飞行之术', master_npc_id = 11 WHERE id = 2
2025-05-07 21:25:50.191 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-0 returned as update count for SQL: UPDATE sect SET name = '龙虎山天师道', description = '道教重要门派，以符箓驱邪著称', master_npc_id = 10 WHERE id = 3
2025-05-07 21:25:50.191 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-0 returned as update count for SQL: UPDATE sect SET name = '茅山派', description = '道教支脉，擅长降妖除魔，符咒之术', master_npc_id = 12 WHERE id = 4
2025-05-07 21:25:50.191 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #265 of class path resource [schema.sql]: INSERT INTO sect (id, name, description, master_npc_id) VALUES (5, '崆峒派', '西北道教名门，修炼内丹之术', 14), (6, '灵山大雷音寺', '佛门圣地，如来佛祖道场', NULL), (7, '普陀山净宗', '观音菩萨所创佛门，以慈悲为怀', 4), (8, '蓬莱仙宗', '八仙修行之地，传授长生不老之术', 10), (9, '阐教', '元始天尊所创道教正宗', NULL), (10, '截教', '通天教主所创道教支脉，广收门徒', NULL)
org.sqlite.SQLiteException: [SQLITE_CONSTRAINT_PRIMARYKEY] A PRIMARY KEY constraint failed (UNIQUE constraint failed: sect.id)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.CoreStatement.exec(CoreStatement.java:91)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:56)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.191 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #266 of class path resource [schema.sql]: UPDATE battle_location SET name = '昆仑山巅', description = '昆仑山最高峰，接近天界，灵气浓郁', difficulty = 5, min_level = 50 WHERE id = 1
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (no such column: name)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:135)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:55)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.191 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #267 of class path resource [schema.sql]: UPDATE battle_location SET name = '东海龙宫', description = '东海龙王的宫殿，水下宝藏众多', difficulty = 4, min_level = 40 WHERE id = 2
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (no such column: name)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:135)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:55)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.191 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #268 of class path resource [schema.sql]: UPDATE battle_location SET name = '花果山水帘洞', description = '齐天大圣孙悟空的老家，猴群聚集', difficulty = 3, min_level = 30 WHERE id = 3
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (no such column: name)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:135)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:55)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.192 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #269 of class path resource [schema.sql]: UPDATE battle_location SET name = '灵山佛地', description = '佛门圣地，佛光普照，降妖除魔', difficulty = 4, min_level = 45 WHERE id = 4
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (no such column: name)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:135)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:55)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.192 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #270 of class path resource [schema.sql]: INSERT INTO battle_location (id, name, description, difficulty, min_level) VALUES (5, '火焰山', '烈焰滔天的山脉，是牛魔王的地盘', 5, 55), (6, '幽冥血海', '阴间可怕的血海，怨气冲天', 6, 60), (7, '通天河', '西行路上的凶险之地，水怪众多', 3, 35), (8, '轮回殿', '地府六道轮回所在，魂魄转世之地', 5, 50), (9, '蒙昧谷', '迷雾笼罩的山谷，传说中有上古遗迹', 4, 45), (10, '盘丝洞', '蜘蛛精的老巢，机关重重', 3, 30), (11, '黑风山', '黑风怪的领地，常年黑风呼啸', 2, 25), (12, '五指山', '孙悟空曾被压五百年的地方', 4, 40), (13, '凌霄大殿前', '天庭大殿前的广场，天兵天将巡逻', 6, 65), (14, '天庭蟠桃园', '王母娘娘的蟠桃园，灵果满园', 5, 55)
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (table battle_location has no column named name)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:135)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:55)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.192 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #271 of class path resource [schema.sql]: INSERT INTO monster (id, name, description, monster_type, level, health, strength, agility, intelligence, defense, magic_defense, attack_power, magic_power, drop_items, location_id) VALUES (1, '野猪妖', '一只普通的野猪精，初具妖力', '兽妖', 10, 1000, 120, 100, 50, 80, 60, 120, 40, '101,102', 1), (2, '蛇精', '擅长偷袭的蛇妖', '蛇妖', 15, 1200, 150, 120, 70, 90, 80, 150, 60, '103,104', 2), (3, '猴精', '调皮捣蛋的猴精', '猴妖', 12, 800, 130, 150, 60, 70, 70, 130, 50, '105,106', 3), (4, '狐狸精', '狡猾的狐妖', '狐妖', 18, 1000, 140, 140, 90, 80, 100, 140, 80, '107,108', 4)
org.sqlite.SQLiteException: [SQLITE_CONSTRAINT_PRIMARYKEY] A PRIMARY KEY constraint failed (UNIQUE constraint failed: monster.id)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.CoreStatement.exec(CoreStatement.java:91)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:56)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.192 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-1 returned as update count for SQL: UPDATE monster SET name = '黑风怪', description = '黑风山的妖王，擅长风系攻击', monster_type = '山精', level = 30, health = 3000, strength = 300, agility = 280, intelligence = 200, defense = 250, magic_defense = 220, attack_power = 300, magic_power = 250 WHERE id = 1
2025-05-07 21:25:50.192 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-1 returned as update count for SQL: UPDATE monster SET name = '九头虫', description = '九个头的恐怖巨虫，毒性极强', monster_type = '虫妖', level = 40, health = 5000, strength = 450, agility = 320, intelligence = 280, defense = 350, magic_defense = 300, attack_power = 450, magic_power = 400 WHERE id = 2
2025-05-07 21:25:50.192 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-1 returned as update count for SQL: UPDATE monster SET name = '白骨精', description = '善于变化的骨精，擅长迷惑之术', monster_type = '尸妖', level = 35, health = 3500, strength = 380, agility = 350, intelligence = 320, defense = 300, magic_defense = 340, attack_power = 380, magic_power = 400 WHERE id = 3
2025-05-07 21:25:50.192 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-1 returned as update count for SQL: UPDATE monster SET name = '蜘蛛精', description = '盘丝洞的妖王，吐丝捕猎，擅长束缚', monster_type = '虫妖', level = 33, health = 3300, strength = 350, agility = 400, intelligence = 300, defense = 270, magic_defense = 290, attack_power = 350, magic_power = 330 WHERE id = 4
2025-05-07 21:25:50.192 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #276 of class path resource [schema.sql]: INSERT INTO monster (id, name, description, monster_type, level, health, strength, agility, intelligence, defense, magic_defense, attack_power, magic_power, drop_items, location_id) VALUES (5, '赤尻马猴', '红屁股的猴精，行动敏捷，喜欢恶作剧', '猴妖', 25, 2500, 280, 450, 200, 200, 180, 280, 220, '321,322', 3), (6, '青狮精', '通体碧绿的狮子精，力大无穷', '兽妖', 45, 5500, 500, 300, 250, 450, 350, 500, 300, '323,324', 8), (7, '黄风怪', '释放剧毒黄风的妖怪，防不胜防', '风妖', 38, 3800, 400, 380, 320, 320, 300, 400, 380, '325,326', 7), (8, '银角大王', '使用宝贝葫芦的妖王，神通广大', '牛妖', 48, 6000, 550, 320, 400, 480, 450, 550, 500, '327,328', 10), (9, '金角大王', '银角的哥哥，更为凶猛', '牛妖', 50, 6500, 600, 330, 420, 500, 470, 600, 550, '329,330', 10), (10, '铁扇公主', '芭蕉扇的主人，牛魔王之妻', '妖王', 55, 7000, 580, 400, 500, 520, 550, 580, 600, '331,332', 5), (11, '鬼面蟾蜍', '面如厉鬼的巨大蟾蜍，擅喷毒液', '蛙妖', 32, 3200, 340, 250, 220, 280, 270, 340, 300, '333,334', 9), (12, '六耳猕猴', '酷似孙悟空的猴妖，善于模仿', '猴妖', 52, 6800, 620, 580, 500, 520, 480, 620, 550, '335,336', 13), (13, '玉面狐狸', '貌美如花的狐妖，擅长魅惑之术', '狐妖', 36, 3600, 320, 420, 380, 280, 350, 320, 400, '337,338', 11), (14, '天蓬元帅', '未贬下凡前的猪八戒，神通广大', '天兵', 58, 7500, 650, 350, 450, 600, 580, 650, 600, '339,340', 14)
org.sqlite.SQLiteException: [SQLITE_CONSTRAINT_PRIMARYKEY] A PRIMARY KEY constraint failed (UNIQUE constraint failed: monster.id)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.CoreStatement.exec(CoreStatement.java:91)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:56)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.192 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #277 of class path resource [schema.sql]: INSERT INTO npc_dialogue (id, npc_id, content, dialogue_type, min_favorability, max_favorability) VALUES (101, 1, '贫道乃是三清之一，太上老君是也。你有何事？', '初见', 0, 20), (102, 1, '修道之人，要静心养性，勿要为外物所扰。', '日常', 0, 100), (103, 1, '我这炼丹炉中，正炼着九转金丹，你且稍等片刻。', '任务', 30, 100), (104, 1, '天道无情，万物有理。你若能参透这个道理，便能更进一步。', '指导', 60, 100), (105, 2, '吾乃西王母，今日瑶池正举办蟠桃盛会，你可有请帖？', '初见', 0, 20), (106, 2, '这蟠桃三千年一熟，食之可延寿添福，乃是天界奇珍。', '日常', 0, 100), (107, 2, '天庭之事繁多，需得小心谨慎处理。', '任务', 30, 100), (108, 2, '凡间修士若想得道成仙，心性修为缺一不可。', '指导', 60, 100), (109, 3, '吾乃二郎显圣真君，奉玉帝之命巡查人间。', '初见', 0, 20), (110, 3, '哮天犬最近颇不安分，整日想下界游玩。', '日常', 0, 100), (111, 3, '最近有妖怪扰乱凡间，需得去降服它们。', '任务', 30, 100), (112, 3, '修行之道，贵在坚持，不可半途而废。', '指导', 60, 100), (113, 4, '阿弥陀佛，贫僧观音菩萨，普度众生而来。', '初见', 0, 20), (114, 4, '有缘之人，自会得我慈悲护佑。', '日常', 0, 100), (115, 4, '西方灵山有难，需你前去助一臂之力。', '任务', 30, 100), (116, 4, '菩提本无树，明镜亦非台。本来无一物，何处惹尘埃？', '指导', 60, 100), (117, 5, '俺是哪吒三太子，谁敢惹我？', '初见', 0, 20), (118, 5, '这风火轮和乾坤圈都是我的宝贝，不许碰！', '日常', 0, 100), (119, 5, '东海龙王又在找麻烦，我得去教训教训他。', '任务', 30, 100), (120, 5, '修行要有一股子狠劲，敢于与天斗！', '指导', 60, 100)
org.sqlite.SQLiteException: [SQLITE_CONSTRAINT_PRIMARYKEY] A PRIMARY KEY constraint failed (UNIQUE constraint failed: npc_dialogue.id)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.CoreStatement.exec(CoreStatement.java:91)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:56)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.192 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #278 of class path resource [schema.sql]: INSERT INTO quest (id, name, description, quest_type, min_level, reward_experience, reward_items, start_npc_id, end_npc_id) VALUES (101, '天庭敕令：捉拿妖怪', '奉玉帝之命，前往人间捉拿为非作歹的妖怪', '天庭任务', 40, 5000, '132,810', 18, 3), (102, '天庭敕令：寻找仙草', '为王母娘娘寻找仙草，用于蟠桃盛会', '天庭任务', 45, 6000, '311,810', 18, 2), (103, '天庭敕令：修复天柱', '修复支撑天地的天柱，避免天崩地裂', '天庭任务', 50, 7000, '720,810', 18, 1), (104, '天庭敕令：平定水患', '协助四海龙王平定水患，拯救凡间百姓', '天庭任务', 42, 5500, '723,810', 18, 8)
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (table quest has no column named name)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:135)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:55)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.193 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #279 of class path resource [schema.sql]: INSERT INTO quest (id, name, description, quest_type, min_level, reward_experience, reward_items, start_npc_id, end_npc_id) VALUES (110, '四灵神兽：青龙', '寻找并收服东方青龙', '神兽收集', 55, 8000, '623,820', 14, 14), (111, '四灵神兽：白虎', '寻找并收服西方白虎', '神兽收集', 55, 8000, '624,820', 14, 14), (112, '四灵神兽：朱雀', '寻找并收服南方朱雀', '神兽收集', 55, 8000, '622,820', 14, 14), (113, '四灵神兽：玄武', '寻找并收服北方玄武', '神兽收集', 55, 8000, '621,820', 14, 14), (114, '洪荒异兽：麒麟', '寻找并收服祥瑞之兽麒麟', '神兽收集', 60, 10000, '625,821', 14, 14)
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (table quest has no column named name)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:135)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:55)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.193 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS alchemy_recipe ( id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT NOT NULL, description TEXT, main_ingredient_id INTEGER, secondary_ingredient_ids TEXT, result_item_id INTEGER, min_level INTEGER, success_rate INTEGER, cultivation_requirement TEXT, FOREIGN KEY (main_ingredient_id) REFERENCES item(id), FOREIGN KEY (result_item_id) REFERENCES item(id) )
2025-05-07 21:25:50.193 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-8 returned as update count for SQL: INSERT INTO alchemy_recipe (id, name, description, main_ingredient_id, secondary_ingredient_ids, result_item_id, min_level, success_rate, cultivation_requirement) VALUES (1, '九转金丹方', '太上老君亲传的九转金丹炼制之法，需极高炼丹术', 320, '321,322,323,324', 410, 60, 30, '大罗金仙'), (2, '天元丹方', '融合天地元气的丹药配方，可助修士突破瓶颈', 324, '325,326,327', 412, 50, 50, '太乙真仙'), (3, '太上还魂丹方', '起死回生的神丹配方，救活已死之人', 320, '323,328,724', 420, 58, 40, '大罗金仙'), (4, '七转阴阳丹方', '调和阴阳，平衡五行的丹方', 324, '329,726,723', 421, 53, 60, '太乙真仙'), (5, '九阳神丹方', '增强力量，充盈气血的丹方', 325, '327,329,702', 422, 45, 70, '金仙'), (6, '玉清固元丹方', '固本培元，稳固道基的丹方', 325, '326,702,703', 423, 40, 80, '金仙'), (7, '天灵聚神丹方', '增强神识，提高法术威力的丹方', 326, '325,705,707', 424, 42, 75, '金仙'), (8, '混元护体丹方', '形成护体罡气，增强防御的丹方', 326, '327,704,708', 425, 43, 70, '金仙')
2025-05-07 21:25:50.193 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #282 of class path resource [schema.sql]: CREATE TABLE item_backup AS SELECT * FROM item
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (table item_backup already exists)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:135)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:55)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.193 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #283 of class path resource [schema.sql]: DELETE FROM skill
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (foreign key mismatch - "skill" referencing "cultivation_technique")
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:135)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:55)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.196 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-0 returned as update count for SQL: DELETE FROM sqlite_sequence WHERE name = 'skill'
2025-05-07 21:25:50.196 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #285 of class path resource [schema.sql]: INSERT INTO skill (id, name, description, skill_type, element_type, base_power, mana_cost, cooldown, effect_description) VALUES (1, '火球术', '凝聚灵力为火球，击向敌人', '法术', '火', 100, 50, 5, '造成100点火属性伤害，有10%几率点燃敌人'), (2, '冰锥术', '凝聚水灵气形成冰锥，射向敌人', '法术', '水', 90, 45, 4, '造成90点水属性伤害，有15%几率减缓敌人移动速度'), (3, '雷霆一击', '引动天雷轰击敌人', '法术', '雷', 150, 80, 10, '造成150点雷属性伤害，有20%几率眩晕敌人2秒'), (4, '风刃术', '凝聚风灵气为风刃，可切割敌人', '法术', '风', 80, 40, 3, '造成80点风属性伤害，攻击范围较广'), (5, '土墙术', '召唤土墙抵挡攻击', '法术', '土', 0, 60, 15, '创造一道土墙，可抵挡300点伤害，持续10秒'), (6, '金光咒', '释放纯净光明能量', '法术', '光', 120, 70, 8, '造成120点光属性伤害，对妖邪生物伤害提高50%'), (7, '幽冥鬼爪', '召唤阴间之力攻击敌人', '法术', '暗', 110, 60, 7, '造成110点暗属性伤害，有25%几率使敌人恐惧3秒'), (8, '五行轮转', '调动五行之力攻击敌人', '法术', '混沌', 200, 120, 30, '造成200点混沌伤害，无视敌人50%元素抗性')
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (foreign key mismatch - "skill" referencing "cultivation_technique")
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:135)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:55)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.197 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #286 of class path resource [schema.sql]: INSERT INTO skill (id, name, description, skill_type, element_type, base_power, mana_cost, cooldown, effect_description) VALUES (101, '斩龙剑法', '刚猛有力的剑法，可斩妖除魔', '剑法', '金', 120, 30, 6, '造成120点物理伤害，对龙类生物伤害提高30%'), (102, '清风剑法', '轻灵飘逸的剑法，如清风拂过', '剑法', '风', 90, 25, 4, '造成90点物理伤害，有20%几率追加一次攻击'), (103, '烈焰剑法', '剑刃缠绕烈焰，灼烧敌人', '剑法', '火', 110, 35, 5, '造成110点物理伤害和30点火属性伤害'), (104, '玄冰剑法', '剑气寒冷刺骨，冻结敌人', '剑法', '水', 100, 30, 5, '造成100点物理伤害，有15%几率冻结敌人1秒'), (105, '奔雷剑法', '剑如雷霆，迅猛无比', '剑法', '雷', 130, 40, 8, '造成130点物理伤害，攻击速度提升20%，持续5秒'), (106, '厚土剑法', '稳重如山的剑法，破防能力强', '剑法', '土', 115, 35, 7, '造成115点物理伤害，无视敌人20%防御'), (107, '太极剑法', '阴阳调和，刚柔并济的剑法', '剑法', '混沌', 140, 50, 15, '造成140点物理伤害，同时恢复自身40点生命值')
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (foreign key mismatch - "skill" referencing "cultivation_technique")
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:135)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:55)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.197 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #287 of class path resource [schema.sql]: INSERT INTO skill (id, name, description, skill_type, element_type, base_power, mana_cost, cooldown, effect_description) VALUES (201, '天火焚世', '引动天火，焚烧方圆百里', '神通', '火', 300, 200, 180, '对范围内所有敌人造成300点火属性伤害，持续燃烧10秒'), (202, '九天玄冰', '召唤九天玄冰，冻结一切', '神通', '水', 250, 180, 160, '对范围内所有敌人造成250点冰属性伤害，80%几率冻结3秒'), (203, '五雷轰顶', '引动五雷正法，惩戒邪恶', '神通', '雷', 350, 250, 240, '对单个敌人造成350点雷属性伤害，必定眩晕5秒'), (204, '万剑归宗', '御使万剑攻击敌人', '神通', '金', 280, 200, 200, '召唤100把飞剑，每把造成30点伤害，随机攻击敌人'), (205, '大地之怒', '引动大地之力，震撼敌人', '神通', '土', 270, 190, 190, '对范围内所有敌人造成270点土属性伤害，击倒敌人'), (206, '混沌万象', '释放混沌之力，扭曲现实', '神通', '混沌', 400, 300, 300, '对范围内所有敌人造成400点混沌伤害，20%几率直接击杀')
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (foreign key mismatch - "skill" referencing "cultivation_technique")
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:135)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:55)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.197 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #288 of class path resource [schema.sql]: INSERT INTO skill (id, name, description, skill_type, element_type, base_power, mana_cost, cooldown, effect_description) VALUES (301, '爆炎符', '刻画火焰符文，引爆强大火焰', '符箓', '火', 150, 0, 0, '一次性使用，造成150点火属性伤害'), (302, '禁锢符', '刻画禁锢符文，限制敌人行动', '符箓', '土', 50, 0, 0, '一次性使用，禁锢敌人行动4秒'), (303, '护身符', '刻画防护符文，形成护盾', '符箓', '光', 0, 0, 0, '一次性使用，获得200点护盾，持续30秒'), (304, '疾行符', '刻画风行符文，提升移动速度', '符箓', '风', 0, 0, 0, '一次性使用，提升50%移动速度，持续20秒'), (305, '灵力回复符', '刻画回复符文，恢复灵力', '符箓', '水', 0, 0, 0, '一次性使用，立即恢复100点灵力'), (306, '八卦五行符', '刻画五行符文，产生随机效果', '符箓', '混沌', 100, 0, 0, '一次性使用，产生随机五行效果')
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (foreign key mismatch - "skill" referencing "cultivation_technique")
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:135)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:55)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.197 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #289 of class path resource [schema.sql]: INSERT INTO skill (id, name, description, skill_type, element_type, base_power, mana_cost, cooldown, effect_description) VALUES (401, '紫霞神功', '吸收天地灵气，壮大自身灵力', '心法', '光', 0, 10, 60, '每秒恢复5点灵力，持续30秒'), (402, '金刚不坏', '运转心法，强化身体防御', '心法', '金', 0, 40, 90, '增加50%物理防御，持续15秒'), (403, '烈火心经', '运转心法，提升火属性攻击', '心法', '火', 0, 30, 75, '火属性攻击提升30%，持续20秒'), (404, '玄冰心法', '运转心法，提升水属性抗性', '心法', '水', 0, 30, 75, '水属性抗性提升50%，持续20秒'), (405, '风行心诀', '运转心法，提升移动速度和闪避', '心法', '风', 0, 25, 70, '移动速度提升20%，闪避率提升15%，持续25秒'), (406, '不动明王', '心如止水，提升控制抗性', '心法', '土', 0, 35, 85, '控制效果抗性提升70%，持续15秒'), (407, '太玄心经', '运转高深心法，全面提升属性', '心法', '混沌', 0, 100, 300, '全属性提升15%，持续30秒')
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (foreign key mismatch - "skill" referencing "cultivation_technique")
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:135)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:55)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.197 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #290 of class path resource [schema.sql]: INSERT INTO skill (id, name, description, skill_type, element_type, base_power, mana_cost, cooldown, effect_description) VALUES (501, '五行困天阵', '布置五行阵法，困住敌人', '阵法', '土', 0, 150, 300, '在区域内创造阵法，困住敌人10秒，每秒造成30点伤害'), (502, '八卦阵', '布置八卦阵法，混淆敌人方向', '阵法', '风', 0, 120, 240, '在区域内创造阵法，使敌人混乱5秒，攻击随机目标'), (503, '四象星辰阵', '布置星辰阵法，召唤星辰之力', '阵法', '光', 0, 180, 360, '在区域内创造阵法，每秒恢复友方10点生命值，持续15秒'), (504, '天罗地网', '布置捕捉阵法，限制敌人行动', '阵法', '金', 0, 160, 320, '在区域内创造阵法，减缓敌人50%移动速度，持续12秒'), (505, '万妖炼狱阵', '布置火焰阵法，焚烧敌人', '阵法', '火', 0, 170, 340, '在区域内创造阵法，每秒造成40点火属性伤害，持续8秒')
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (foreign key mismatch - "skill" referencing "cultivation_technique")
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:135)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:55)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.197 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Failed to execute SQL script statement #291 of class path resource [schema.sql]: INSERT INTO skill (id, name, description, skill_type, element_type, base_power, mana_cost, cooldown, effect_description) VALUES (601, '金刚铁骨', '淬炼身体，强化骨骼韧性', '炼体术', '金', 0, 50, 120, '增加30%最大生命值，持续30秒'), (602, '易筋锻骨', '改变筋骨结构，提升身体素质', '炼体术', '木', 0, 60, 180, '增加20%力量和30%敏捷，持续20秒'), (603, '龙象般若功', '模拟龙象之力，增强力量', '炼体术', '土', 0, 70, 240, '增加50%力量，持续15秒'), (604, '轻身术', '减轻身体重量，提升灵活性', '炼体术', '风', 0, 40, 100, '增加40%移动速度和20%闪避率，持续25秒'), (605, '铁布衫', '强化皮肤，增加防御力', '炼体术', '土', 0, 55, 150, '减少30%受到的物理伤害，持续30秒')
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (foreign key mismatch - "skill" referencing "cultivation_technique")
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:135)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:55)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:112)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.afterPropertiesSet(DataSourceInitializer.java:97)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
2025-05-07 21:25:50.197 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-14 returned as update count for SQL: DELETE FROM battle_location
2025-05-07 21:25:50.197 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-0 returned as update count for SQL: DELETE FROM sqlite_sequence WHERE name = 'battle_location'
2025-05-07 21:25:50.197 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-14 returned as update count for SQL: INSERT INTO battle_location (id, location_id, monster_groups, min_level, environment_effect, background_image, battle_music) VALUES (1, 1, '1,2,3', 10, '无特殊效果', 'forest.jpg', 'forest_battle.mp3'), (2, 2, '2,3,4', 20, '每回合降低5%生命值', 'cave.jpg', 'cave_battle.mp3'), (3, 3, '5,6', 30, '风系技能伤害提高15%', 'mountain.jpg', 'mountain_battle.mp3'), (4, 4, '7,8', 45, '水系技能伤害提高20%', 'holy_land.jpg', 'holy_battle.mp3'), (5, 5, '9,10', 55, '火系技能伤害提高25%，每回合灼烧所有单位', 'fire_mountain.jpg', 'fire_battle.mp3'), (6, 6, '11,12', 60, '暗系技能伤害提高25%，降低治疗效果50%', 'blood_sea.jpg', 'dark_battle.mp3'), (7, 7, '7,13,14', 35, '水系技能伤害提高15%，降低移动速度', 'river.jpg', 'water_battle.mp3'), (8, 8, '15,16', 50, '金系技能伤害提高15%，随机眩晕一名角色', 'reincarnation.jpg', 'spirit_battle.mp3'), (9, 9, '11,17', 45, '随机切换五行属性效果', 'ancient_valley.jpg', 'mystery_battle.mp3'), (10, 10, '18,19', 30, '风系技能伤害提高10%', 'spider_cave.jpg', 'cave_battle.mp3'), (11, 11, '20,21', 25, '暗系技能伤害提高10%', 'dark_mountain.jpg', 'dark_battle.mp3'), (12, 12, '22,23', 40, '土系技能伤害提高15%', 'five_finger_mountain.jpg', 'mountain_battle.mp3'), (13, 13, '24,25', 65, '光系技能伤害提高25%', 'heaven_palace.jpg', 'heaven_battle.mp3'), (14, 14, '26,27', 55, '生命恢复效果提高20%', 'heaven_garden.jpg', 'heaven_peaceful.mp3')
2025-05-07 21:25:50.197 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-1 returned as update count for SQL: UPDATE battle_location SET location_id = (SELECT id FROM location WHERE name = '青云山脉') WHERE id = 1
2025-05-07 21:25:50.198 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-1 returned as update count for SQL: UPDATE battle_location SET location_id = (SELECT id FROM location WHERE name = '幽冥洞窟') WHERE id = 2
2025-05-07 21:25:50.198 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Executed SQL script from class path resource [schema.sql] in 59 ms.
2025-05-07 21:25:50.198 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'initSystemConfig'
2025-05-07 21:25:50.198 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'transactionManager'
2025-05-07 21:25:50.198 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'transactionManager' via factory method to bean named 'dataSource'
2025-05-07 21:25:50.201 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
2025-05-07 21:25:50.201 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'
2025-05-07 21:25:50.202 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
2025-05-07 21:25:50.202 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
2025-05-07 21:25:50.202 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration'
2025-05-07 21:25:50.202 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'threadPoolTaskExecutorBuilder'
2025-05-07 21:25:50.203 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2025-05-07 21:25:50.204 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'threadPoolTaskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2025-05-07 21:25:50.205 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration'
2025-05-07 21:25:50.205 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration' via constructor to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2025-05-07 21:25:50.205 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'simpleAsyncTaskExecutorBuilder'
2025-05-07 21:25:50.207 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration'
2025-05-07 21:25:50.207 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
2025-05-07 21:25:50.207 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
2025-05-07 21:25:50.207 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'error'
2025-05-07 21:25:50.208 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'beanNameViewResolver'
2025-05-07 21:25:50.208 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
2025-05-07 21:25:50.208 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2025-05-07 21:25:50.210 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@44a2b17b'
2025-05-07 21:25:50.210 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2025-05-07 21:25:50.210 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'conventionErrorViewResolver'
2025-05-07 21:25:50.212 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'errorAttributes'
2025-05-07 21:25:50.213 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'basicErrorController'
2025-05-07 21:25:50.213 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
2025-05-07 21:25:50.214 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
2025-05-07 21:25:50.214 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2025-05-07 21:25:50.214 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2025-05-07 21:25:50.215 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@718607eb'
2025-05-07 21:25:50.217 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
2025-05-07 21:25:50.217 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2025-05-07 21:25:50.217 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2025-05-07 21:25:50.217 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@718607eb'
2025-05-07 21:25:50.220 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'welcomePageHandlerMapping'
2025-05-07 21:25:50.220 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'mvcConversionService'
2025-05-07 21:25:50.221 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool-HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2025-05-07 21:25:50.222 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'mvcResourceUrlProvider'
2025-05-07 21:25:50.222 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@44a2b17b'
2025-05-07 21:25:50.222 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
2025-05-07 21:25:50.222 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2025-05-07 21:25:50.228 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'welcomePageNotAcceptableHandlerMapping'
2025-05-07 21:25:50.228 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@44a2b17b'
2025-05-07 21:25:50.228 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'mvcConversionService'
2025-05-07 21:25:50.228 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2025-05-07 21:25:50.230 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'localeResolver'
2025-05-07 21:25:50.230 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'themeResolver'
2025-05-07 21:25:50.231 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'flashMapManager'
2025-05-07 21:25:50.232 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'viewNameTranslator'
2025-05-07 21:25:50.233 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'mvcValidator'
2025-05-07 21:25:50.233 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'mvcContentNegotiationManager'
2025-05-07 21:25:50.237 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'requestMappingHandlerMapping'
2025-05-07 21:25:50.238 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
2025-05-07 21:25:50.238 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
2025-05-07 21:25:50.238 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2025-05-07 21:25:50.257 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings-
	c.y.c.BattleController:
	{GET [/api/battle/status/{playerId}]}: getBattleStatus(Integer)
	{GET [/api/battle/history/{playerId}]}: getBattleHistory(Integer,Integer,Integer)
	{POST [/api/battle/escape]}: escapeBattle(Map)
	{POST [/api/battle/round]}: executeBattleRound(Map)
	{POST [/api/battle/skill/use]}: useSkill(Map)
	{POST [/api/battle/init]}: initBattle(Map)
	{POST [/api/battle/item/use]}: useItem(Map)
2025-05-07 21:25:50.265 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings-
	c.y.c.DestinyController:
	{GET [/api/destiny/test/danger]}: testDangerEffect(Integer,String,int)
	{GET [/api/destiny/{id}]}: getDestinyById(Integer)
	{GET [/api/destiny/name/{name}]}: getDestinyByName(String)
	{GET [/api/destiny/random]}: getRandomDestiny(String)
	{GET [/api/destiny]}: getAllDestinies()
	{POST [/api/destiny/change-by-name]}: changePlayerDestinyByName(Integer,String)
	{GET [/api/destiny/test/spirit-stone]}: testSpiritStoneEffect(Integer,int)
	{POST [/api/destiny/change]}: changePlayerDestiny(Integer,Integer)
2025-05-07 21:25:50.271 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings-
	c.y.c.FileController:
	{POST [/api/file/upload/npc/avatar]}: uploadNpcAvatar(MultipartFile,Integer)
	{POST [/api/file/upload/player/avatar]}: uploadPlayerAvatar(MultipartFile,Integer)
	{DELETE [/api/file/player/avatar/{playerId}]}: deletePlayerAvatar(Integer)
	{DELETE [/api/file/npc/avatar/{npcId}]}: deleteNpcAvatar(Integer)
	{POST [/api/file/upload/item/image]}: uploadItemImage(MultipartFile,Integer,String)
	{DELETE [/api/file/item/image/{itemId}]}: deleteItemImage(Integer)
	{DELETE [/api/file/player/character/{playerId}]}: deletePlayerCharacterImage(Integer)
	{POST [/api/file/upload/player/character]}: uploadPlayerCharacterImage(MultipartFile,Integer)
2025-05-07 21:25:50.274 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings-
	c.y.c.ItemController:
	{POST [/api/item/use]}: useItem(Integer,Integer)
	{GET [/api/item/rarity/{rarity}]}: getItemsByRarity(String)
	{GET [/api/item/updateImage/{id}]}: updateItemImage(Integer,String)
	{GET [/api/item]}: getAllItems()
	{GET [/api/item/player/{playerId}]}: getPlayerItems(Integer)
	{GET [/api/item/{id}]}: getItemById(Integer)
	{GET [/api/item/fixPotionImages]}: fixPotionImages()
	{GET [/api/item/type/{type}]}: getItemsByType(String)
2025-05-07 21:25:50.281 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings-
	c.y.c.MonsterController:
	{POST [/api/monster]}: addMonster(Monster)
	{DELETE [/api/monster/{id}]}: deleteMonster(Integer)
	{POST [/api/monster/adjust-spirit-stone]}: adjustSpiritStone(Map)
	{POST [/api/monster/discuss]}: discussTopic(DiscussRequest)
	{PUT [/api/monster/{id}]}: updateMonster(Integer,Monster)
	{GET [/api/monster/boss]}: getAllBossMonsters()
	{GET [/api/monster]}: getAllMonsters()
	{GET [/api/monster/{id}]}: getMonsterById(Integer)
	{GET [/api/monster/type/{type}]}: getMonstersByType(String)
	{GET [/api/monster/groups]}: getMonstersByGroupString(String)
	{GET [/api/monster/location/{locationId}]}: getMonstersByLocationId(Integer)
	{GET [/api/monster/level]}: getMonstersByLevelRange(Integer,Integer)
	{POST [/api/monster/relation/init]}: initPlayerNPCRelation(RelationRequest)
	{POST [/api/monster/relation/increase]}: increaseFavorability(FavorabilityRequest)
	{POST [/api/monster/relation/decrease]}: decreaseFavorability(FavorabilityRequest)
	{POST [/api/monster/sell]}: sellItem(SellRequest)
	{POST [/api/monster/buy]}: buyItem(PurchaseRequest)
2025-05-07 21:25:50.285 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings-
	c.y.c.NPCChatController:
	{PUT [/api/npc-chat/answer]}: updateAnswer(NPCChatAnswer)
	{DELETE [/api/npc-chat/answer/{id}]}: deleteAnswer(Integer)
	{POST [/api/npc-chat/discuss]}: discussWithNPC(Integer,Integer,Integer,String)
	{GET [/api/npc-chat/topics]}: getAvailableTopics(Integer,Integer,String)
	{PUT [/api/npc-chat/topic]}: updateTopic(NPCChatTopic)
	{GET [/api/npc-chat/topic/{id}]}: getTopicById(Integer)
	{DELETE [/api/npc-chat/topic/{id}]}: deleteTopic(Integer)
	{GET [/api/npc-chat/answers]}: getAnswers(Integer)
	{POST [/api/npc-chat/answer]}: addAnswer(NPCChatAnswer)
	{POST [/api/npc-chat/topic]}: addTopic(NPCChatTopic)
2025-05-07 21:25:50.291 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings-
	c.y.c.NPCController:
	{POST [/api/npc/dialogue]}: addDialogue(NPCDialogue)
	{POST [/api/npc/become-disciple/{playerId}/{npcId}]}: becomeDisciple(Integer,Integer)
	{DELETE [/api/npc/dialogue/{id}]}: deleteDialogue(Integer)
	{POST [/api/npc/dual-cultivation/{playerId}/{npcId}]}: dualCultivation(Integer,Integer)
	{GET [/api/npc/chat-topics/{playerId}/{npcId}]}: getChatTopics(Integer,Integer)
	{PUT [/api/npc/dialogue]}: updateDialogue(NPCDialogue)
	{GET [/api/npc/location/{location}]}: getNPCsByLocation(String)
	{GET [/api/npc/type/{type}]}: getNPCsByType(String)
	{POST [/api/npc/spar/{playerId}/{npcId}]}: sparWithNPC(Integer,Integer)
	{GET [/api/npc/dialogue/{playerId}/{npcId}]}: getRandomDialogue(Integer,Integer)
	{GET [/api/npc/relation/{playerId}/{npcId}]}: getPlayerNPCRelation(Integer,Integer)
	{POST [/api/npc/relation/init]}: initPlayerNPCRelation(Integer,Integer)
	{POST [/api/npc/relation/increase]}: increaseFavorability(Map)
	{POST [/api/npc/relation/decrease]}: decreaseFavorability(Map)
	{GET [/api/npc/dialogue/{playerId}/{npcId}/{dialogueType}]}: getRandomDialogueByType(Integer,Integer,String)
	{GET [/api/npc/relation/player/{playerId}]}: getPlayerAllNPCRelations(Integer)
	{POST [/api/npc/chat/{playerId}/{npcId}/{topicId}]}: chatWithNPC(Integer,Integer,String)
	{GET [/api/npc]}: getAllNPCs()
	{GET [/api/npc/{id}]}: getNPCById(Integer)
	{POST [/api/npc/give-gift/{playerId}/{npcId}/{itemId}]}: giveGift(Integer,Integer,Integer)
	{POST [/api/npc/discuss-dao/{playerId}/{npcId}]}: discussDao(Integer,Integer)
2025-05-07 21:25:50.293 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings-
	c.y.c.NPCRewardTestController:
	{GET [/api/test/npc-interaction/history]}: getInteractionHistory(Integer,Integer)
	{POST [/api/test/npc-interaction/interact]}: testNpcInteraction(Integer,Integer,String)
	{GET [/api/test/npc-interaction/cooldown-check]}: checkCooldown(Integer,Integer)
2025-05-07 21:25:50.299 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings-
	c.y.c.PlayerController:
	{GET [/api/player/{id}/attributes]}: getAttributes(Integer)
	{GET [/api/player/destinies]}: getAllDestinies()
	{POST [/api/player/{id}/use-item/{itemId}]}: useItem(Integer,Integer)
	{POST [/api/player]}: createPlayer(Player)
	{GET [/api/player/{id}/combat-power]}: getCombatPower(Integer)
	{GET [/api/player/name/{name}]}: getPlayerByName(String)
	{GET [/api/player]}: getAllPlayers()
	{POST [/api/player/{id}/cultivation/{amount}]}: advanceCultivation(Integer,Integer)
	{POST [/api/player/{id}/spiritstone/gain/{amount}]}: gainSpiritStone(Integer,Integer)
	{POST [/api/player/{id}/spiritstone/use/{amount}]}: useSpiritStone(Integer,Integer)
	{PUT [/api/player/{id}]}: updatePlayer(Integer,Player)
	{GET [/api/player/{id}/check-lifespan]}: checkLifespan(Integer)
	{GET [/api/player/spirit-roots]}: getAllSpiritRoots()
	{DELETE [/api/player/{id}]}: deletePlayer(Integer)
	{GET [/api/player/{id}]}: getPlayer(Integer)
	{POST [/api/player/{id}/equip/{itemId}]}: equipItem(Integer,Integer,String)
	{POST [/api/player/{id}/cultivate]}: cultivateWithTechnique(Integer,Map)
	{POST [/api/player/create-random-character]}: createRandomCharacter(String,String,String)
	{GET [/api/player/player-id/{playerId}]}: getPlayerByPlayerId(String)
	{POST [/api/player/create-character]}: createMainCharacter(Map)
	{GET [/api/player/{id}/cultivation-techniques]}: getAvailableCultivationTechniques(Integer)
	{POST [/api/player/{id}/unequip/{itemId}]}: unequipItem(Integer,Integer)
2025-05-07 21:25:50.300 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings-
	c.y.c.PlayerItemController:
	{GET [/api/player-item/player/{playerId}]}: getPlayerItems(Integer)
	{GET [/api/player-item/{playerId}/{itemId}]}: getPlayerItemQuantity(Integer,Integer)
	{GET [/api/player-item/quantity]}: getItemQuantity(Integer,Integer)
2025-05-07 21:25:50.304 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings-
	c.y.c.QuestController:
	{POST [/api/quest]}: addQuest(Quest)
	{GET [/api/quest/player/{playerId}/quest/{questId}]}: getPlayerQuestDetail(Integer,Integer)
	{GET [/api/quest/type/{type}]}: getQuestsByType(String)
	{GET [/api/quest/{questId}/branches]}: getQuestBranches(Integer)
	{PUT [/api/quest/{id}]}: updateQuest(Integer,Quest)
	{POST [/api/quest/branch]}: addQuestBranch(QuestBranch)
	{DELETE [/api/quest/branch/{id}]}: deleteQuestBranch(Integer)
	{GET [/api/quest/{id}]}: getQuestById(Integer)
	{GET [/api/quest/player/{playerId}]}: getPlayerQuests(Integer)
	{POST [/api/quest/player/{playerId}/complete/{questId}]}: completeQuest(Integer,Integer,Integer)
	{GET [/api/quest]}: getAllQuests()
	{DELETE [/api/quest/{id}]}: deleteQuest(Integer)
	{GET [/api/quest/main]}: getMainQuests()
	{PUT [/api/quest/branch/{id}]}: updateQuestBranch(Integer,QuestBranch)
	{POST [/api/quest/player/{playerId}/accept/{questId}]}: acceptQuest(Integer,Integer)
	{POST [/api/quest/player/{playerId}/abandon/{questId}]}: abandonQuest(Integer,Integer)
	{GET [/api/quest/player/{playerId}/available]}: getAvailableQuests(Integer)
2025-05-07 21:25:50.307 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings-
	c.y.c.ShopController:
	{POST [/api/shop/sell]}: sellItem(Integer,Integer,Integer,Integer)
	{POST [/api/shop/buy]}: buyItem(Integer,Integer,Integer)
	{GET [/api/shop/access/{playerId}/{shopId}]}: canEnterShop(Integer,Integer)
	{GET [/api/shop/item/{shopItemId}]}: getShopItemById(Integer)
	{GET [/api/shop/transactions/shop/{shopId}]}: getShopAllTransactions(Integer)
	{GET [/api/shop/transactions/player/{playerId}]}: getPlayerAllTransactions(Integer)
	{GET [/api/shop/transactions/player/{playerId}/shop/{shopId}]}: getPlayerTransactionsInShop(Integer,Integer)
	{GET [/api/shop/{id}]}: getShopById(Integer)
	{GET [/api/shop]}: getAllShops()
	{GET [/api/shop/location/{location}]}: getShopsByLocation(String)
	{GET [/api/shop/{shopId}/items]}: getShopItems(Integer)
2025-05-07 21:25:50.307 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings-
	c.y.c.SkillController:
	{GET [/api/skill/{skillId}]}: getSkillInfo(Integer)
	{GET [/api/skill/player/{playerId}]}: getPlayerSkills(Integer)
	{GET [/api/skill/cooldown]}: getSkillCooldown(Integer,Integer)
2025-05-07 21:25:50.308 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings-
	c.y.c.StoryAssistController:
	{POST [/api/story/adjust-spirit-stone]}: adjustSpiritStone(SpiritStoneRequest)
	{POST [/api/story/add-cultivation]}: addCultivation(CultivationRequest)
	{GET [/api/story/check-spirit-stone]}: checkPlayerSpiritStone(Integer,Integer)
	{GET [/api/story/check-npc-favorability]}: checkNPCFavorability(Integer,Integer,Integer)
	{POST [/api/story/execute-actions]}: executeStoryActions(ActionsRequest)
	{POST [/api/story/adjust-npc-favorability]}: adjustNPCFavorability(NPCFavorabilityRequest)
2025-05-07 21:25:50.309 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings-
	c.y.c.StoryController:
	{POST [/api/story/choice/record]}: recordChoice(PlayerChoice)
	{POST [/api/story/choice/dialogue]}: makeDialogueChoice(Integer,Integer)
	{GET [/api/story/choice/history/{playerId}]}: getChoiceHistory(Integer)
	{POST [/api/story/options/add]}: addDialogueOption(DialogueOption)
	{GET [/api/story/options/{dialogueId}/{playerId}]}: getDialogueOptions(Integer,Integer)
	{GET [/api/story/dialogue/custom/{playerId}/{npcId}]}: getCustomDialogue(Integer,Integer)
	{GET [/api/story/choice/branch/{playerId}/{branch}]}: getBranchChoices(Integer,String)
	{GET [/api/story/branch/check/{playerId}/{branch}]}: checkBranchEntry(Integer,String)
	{POST [/api/story/quest/branch]}: updateQuestBranch(Integer,Integer,String)
	{DELETE [/api/story/options/delete/{optionId}]}: deleteDialogueOption(Integer)
	{PUT [/api/story/options/update]}: updateDialogueOption(DialogueOption)
2025-05-07 21:25:50.310 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings-
	c.y.c.SystemAdminController:
	{POST [/api/system/fix-spirit-roots]}: fixSpiritRootData()
	{GET [/api/system/spirit-roots/stats]}: getSpiritRootStats()
2025-05-07 21:25:50.310 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings-
	c.y.c.SystemConfigController:
	{GET [/api/system/config/{key}]}: getConfig(String)
	{POST [/api/system/config]}: saveConfig(SystemConfig)
	{GET [/api/system/config/json/{key}]}: getJsonConfig(String)
	{POST [/api/system/config/batch]}: batchSaveConfigs(List)
	{GET [/api/system/config]}: getAllConfigs()
	{DELETE [/api/system/config/{key}]}: deleteConfig(String)
2025-05-07 21:25:50.311 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings-
	c.y.c.SystemInitController:
	{POST [/api/system/init/system-config]}: initSystemConfig()
	{POST [/api/system/init/init-player-skills]}: initPlayerSkills()
2025-05-07 21:25:50.313 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings-
	c.y.c.SystemMaintenanceController:
	{POST [/api/system/fix-data]}: fixData()
	{GET [/api/system/fix-herb-potion-images]}: fixHerbAndPotionImages()
	{GET [/api/system/fix-artifact-images]}: fixArtifactImages()
	{GET [/api/system/fix-other-images]}: fixOtherImages()
	{GET [/api/system/fix-lingqi-dan]}: fixLingqiDan()
	{GET [/api/system/fix-all-item-images]}: fixAllItemImages()
	{GET [/api/system/update-item-images]}: updateItemImages()
	{GET [/api/system/fix-item-image-paths]}: fixItemImagePaths()
	{POST [/api/system/auto-fix-item-images]}: autoFixItemImages()
2025-05-07 21:25:50.315 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings-
	c.y.c.TechniqueStoreController:
	{POST [/api/technique-store/shop-buy/{playerId}/{shopItemId}]}: buyShopTechnique(Integer,Integer)
	{GET [/api/technique-store/shop/{playerId}]}: getShopTechniques(Integer)
	{POST [/api/technique-store/learn-from-npc/{playerId}/{npcId}]}: learnFromNPC(Integer,Integer)
	{POST [/api/technique-store/learn/{playerId}/{techniqueId}]}: learnTechnique(Integer,Integer)
	{GET [/api/technique-store/available/{playerId}]}: getAvailableTechniques(Integer)
	{GET [/api/technique-store/{playerId}/techniques]}: getPlayerTechniques(Integer)
	{POST [/api/technique-store/buy/{playerId}/{techniqueId}]}: buyTechnique(Integer,Integer)
	{POST [/api/technique-store/{playerId}/breakthrough]}: techniqueMasteryBreakthrough(Integer,Map)
2025-05-07 21:25:50.316 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings-
	c.y.m.c.NpcInteractionController:
	{POST [/api/npc/{npcId}/give-gift/{itemId}]}: giveGift(Long,Long,Long)
	{GET [/api/npc/{npcId}/gifts]}: getAvailableGifts(Long,Integer)
	{POST [/api/npc/{npcId}/receive-gift]}: receiveGiftFromNPC(Long,Long,Long)
	{GET [/api/npc/{npcId}/dialogue/{dialogueId}/options]}: getInteractionOptions(Long,Long)
	{POST [/api/npc/{npcId}/special-interaction/{interactionId}]}: performSpecialInteraction(Long,Long,Long)
	{GET [/api/npc/{npcId}/special-interactions]}: getSpecialInteractions(Long)
2025-05-07 21:25:50.318 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings-
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-05-07 21:25:50.320 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping-190 mappings in 'requestMappingHandlerMapping'
2025-05-07 21:25:50.323 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'mvcPatternParser'
2025-05-07 21:25:50.323 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'mvcUrlPathHelper'
2025-05-07 21:25:50.324 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'mvcPathMatcher'
2025-05-07 21:25:50.325 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'viewControllerHandlerMapping'
2025-05-07 21:25:50.325 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
2025-05-07 21:25:50.325 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2025-05-07 21:25:50.326 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'beanNameHandlerMapping'
2025-05-07 21:25:50.326 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
2025-05-07 21:25:50.326 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2025-05-07 21:25:50.327 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings-'beanNameHandlerMapping' {}
2025-05-07 21:25:50.328 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'routerFunctionMapping'
2025-05-07 21:25:50.328 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
2025-05-07 21:25:50.328 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
2025-05-07 21:25:50.329 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'messageConverters'
2025-05-07 21:25:50.329 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
2025-05-07 21:25:50.332 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'stringHttpMessageConverter'
2025-05-07 21:25:50.333 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
2025-05-07 21:25:50.333 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'environment'
2025-05-07 21:25:50.337 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
2025-05-07 21:25:50.337 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
2025-05-07 21:25:50.337 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
2025-05-07 21:25:50.344 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'resourceHandlerMapping'
2025-05-07 21:25:50.345 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
2025-05-07 21:25:50.345 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
2025-05-07 21:25:50.345 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2025-05-07 21:25:50.355 [main] WARN  o.s.web.servlet.resource.ResourceHandlerUtils-Appended trailing slash to static resource location: file:D:\A\mythologyDemo/uploads\/
2025-05-07 21:25:50.356 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings-'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]], /uploads/**=ResourceHttpRequestHandler [URL [file:D:/A/mythologyDemo/uploads//]]}
2025-05-07 21:25:50.358 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'defaultServletHandlerMapping'
2025-05-07 21:25:50.358 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
2025-05-07 21:25:50.358 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
2025-05-07 21:25:50.358 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
2025-05-07 21:25:50.358 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
2025-05-07 21:25:50.367 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'applicationTaskExecutor'
2025-05-07 21:25:50.367 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'threadPoolTaskExecutorBuilder'
2025-05-07 21:25:50.370 [main] DEBUG o.s.scheduling.concurrent.ThreadPoolTaskExecutor-Initializing ExecutorService 'applicationTaskExecutor'
2025-05-07 21:25:50.378 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter-ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-05-07 21:25:50.394 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'mvcViewResolver'
2025-05-07 21:25:50.394 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
2025-05-07 21:25:50.396 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'defaultViewResolver'
2025-05-07 21:25:50.399 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'viewResolver'
2025-05-07 21:25:50.400 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@718607eb'
2025-05-07 21:25:50.402 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'viewResolver'
2025-05-07 21:25:50.407 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'handlerFunctionAdapter'
2025-05-07 21:25:50.408 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'mvcUriComponentsContributor'
2025-05-07 21:25:50.408 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
2025-05-07 21:25:50.408 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
2025-05-07 21:25:50.409 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
2025-05-07 21:25:50.409 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
2025-05-07 21:25:50.409 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'handlerExceptionResolver'
2025-05-07 21:25:50.410 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
2025-05-07 21:25:50.412 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver-ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2025-05-07 21:25:50.413 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration'
2025-05-07 21:25:50.413 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
2025-05-07 21:25:50.414 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' via constructor to bean named 'dataSource'
2025-05-07 21:25:50.414 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
2025-05-07 21:25:50.414 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
2025-05-07 21:25:50.414 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'
2025-05-07 21:25:50.415 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
2025-05-07 21:25:50.415 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
2025-05-07 21:25:50.415 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$MapperScannerRegistrarNotFoundConfiguration'
2025-05-07 21:25:50.415 [main] DEBUG o.m.s.boot.autoconfigure.MybatisAutoConfiguration-Not found configuration for registering mapper bean using @MapperScan, MapperFactoryBean and MapperScannerConfigurer.
2025-05-07 21:25:50.415 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration'
2025-05-07 21:25:50.416 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties'
2025-05-07 21:25:50.417 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' via constructor to bean named 'spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties'
2025-05-07 21:25:50.417 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'mbeanExporter'
2025-05-07 21:25:50.417 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'objectNamingStrategy'
2025-05-07 21:25:50.419 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'mbeanExporter' via factory method to bean named 'objectNamingStrategy'
2025-05-07 21:25:50.419 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'mbeanExporter' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@718607eb'
2025-05-07 21:25:50.422 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'mbeanServer'
2025-05-07 21:25:50.423 [main] DEBUG org.springframework.jmx.support.JmxUtils-Found MBeanServer: com.sun.jmx.mbeanserver.JmxMBeanServer@2db0f6b2
2025-05-07 21:25:50.425 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration'
2025-05-07 21:25:50.426 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'springApplicationAdminRegistrar'
2025-05-07 21:25:50.426 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'springApplicationAdminRegistrar' via factory method to bean named 'environment'
2025-05-07 21:25:50.428 [main] DEBUG o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin-Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
2025-05-07 21:25:50.428 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration'
2025-05-07 21:25:50.428 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
2025-05-07 21:25:50.429 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
2025-05-07 21:25:50.429 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'applicationAvailability'
2025-05-07 21:25:50.430 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration'
2025-05-07 21:25:50.430 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
2025-05-07 21:25:50.431 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'transactionExecutionListeners'
2025-05-07 21:25:50.432 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
2025-05-07 21:25:50.434 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
2025-05-07 21:25:50.434 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
2025-05-07 21:25:50.434 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'lifecycleProcessor'
2025-05-07 21:25:50.434 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
2025-05-07 21:25:50.435 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
2025-05-07 21:25:50.436 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
2025-05-07 21:25:50.436 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration'
2025-05-07 21:25:50.436 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'gsonBuilder'
2025-05-07 21:25:50.437 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'standardGsonBuilderCustomizer'
2025-05-07 21:25:50.437 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
2025-05-07 21:25:50.438 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'standardGsonBuilderCustomizer' via factory method to bean named 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
2025-05-07 21:25:50.439 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'gsonBuilder' via factory method to bean named 'standardGsonBuilderCustomizer'
2025-05-07 21:25:50.447 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'gson'
2025-05-07 21:25:50.447 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'gson' via factory method to bean named 'gsonBuilder'
2025-05-07 21:25:50.461 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
2025-05-07 21:25:50.462 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration'
2025-05-07 21:25:50.462 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.client.HttpClientAutoConfiguration'
2025-05-07 21:25:50.462 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'clientHttpRequestFactoryBuilder'
2025-05-07 21:25:50.462 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'spring.http.client-org.springframework.boot.autoconfigure.http.client.HttpClientProperties'
2025-05-07 21:25:50.464 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'clientHttpRequestFactoryBuilder' via factory method to bean named 'spring.http.client-org.springframework.boot.autoconfigure.http.client.HttpClientProperties'
2025-05-07 21:25:50.469 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'clientHttpRequestFactorySettings'
2025-05-07 21:25:50.470 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'clientHttpRequestFactorySettings' via factory method to bean named 'spring.http.client-org.springframework.boot.autoconfigure.http.client.HttpClientProperties'
2025-05-07 21:25:50.470 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
2025-05-07 21:25:50.472 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
2025-05-07 21:25:50.473 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
2025-05-07 21:25:50.473 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
2025-05-07 21:25:50.474 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
2025-05-07 21:25:50.474 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
2025-05-07 21:25:50.477 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
2025-05-07 21:25:50.477 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
2025-05-07 21:25:50.477 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcClientAutoConfiguration'
2025-05-07 21:25:50.478 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'jdbcClient'
2025-05-07 21:25:50.478 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'jdbcClient' via factory method to bean named 'namedParameterJdbcTemplate'
2025-05-07 21:25:50.479 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration'
2025-05-07 21:25:50.479 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'threadPoolTaskSchedulerBuilder'
2025-05-07 21:25:50.480 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2025-05-07 21:25:50.482 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'threadPoolTaskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2025-05-07 21:25:50.483 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration'
2025-05-07 21:25:50.483 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration' via constructor to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2025-05-07 21:25:50.484 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'simpleAsyncTaskSchedulerBuilder'
2025-05-07 21:25:50.485 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
2025-05-07 21:25:50.486 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'
2025-05-07 21:25:50.486 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
2025-05-07 21:25:50.486 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
2025-05-07 21:25:50.486 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'transactionTemplate'
2025-05-07 21:25:50.487 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
2025-05-07 21:25:50.488 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
2025-05-07 21:25:50.488 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration'
2025-05-07 21:25:50.489 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'httpMessageConvertersRestClientCustomizer'
2025-05-07 21:25:50.489 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'restClientSsl'
2025-05-07 21:25:50.490 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'restClientSsl' via factory method to bean named 'sslBundleRegistry'
2025-05-07 21:25:50.490 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'restClientBuilderConfigurer'
2025-05-07 21:25:50.491 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
2025-05-07 21:25:50.491 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
2025-05-07 21:25:50.491 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
2025-05-07 21:25:50.492 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
2025-05-07 21:25:50.494 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
2025-05-07 21:25:50.494 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'multipartResolver'
2025-05-07 21:25:50.495 [main] DEBUG o.s.b.factory.support.DefaultListableBeanFactory-Creating shared instance of singleton bean 'battleRecordMapper'
2025-05-07 21:25:50.504 [main] DEBUG o.s.context.event.EventListenerMethodProcessor-1 @EventListener methods processed on bean 'databaseDataFixer': {public void com.yiguang.util.DatabaseDataFixer.fixMissingData()=@org.springframework.context.event.EventListener(classes={org.springframework.context.event.ContextRefreshedEvent.class}, condition="", defaultExecution=true, id="", value={org.springframework.context.event.ContextRefreshedEvent.class})}
2025-05-07 21:25:50.509 [main] DEBUG o.s.jmx.export.annotation.AnnotationMBeanExporter-Registering beans for JMX exposure on startup
2025-05-07 21:25:50.509 [main] DEBUG o.s.jmx.export.annotation.AnnotationMBeanExporter-Auto-detecting user-defined JMX MBeans
2025-05-07 21:25:50.510 [main] DEBUG o.s.jmx.export.annotation.AnnotationMBeanExporter-Bean with name 'dataSource' has been autodetected for JMX exposure
2025-05-07 21:25:50.513 [main] DEBUG o.s.jmx.export.annotation.AnnotationMBeanExporter-Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2025-05-07 21:25:50.517 [main] DEBUG o.s.context.support.DefaultLifecycleProcessor-Starting beans in phase -2147483647
2025-05-07 21:25:50.518 [main] DEBUG o.s.context.support.DefaultLifecycleProcessor-Successfully started bean 'springBootLoggingLifecycle'
2025-05-07 21:25:50.518 [main] DEBUG o.s.context.support.DefaultLifecycleProcessor-Starting beans in phase 1073741823
2025-05-07 21:25:50.518 [main] DEBUG o.s.context.support.DefaultLifecycleProcessor-Starting beans in phase 2147481599
2025-05-07 21:25:50.518 [main] INFO  org.apache.coyote.http11.Http11NioProtocol-Starting ProtocolHandler ["http-nio-18888"]
2025-05-07 21:25:50.553 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer-Tomcat started on port 18888 (http) with context path '/'
2025-05-07 21:25:50.554 [main] DEBUG o.s.context.support.DefaultLifecycleProcessor-Successfully started bean 'webServerStartStop'
2025-05-07 21:25:50.554 [main] DEBUG o.s.context.support.DefaultLifecycleProcessor-Starting beans in phase 2147482623
2025-05-07 21:25:50.554 [main] DEBUG o.s.context.support.DefaultLifecycleProcessor-Successfully started bean 'webServerGracefulShutdown'
2025-05-07 21:25:50.560 [main] DEBUG o.s.b.a.logging.ConditionEvaluationReportLogger-


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration matched:
      - @ConditionalOnMissingClass did not find unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   ApplicationAvailabilityAutoConfiguration#applicationAvailability matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.availability.ApplicationAvailability; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration#jdbcConnectionDetails matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnWarDeployment the application is not deployed as a WAR file. (OnWarDeploymentCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   GsonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   GsonAutoConfiguration#gson matched:
      - @ConditionalOnMissingBean (types: com.google.gson.Gson; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonAutoConfiguration#gsonBuilder matched:
      - @ConditionalOnMissingBean (types: com.google.gson.GsonBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonHttpMessageConvertersConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   HttpClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.client.ClientHttpRequestFactory' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   HttpClientAutoConfiguration#clientHttpRequestFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.http.client.ClientHttpRequestFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpClientAutoConfiguration#clientHttpRequestFactorySettings matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.http.client.ClientHttpRequestFactorySettings; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcClientAutoConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate; SearchStrategy: all) found a single bean 'namedParameterJdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.simple.JdbcClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'jakarta.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.ibatis.session.SqlSessionFactory', 'org.mybatis.spring.SqlSessionFactoryBean' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   MybatisAutoConfiguration#sqlSessionFactory matched:
      - @ConditionalOnMissingBean (types: org.apache.ibatis.session.SqlSessionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisAutoConfiguration#sqlSessionTemplate matched:
      - @ConditionalOnMissingBean (types: org.mybatis.spring.SqlSessionTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisAutoConfiguration.MapperScannerRegistrarNotFoundConfiguration matched:
      - @ConditionalOnMissingBean (types: org.mybatis.spring.mapper.MapperFactoryBean,org.mybatis.spring.mapper.MapperScannerConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisLanguageDriverAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.apache.ibatis.scripting.LanguageDriver' (OnClassCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestClientAutoConfiguration#httpMessageConvertersRestClientCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientSsl matched:
      - @ConditionalOnBean (types: org.springframework.boot.ssl.SslBundles; SearchStrategy: all) found bean 'sslBundleRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientSsl; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SslAutoConfiguration#sslBundleRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.ssl.SslBundleRegistry,org.springframework.boot.ssl.SslBundles; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.ThreadPoolTaskExecutorBuilderConfiguration#threadPoolTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.ThreadPoolTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskSchedulingConfigurations.ThreadPoolTaskSchedulerBuilderConfiguration#threadPoolTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionManagerCustomizationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionManagerCustomizationAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#viewNameTranslator matched:
      - @ConditionalOnMissingBean (names: viewNameTranslator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'jakarta.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceCheckpointRestoreConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.crac.Resource' (OnClassCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   ElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.elasticsearch.ElasticsearchClient' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.repository.ElasticsearchRepository' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration#tomcatVirtualThreadsProtocolHandlerCustomizer:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration.GsonHttpMessageConverterConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.JacksonJsonbUnavailable NoneNestedConditions 1 matched 1 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JsonbPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jsonb) did not find property 'spring.mvc.converters.preferred-json-mapper'; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JacksonAvailable @ConditionalOnBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter; SearchStrategy: all) found bean 'mappingJackson2HttpMessageConverter'; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.GsonPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=gson) did not find property 'spring.mvc.converters.preferred-json-mapper' (GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.JakartaWebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HibernateJpaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.persistence.EntityManager' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JdbcTemplateConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) found beans of type 'org.springframework.jdbc.core.JdbcOperations' jdbcTemplate (OnBeanCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.Message' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   JtaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.transaction.Transaction' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.activation.MimeType' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MultipartAutoConfiguration#multipartConfigElement:
      Did not match:
         - @ConditionalOnMissingBean (types: jakarta.servlet.MultipartConfigElement; SearchStrategy: all) found beans of type 'jakarta.servlet.MultipartConfigElement' multipartConfigElement (OnBeanCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.FreeMarkerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriver', 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriverConfig' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.LegacyFreeMarkerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriver' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.LegacyVelocityConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.velocity.Driver' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.ThymeleafConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.thymeleaf.ThymeleafLanguageDriver' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.VelocityConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.mybatis.scripting.velocity.VelocityLanguageDriver', 'org.mybatis.scripting.velocity.VelocityLanguageDriverConfig' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   OAuth2AuthorizationServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2AuthorizationServerJwtAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   PulsarAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   PulsarReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcProxyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.proxy.ProxyConnectionFactory' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.transport.ElasticsearchTransport' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Hooks' (OnClassCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SpringDataWebAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.web.PageableHandlerMethodArgumentResolver' (OnClassCondition)

   SqlInitializationAutoConfiguration:
      Did not match:
         - NoneNestedConditions 1 matched 0 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) matched (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)
      Matched:
         - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder' simpleAsyncTaskExecutorBuilder (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutorVirtualThreads:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder' simpleAsyncTaskSchedulerBuilder (OnBeanCondition)

   TaskSchedulingConfigurations.TaskSchedulerConfiguration:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring6.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.AspectJTransactionManagementConfiguration:
      Did not match:
         - @ConditionalOnBean did not find required type 'org.springframework.transaction.aspectj.AbstractTransactionAspect' (OnBeanCondition)
         - @ConditionalOnBean (types: org.springframework.transaction.aspectj.AbstractTransactionAspect; SearchStrategy: all) did not find any beans of type org.springframework.transaction.aspectj.AbstractTransactionAspect (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) found beans of type 'org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration' org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)
         - Ancestor org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   ValidationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.validation.executable.ExecutableValidator' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ProblemDetailsErrorHandlingConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.problemdetails.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarVersionLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.ee10.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.transaction.TransactionManager' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



2025-05-07 21:25:50.566 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Creating new transaction with name [com.yiguang.util.DatabaseDataFixer.fixMissingData]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-05-07 21:25:50.568 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Acquired Connection [HikariProxyConnection@34644587 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] for JDBC transaction
2025-05-07 21:25:50.570 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Switching JDBC Connection [HikariProxyConnection@34644587 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] to manual commit
2025-05-07 21:25:50.570 [main] INFO  com.yiguang.util.DatabaseDataFixer-开始执行数据修复脚本...
2025-05-07 21:25:50.572 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [-- 修复数据脚本
-- 此脚本用于修复alchemy_recipe、battle_location和battle_record表的数据问题

-- 1. 添加缺失的炼丹材料物品 (ID 320-330)
INSERT OR IGNORE INTO item (id, name, type, subtype, description, rarity, level_requirement, base_value, max_stack, cultivation_level_requirement, category_id) VALUES
-- 高级炼丹材料
(32, '九转金丹草', '灵草', '炼丹', '传说中的草药，是炼制九转金丹的主材料', '神话', 60, 5000, 10, '大罗金仙', 3),
(33, '龙血精华', '灵草', '炼丹', '真龙血液提炼的精华，蕴含强大生命力', '神话', 55, 4000, 10, '太乙真仙', 3),
(34, '天地玄黄气', '灵草', '炼丹', '天地初开时形成的五行之气，凝结成实体', '神话', 58, 4500, 5, '大罗金仙', 3),
(35, '千年雪莲', '灵草', '炼丹', '生长在万年冰川上的雪莲，寒气内蕴', '稀有', 50, 3000, 20, '金仙', 3),
(36, '五行灵芝', '灵草', '炼丹', '吸收五行之气的灵芝，五彩斑斓', '稀有', 45, 2500, 30, '金仙', 3),
(37, '紫金莲子', '灵草', '炼丹', '蕴含纯净灵力的莲子，可辅助修炼', '稀有', 40, 2000, 40, '金仙', 3),
(38, '星辰果', '灵草', '炼丹', '吸收星辰之力的奇异果实，有增强神识之效', '稀有', 42, 2200, 35, '金仙', 3),
(39, '赤焰果', '灵草', '炼丹', '生长在火山口的果实，含有纯净火元素', '稀有', 38, 1800, 45, '金仙', 3),
(40, '九幽冥花', '灵草', '炼丹', '生长在冥界的花朵，可沟通阴阳', '稀有', 53, 3500, 15, '太乙真仙', 3),
(41, '太阴月精', '灵草', '炼丹', '凝结的月之精华，具有平衡阴阳之效', '稀有', 48, 2800, 25, '金仙', 3),
(42, '太阳日精', '灵草', '炼丹', '凝结的日之精华，具有强大的阳刚之力', '稀有', 48, 2800, 25, '金仙', 3)]
2025-05-07 21:25:50.572 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [-- 插入丹药成品 (如果不存在)
INSERT OR IGNORE INTO item (id, name, type, subtype, description, rarity, level_requirement, base_value, max_stack, cultivation_level_requirement, category_id) VALUES
(43, '九转金丹', '丹药', '高级', '太上老君亲传的九转金丹，服用后有脱胎换骨之效', '神话', 60, 15000, 5, '太乙真仙', 4),
(44, '天元丹', '丹药', '高级', '融合天地元气，可助修士突破瓶颈的丹药', '神话', 50, 10000, 10, '金仙', 4),
(45, '太上还魂丹', '丹药', '高级', '起死回生的神丹，可救活已死之人', '神话', 58, 20000, 3, '太乙真仙', 4),
(46, '七转阴阳丹', '丹药', '高级', '调和阴阳，平衡五行的丹药', '稀有', 53, 8000, 15, '金仙', 4),
(47, '九阳神丹', '丹药', '高级', '增强力量，充盈气血的丹药', '稀有', 45, 6000, 20, '金仙', 4),
(48, '玉清固元丹', '丹药', '中级', '固本培元，稳固道基的丹药', '稀有', 40, 5000, 25, '金仙', 4),
(49, '天灵聚神丹', '丹药', '中级', '增强神识，提高法术威力的丹药', '稀有', 42, 5500, 23, '金仙', 4),
(50, '混元护体丹', '丹药', '中级', '形成护体罡气，增强防御的丹药', '稀有', 43, 5300, 24, '金仙', 4)]
2025-05-07 21:25:50.572 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 9, s.id, 5000, 1, 20, '每人限购', 1, 1.0, 1, 0.5  -- 风火轮
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.572 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 10, s.id, 5000, 1, 20, '每人限购', 1, 1.0, 1, 0.5  -- 乾坤圈
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.572 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 11, s.id, 6000, 1, 25, '每人限购', 1, 1.0, 1, 0.5  -- 火尖枪
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.573 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 12, s.id, 8000, 1, 30, '每人限购', 1, 1.0, 1, 0.5  -- 九齿钉耙
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.573 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 13, s.id, 7000, 1, 28, '每人限购', 1, 1.0, 1, 0.5  -- 降妖宝杖
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.573 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 14, s.id, 10000, 1, 35, '每人限购', 1, 1.0, 1, 0.5  -- 玲珑宝塔
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.573 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 15, s.id, 12000, 1, 40, '每人限购', 1, 1.0, 1, 0.5  -- 芭蕉扇
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.573 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 16, s.id, 9000, 1, 32, '每人限购', 1, 1.0, 1, 0.5  -- 混铁棍
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.573 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 17, s.id, 8000, 1, 30, '每人限购', 1, 1.0, 1, 0.5  -- 照妖镜
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.573 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 18, s.id, 15000, 1, 45, '每人限购', 1, 1.0, 1, 0.5  -- 紫金葫芦
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.573 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 19, s.id, 10000, 1, 35, '每人限购', 1, 1.0, 1, 0.5  -- 昊天锤
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.573 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 20, s.id, 12000, 1, 40, '每人限购', 1, 1.0, 1, 0.5  -- 阴阳镜
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.573 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 21, s.id, 20000, 1, 50, '每人限购', 1, 1.0, 1, 0.5  -- 番天印
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.573 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [-- 防具类
INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 22, s.id, 8000, 1, 30, '每人限购', 1, 1.0, 1, 0.5  -- 金刚不坏衣
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.573 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 23, s.id, 10000, 1, 35, '每人限购', 1, 1.0, 1, 0.5  -- 八卦金光衣
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.573 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 24, s.id, 12000, 1, 40, '每人限购', 1, 1.0, 1, 0.5  -- 混元一气袍
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.573 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 25, s.id, 5000, 1, 25, '每人限购', 1, 1.0, 1, 0.5  -- 七星宝帽
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.573 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 26, s.id, 4000, 1, 20, '每人限购', 1, 1.0, 1, 0.5  -- 龙鳞护腕
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.573 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 27, s.id, 3000, 1, 15, '每人限购', 1, 1.0, 1, 0.5  -- 天蚕丝带
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.573 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 28, s.id, 6000, 1, 28, '每人限购', 1, 1.0, 1, 0.5  -- 玄武护盾
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.573 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 29, s.id, 7000, 1, 30, '每人限购', 1, 1.0, 1, 0.5  -- 昊天战靴
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.574 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 30, s.id, 4000, 1, 20, '每人限购', 1, 1.0, 1, 0.5  -- 太极玉佩
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.574 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 31, s.id, 5000, 1, 25, '每人限购', 1, 1.0, 1, 0.5  -- 如意护心镜
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.574 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [-- 灵药类
INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 32, s.id, 20000, 1, 50, '每人限购', 1, 1.0, 1, 0.5  -- 九转金丹草
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.574 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 33, s.id, 15000, 1, 45, '每人限购', 1, 1.0, 1, 0.5  -- 龙涎香
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.574 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 34, s.id, 15000, 1, 45, '每人限购', 1, 1.0, 1, 0.5  -- 凤凰羽
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.574 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 35, s.id, 15000, 1, 45, '每人限购', 1, 1.0, 1, 0.5  -- 麒麟角
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.574 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 36, s.id, 12000, 1, 40, '每人限购', 1, 1.0, 1, 0.5  -- 九叶灵芝
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.574 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 37, s.id, 8000, 1, 30, '每人限购', 1, 1.0, 1, 0.5  -- 月华露
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.574 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 38, s.id, 10000, 1, 35, '每人限购', 1, 1.0, 1, 0.5  -- 玲珑仙果
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.574 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 39, s.id, 12000, 1, 40, '每人限购', 1, 1.0, 1, 0.5  -- 天香碧玉露
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.574 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 40, s.id, 10000, 1, 35, '每人限购', 1, 1.0, 1, 0.5  -- 七色莲心
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.574 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 41, s.id, 8000, 1, 30, '每人限购', 1, 1.0, 1, 0.5  -- 龙须草
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.574 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 42, s.id, 15000, 1, 45, '每人限购', 1, 1.0, 1, 0.5  -- 太阳日精
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.574 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [-- 丹药类
INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 43, s.id, 50000, 1, 60, '每人限购', 1, 1.0, 1, 0.5  -- 九转金丹
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.574 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 44, s.id, 30000, 1, 50, '每人限购', 1, 1.0, 1, 0.5  -- 天元丹
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.574 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 45, s.id, 40000, 1, 55, '每人限购', 1, 1.0, 1, 0.5  -- 太上还魂丹
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.574 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 46, s.id, 35000, 1, 53, '每人限购', 1, 1.0, 1, 0.5  -- 七转阴阳丹
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.574 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 47, s.id, 25000, 1, 45, '每人限购', 1, 1.0, 1, 0.5  -- 九阳神丹
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.574 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 48, s.id, 20000, 1, 40, '每人限购', 1, 1.0, 1, 0.5  -- 玉清固元丹
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.574 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 49, s.id, 22000, 1, 42, '每人限购', 1, 1.0, 1, 0.5  -- 天灵聚神丹
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.574 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 50, s.id, 23000, 1, 43, '每人限购', 1, 1.0, 1, 0.5  -- 混元护体丹
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.574 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 51, s.id, 28000, 1, 48, '每人限购', 1, 1.0, 1, 0.5  -- 五行归一丹
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.574 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 52, s.id, 32000, 1, 52, '每人限购', 1, 1.0, 1, 0.5  -- 龙虎丹
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.574 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 53, s.id, 38000, 1, 56, '每人限购', 1, 1.0, 1, 0.5  -- 紫气东来丹
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.575 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 54, s.id, 42000, 1, 58, '每人限购', 1, 1.0, 1, 0.5  -- 太极化元丹
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.575 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [-- 符箓类
INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 55, s.id, 8000, 1, 30, '每人限购', 1, 1.0, 1, 0.5  -- 玄黄镇魔符
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.575 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 56, s.id, 10000, 1, 35, '每人限购', 1, 1.0, 1, 0.5  -- 紫薇护体符
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.575 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 57, s.id, 12000, 1, 40, '每人限购', 1, 1.0, 1, 0.5  -- 天罡北斗符
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.575 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 58, s.id, 15000, 1, 45, '每人限购', 1, 1.0, 1, 0.5  -- 五雷正法符
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.575 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 59, s.id, 6000, 1, 25, '每人限购', 1, 1.0, 1, 0.5  -- 六甲神行符
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.575 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 60, s.id, 7000, 1, 28, '每人限购', 1, 1.0, 1, 0.5  -- 天眼洞察符
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.575 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 61, s.id, 9000, 1, 32, '每人限购', 1, 1.0, 1, 0.5  -- 阴阳和合符
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.575 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 62, s.id, 5000, 1, 20, '每人限购', 1, 1.0, 1, 0.5  -- 茅山镇尸符
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.575 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 63, s.id, 11000, 1, 38, '每人限购', 1, 1.0, 1, 0.5  -- 太乙分光符
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.575 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT 64, s.id, 8000, 1, 30, '每人限购', 1, 1.0, 1, 0.5  -- 玉清净心符
FROM shop s WHERE s.name = '天灵阁' LIMIT 1]
2025-05-07 21:25:50.575 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [-- 2. 批量上架技能书到天灵阁
INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio)
SELECT i.id, s.id, i.base_value, 1, i.level_requirement, '每人限购', 1, 1.0, 1, 0.5
FROM item i
         JOIN shop s ON s.name = '天灵阁'
WHERE i.type = '技能书' AND i.id >= 1001]
2025-05-07 21:25:50.575 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [-- 2. 确保location表中有所需的地点记录
INSERT OR IGNORE INTO location (id, name, description, level_requirement) VALUES
(1, '青云山脉', '山势连绵起伏，灵气充沛，是修炼的绝佳之地', 1),
(2, '幽冥洞窟', '黑暗阴冷的洞穴，藏有不少凶险和宝藏', 20),
(3, '九龙山', '有九条龙脉汇聚的名山，灵气充沛', 30),
(4, '天元圣地', '上古仙人修炼之处，遗留有诸多传承', 45),
(5, '火焰山', '常年被烈焰环绕的山脉，是修炼火系功法的佳地', 55),
(6, '血海之渊', '弥漫着浓郁血气的深渊，阴气极重', 60),
(7, '东海龙宫', '东海龙王的居所，水灵气浓郁', 35),
(8, '轮回古道', '通往六道轮回的古老通道，神秘莫测', 50),
(9, '太古秘境', '远古遗留的秘境，每隔百年开启一次', 45),
(10, '蜘蛛洞窟', '布满蜘蛛网的阴暗洞穴，危机四伏', 30),
(11, '黑风山', '常年刮着黑风的山脉，多有妖邪出没', 25),
(12, '五指山', '形似五指的奇特山脉，曾镇压过妖猴', 40),
(13, '天宫', '仙人居住的天上宫阙，庄严华丽', 65),
(14, '蟠桃园', '种植仙桃的园林，每三千年一次蟠桃盛会', 55)]
2025-05-07 21:25:50.575 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [-- 3. 清空并重新插入alchemy_recipe表数据
DELETE FROM alchemy_recipe]
2025-05-07 21:25:50.575 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT INTO alchemy_recipe (id, name, description, main_ingredient_id, secondary_ingredient_ids, result_item_id, min_level, success_rate, cultivation_requirement) VALUES
(1, '九转金丹方', '太上老君亲传的九转金丹炼制之法，需极高炼丹术', 320, '321,322,323,324', 410, 60, 30, '大罗金仙'),
(2, '天元丹方', '融合天地元气的丹药配方，可助修士突破瓶颈', 324, '325,326,327', 412, 50, 50, '太乙真仙'),
(3, '太上还魂丹方', '起死回生的神丹配方，救活已死之人', 320, '323,328,724', 420, 58, 40, '大罗金仙'),
(4, '七转阴阳丹方', '调和阴阳，平衡五行的丹方', 324, '329,726,723', 421, 53, 60, '太乙真仙'),
(5, '九阳神丹方', '增强力量，充盈气血的丹方', 325, '327,329,702', 422, 45, 70, '金仙'),
(6, '玉清固元丹方', '固本培元，稳固道基的丹方', 325, '326,702,703', 423, 40, 80, '金仙'),
(7, '天灵聚神丹方', '增强神识，提高法术威力的丹方', 326, '325,705,707', 424, 42, 75, '金仙'),
(8, '混元护体丹方', '形成护体罡气，增强防御的丹方', 326, '327,704,708', 425, 43, 70, '金仙')]
2025-05-07 21:25:50.575 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [-- 4. 清空并重新插入battle_location表数据
DELETE FROM battle_location]
2025-05-07 21:25:50.575 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT INTO battle_location (id, location_id, monster_groups, min_level, environment_effect, background_image, battle_music) VALUES
(1, 1, '1,2,3', 10, '无特殊效果', 'forest.jpg', 'forest_battle.mp3'),
(2, 2, '2,3,4', 20, '每回合降低5%生命值', 'cave.jpg', 'cave_battle.mp3'),
(3, 3, '5,6', 30, '风系技能伤害提高15%', 'mountain.jpg', 'mountain_battle.mp3'),
(4, 4, '7,8', 45, '水系技能伤害提高20%', 'holy_land.jpg', 'holy_battle.mp3'),
(5, 5, '9,10', 55, '火系技能伤害提高25%，每回合灼烧所有单位', 'fire_mountain.jpg', 'fire_battle.mp3'),
(6, 6, '11,12', 60, '暗系技能伤害提高25%，降低治疗效果50%', 'blood_sea.jpg', 'dark_battle.mp3'),
(7, 7, '7,13,14', 35, '水系技能伤害提高15%，降低移动速度', 'river.jpg', 'water_battle.mp3'),
(8, 8, '15,16', 50, '金系技能伤害提高15%，随机眩晕一名角色', 'reincarnation.jpg', 'spirit_battle.mp3'),
(9, 9, '11,17', 45, '随机切换五行属性效果', 'ancient_valley.jpg', 'mystery_battle.mp3'),
(10, 10, '18,19', 30, '风系技能伤害提高10%', 'spider_cave.jpg', 'cave_battle.mp3'),
(11, 11, '20,21', 25, '暗系技能伤害提高10%', 'dark_mountain.jpg', 'dark_battle.mp3'),
(12, 12, '22,23', 40, '土系技能伤害提高15%', 'five_finger_mountain.jpg', 'mountain_battle.mp3'),
(13, 13, '24,25', 65, '光系技能伤害提高25%', 'heaven_palace.jpg', 'heaven_battle.mp3'),
(14, 14, '26,27', 55, '生命恢复效果提高20%', 'heaven_garden.jpg', 'heaven_peaceful.mp3')]
2025-05-07 21:25:50.576 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [-- 注意：battle_record表不需要预置数据，它会在游戏过程中动态生成]
2025-05-07 21:25:50.582 [main] ERROR com.yiguang.util.DatabaseDataFixer-执行SQL语句失败: -- 注意：battle_record表不需要预置数据，它会在游戏过程中动态生成
org.springframework.jdbc.UncategorizedSQLException: StatementCallback; uncategorized SQLException for SQL [-- 注意：battle_record表不需要预置数据，它会在游戏过程中动态生成]; SQL state [null]; error code [0]; The prepared statement has been finalized
	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1557)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:408)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:444)
	at com.yiguang.util.DatabaseDataFixer.fixMissingData(DatabaseDataFixer.java:50)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.yiguang.util.DatabaseDataFixer$$SpringCGLIB$$0.fixMissingData(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:382)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:254)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:173)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:454)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:387)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:630)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
Caused by: java.sql.SQLException: The prepared statement has been finalized
	at org.sqlite.core.NativeDB.throwex(NativeDB.java:503)
	at org.sqlite.core.NativeDB.finalize(Native Method)
	at org.sqlite.core.DB.finalize(DB.java:283)
	at org.sqlite.core.SafeStmtPtr.internalClose(SafeStmtPtr.java:64)
	at org.sqlite.core.SafeStmtPtr.close(SafeStmtPtr.java:53)
	at org.sqlite.core.CoreStatement.exec(CoreStatement.java:97)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:56)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.core.JdbcTemplate$1ExecuteStatementCallback.doInStatement(JdbcTemplate.java:435)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	... 31 common frames omitted
2025-05-07 21:25:50.583 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [SELECT COUNT(*) FROM alchemy_recipe]
2025-05-07 21:25:50.588 [main] INFO  com.yiguang.util.DatabaseDataFixer-alchemy_recipe表中数据数量: 8
2025-05-07 21:25:50.588 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [SELECT COUNT(*) FROM battle_location]
2025-05-07 21:25:50.588 [main] INFO  com.yiguang.util.DatabaseDataFixer-battle_location表中数据数量: 14
2025-05-07 21:25:50.588 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [SELECT COUNT(*) FROM item WHERE id BETWEEN 320 AND 330]
2025-05-07 21:25:50.588 [main] INFO  com.yiguang.util.DatabaseDataFixer-ID为320-330的物品数量: 11
2025-05-07 21:25:50.588 [main] INFO  com.yiguang.util.DatabaseDataFixer-数据修复脚本执行完成
2025-05-07 21:25:50.588 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Initiating transaction commit
2025-05-07 21:25:50.589 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Committing JDBC transaction on Connection [HikariProxyConnection@34644587 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96]
2025-05-07 21:25:50.589 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Releasing JDBC Connection [HikariProxyConnection@34644587 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] after transaction
2025-05-07 21:25:50.589 [main] INFO  com.yiguang.MythologyApplication-Started MythologyApplication in 2.093 seconds (process running for 2.615)
2025-05-07 21:25:50.589 [main] DEBUG o.s.boot.availability.ApplicationAvailabilityBean-Application availability state LivenessState changed to CORRECT
2025-05-07 21:25:50.592 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Creating new transaction with name [com.yiguang.util.DatabaseFixer.run]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-05-07 21:25:50.592 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Acquired Connection [HikariProxyConnection@746247411 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] for JDBC transaction
2025-05-07 21:25:50.592 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Switching JDBC Connection [HikariProxyConnection@746247411 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] to manual commit
2025-05-07 21:25:50.592 [main] INFO  com.yiguang.util.DatabaseFixer-开始执行数据库修复...
2025-05-07 21:25:50.592 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [SELECT COUNT(*) FROM alchemy_recipe]
2025-05-07 21:25:50.592 [main] INFO  com.yiguang.util.DatabaseFixer-alchemy_recipe表当前数据量: 8
2025-05-07 21:25:50.592 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [SELECT COUNT(*) FROM battle_location]
2025-05-07 21:25:50.592 [main] INFO  com.yiguang.util.DatabaseFixer-battle_location表当前数据量: 14
2025-05-07 21:25:50.592 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [SELECT COUNT(*) FROM battle_record]
2025-05-07 21:25:50.592 [main] INFO  com.yiguang.util.DatabaseFixer-battle_record表存在
2025-05-07 21:25:50.592 [main] INFO  com.yiguang.util.DatabaseFixer-表数据已存在，无需修复
2025-05-07 21:25:50.592 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Initiating transaction commit
2025-05-07 21:25:50.592 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Committing JDBC transaction on Connection [HikariProxyConnection@746247411 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96]
2025-05-07 21:25:50.593 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Releasing JDBC Connection [HikariProxyConnection@746247411 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] after transaction
2025-05-07 21:25:50.593 [main] INFO  com.yiguang.config.AutoImagePathFixConfig-应用启动完成，开始执行自动图片路径修复
2025-05-07 21:25:55.192 [http-nio-18888-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]-Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-07 21:25:55.192 [http-nio-18888-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet-Initializing Servlet 'dispatcherServlet'
2025-05-07 21:25:55.192 [http-nio-18888-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet-Detected StandardServletMultipartResolver
2025-05-07 21:25:55.192 [http-nio-18888-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet-Detected AcceptHeaderLocaleResolver
2025-05-07 21:25:55.192 [http-nio-18888-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet-Detected FixedThemeResolver
2025-05-07 21:25:55.193 [http-nio-18888-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet-Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@5bd05a36
2025-05-07 21:25:55.193 [http-nio-18888-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet-Detected org.springframework.web.servlet.support.SessionFlashMapManager@43403788
2025-05-07 21:25:55.193 [http-nio-18888-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet-enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-05-07 21:25:55.193 [http-nio-18888-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet-Completed initialization in 1 ms
2025-05-07 21:25:55.199 [http-nio-18888-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet-POST "/api/battle/init", parameters={}
2025-05-07 21:25:55.203 [http-nio-18888-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping-Mapped to com.yiguang.controller.BattleController#initBattle(Map)
2025-05-07 21:25:55.237 [http-nio-18888-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor-Read "application/json;charset=UTF-8" to [{playerId=1, opponentType=monster, opponentId=1}]
2025-05-07 21:25:55.250 [http-nio-18888-exec-1] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.277 [http-nio-18888-exec-1] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.293 [http-nio-18888-exec-1] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor-Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-07 21:25:55.293 [http-nio-18888-exec-1] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor-Writing [{battleResult=com.yiguang.pojo.BattleResult@46c3ca57, success=true}]
2025-05-07 21:25:55.310 [http-nio-18888-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet-Completed 200 OK
2025-05-07 21:25:55.618 [main] DEBUG org.springframework.web.client.RestTemplate-HTTP GET http://localhost:18888/api/system/fix-all-item-images
2025-05-07 21:25:55.621 [main] DEBUG i.m.c.util.internal.logging.InternalLoggerFactory-Using SLF4J as the default logging framework
2025-05-07 21:25:55.622 [main] DEBUG org.springframework.web.client.RestTemplate-Accept=[text/plain, application/json, application/*+json, */*]
2025-05-07 21:25:55.625 [http-nio-18888-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet-GET "/api/system/fix-all-item-images", parameters={}
2025-05-07 21:25:55.625 [http-nio-18888-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping-Mapped to com.yiguang.controller.SystemMaintenanceController#fixAllItemImages()
2025-05-07 21:25:55.626 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-开始执行一键修复所有物品图片路径
2025-05-07 21:25:55.628 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-执行SQL成功: UPDATE item SET image = REPLACE(image, '/images/it...
2025-05-07 21:25:55.628 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-执行SQL成功: UPDATE item SET image = REPLACE(image, '/images/it...
2025-05-07 21:25:55.628 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-执行SQL成功: UPDATE item SET image = REPLACE(image, '/images/it...
2025-05-07 21:25:55.628 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-执行SQL成功: UPDATE item SET image = REPLACE(image, '/images/it...
2025-05-07 21:25:55.628 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-执行SQL成功: UPDATE item SET image = REPLACE(image, '/images/it...
2025-05-07 21:25:55.628 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-执行SQL成功: UPDATE item SET image = REPLACE(image, '/images/it...
2025-05-07 21:25:55.629 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-执行SQL成功: UPDATE item SET image = REPLACE(image, '/images/it...
2025-05-07 21:25:55.629 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-执行SQL成功: UPDATE item SET image = REPLACE(image, '/images/it...
2025-05-07 21:25:55.629 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-执行SQL成功: UPDATE item SET image = REPLACE(image, '/images/it...
2025-05-07 21:25:55.629 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-执行SQL成功: UPDATE item SET image = '/images/items/material/' ...
2025-05-07 21:25:55.629 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-执行SQL成功: UPDATE item SET image = '/images/items/artifact/' ...
2025-05-07 21:25:55.629 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-执行SQL成功: UPDATE item SET image = REPLACE(image, '/images/it...
2025-05-07 21:25:55.629 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-执行SQL成功: UPDATE item SET image = REPLACE(image, '/images/it...
2025-05-07 21:25:55.629 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-执行SQL成功: UPDATE item SET image = REPLACE(image, '/images/it...
2025-05-07 21:25:55.629 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-执行SQL成功: UPDATE item SET image = REPLACE(image, '/images/it...
2025-05-07 21:25:55.629 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-执行SQL成功: UPDATE item SET image = REPLACE(image, '/images/it...
2025-05-07 21:25:55.629 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-执行SQL成功: UPDATE item SET image = REPLACE(image, '/images/it...
2025-05-07 21:25:55.629 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-执行SQL成功: UPDATE item SET image = REPLACE(image, '/images/it...
2025-05-07 21:25:55.629 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-执行SQL成功: UPDATE item SET image = REPLACE(image, '/images/it...
2025-05-07 21:25:55.629 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-执行SQL成功: UPDATE item SET image = '/images/items/artifact/13...
2025-05-07 21:25:55.629 [http-nio-18888-exec-3] ERROR c.yiguang.controller.SystemMaintenanceController-执行SQL失败: UPDATE item SET image = '/images/items/other/' || SUBSTR(image, INSTR(image, '/', INSTR(image, '/', INSTR(image, '/', 1) + 1) + 1) + 1) WHERE image LIKE '/images/items/%/%' AND image NOT LIKE '/images/items/weapon/%' AND image NOT LIKE '/images/items/armor/%' AND image NOT LIKE '/images/items/potion/%' AND image NOT LIKE '/images/items/material/%' AND image NOT LIKE '/images/items/artifact/%' AND image NOT LIKE '/images/items/accessory/%' AND image NOT LIKE '/images/items/cultivation/%' AND image NOT LIKE '/images/items/other/%';
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (wrong number of arguments to function INSTR())
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB._exec_utf8(Native Method)
	at org.sqlite.core.NativeDB._exec(NativeDB.java:99)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$executeLargeUpdate$2(JDBC3Statement.java:139)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.executeLargeUpdate(JDBC3Statement.java:126)
	at org.sqlite.jdbc3.JDBC3Statement.executeUpdate(JDBC3Statement.java:113)
	at com.zaxxer.hikari.pool.ProxyStatement.executeUpdate(ProxyStatement.java:119)
	at com.zaxxer.hikari.pool.HikariProxyStatement.executeUpdate(HikariProxyStatement.java)
	at com.yiguang.controller.SystemMaintenanceController.fixItemImagePaths(SystemMaintenanceController.java:214)
	at com.yiguang.controller.SystemMaintenanceController.fixAllItemImages(SystemMaintenanceController.java:458)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
2025-05-07 21:25:55.629 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-执行SQL成功: UPDATE item SET image = '/images/items/material/' ...
2025-05-07 21:25:55.629 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-执行SQL成功: UPDATE item SET image = '/images/items/potion/' ||...
2025-05-07 21:25:55.629 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-执行SQL成功: UPDATE item SET image = '/images/items/artifact/' ...
2025-05-07 21:25:55.629 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-跳过SELECT语句: SELECT count(*) FROM sqlite_master WHERE type='table' AND name='system_config';
2025-05-07 21:25:55.629 [http-nio-18888-exec-3] ERROR c.yiguang.controller.SystemMaintenanceController-执行SQL失败: BEGIN;
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (cannot start a transaction within a transaction)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB._exec_utf8(Native Method)
	at org.sqlite.core.NativeDB._exec(NativeDB.java:99)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$executeLargeUpdate$2(JDBC3Statement.java:139)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.executeLargeUpdate(JDBC3Statement.java:126)
	at org.sqlite.jdbc3.JDBC3Statement.executeUpdate(JDBC3Statement.java:113)
	at com.zaxxer.hikari.pool.ProxyStatement.executeUpdate(ProxyStatement.java:119)
	at com.zaxxer.hikari.pool.HikariProxyStatement.executeUpdate(HikariProxyStatement.java)
	at com.yiguang.controller.SystemMaintenanceController.fixItemImagePaths(SystemMaintenanceController.java:214)
	at com.yiguang.controller.SystemMaintenanceController.fixAllItemImages(SystemMaintenanceController.java:458)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
2025-05-07 21:25:55.630 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-跳过SELECT语句: SELECT count(*) FROM sqlite_master WHERE type='table' AND name='system_config';
2025-05-07 21:25:55.630 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-执行SQL成功: COMMIT;
2025-05-07 21:25:55.630 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-执行SQL成功: INSERT OR REPLACE INTO system_config (key, value, ...
2025-05-07 21:25:55.630 [http-nio-18888-exec-3] ERROR c.yiguang.controller.SystemMaintenanceController-执行SQL失败: INSERT OR IGNORE INTO npc (id, name, description, type, location, avatar, dialogue_prefix) VALUES (1, '青云宗掌门', '青云宗宗门门主，德高望重', '宗门', '青云山', '/images/npc/qingyun_master.jpg', '掌门:'), (2, '云虚子', '青云宗炼丹长老', '宗门', '青云山', '/images/npc/yunxuzi.jpg', '云虚子:'), (3, '百法真人', '青云宗阵法长老', '宗门', '青云山', '/images/npc/baifa.jpg', '百法真人:'), (4, '醉风客', '游历天下的奇人', '商人', '万法城', '/images/npc/zuifeng.jpg', '醉风客:'), (5, '云霞仙子', '性情冷淡的仙子', '仙人', '云霞峰', '/images/npc/yunxia.jpg', '云霞仙子:'), (29, '应龙', '上古神龙，能操控风雨雷电，神话生物', '天界', '/images/npc/yinglong.jpg', '应龙:'), (30, '青龙', '东方四灵之首，掌管春季，守护生物', '东方', '/images/npc/qinglong.jpg', '青龙:'), (39, '青云子', '青云宗宗门门主，仙风道骨，德高望重', '青云山', '/images/npc/qingyunzi.jpg', '青云子:');
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (all VALUES must have the same number of terms)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB._exec_utf8(Native Method)
	at org.sqlite.core.NativeDB._exec(NativeDB.java:99)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$executeLargeUpdate$2(JDBC3Statement.java:139)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.executeLargeUpdate(JDBC3Statement.java:126)
	at org.sqlite.jdbc3.JDBC3Statement.executeUpdate(JDBC3Statement.java:113)
	at com.zaxxer.hikari.pool.ProxyStatement.executeUpdate(ProxyStatement.java:119)
	at com.zaxxer.hikari.pool.HikariProxyStatement.executeUpdate(HikariProxyStatement.java)
	at com.yiguang.controller.SystemMaintenanceController.fixItemImagePaths(SystemMaintenanceController.java:214)
	at com.yiguang.controller.SystemMaintenanceController.fixAllItemImages(SystemMaintenanceController.java:458)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
2025-05-07 21:25:55.630 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-跳过SELECT语句: SELECT seq FROM sqlite_sequence WHERE name = 'npc';
2025-05-07 21:25:55.630 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-跳过SELECT语句: SELECT COUNT(*) FROM player_npc_relation WHERE npc_id NOT IN (SELECT id FROM npc);
2025-05-07 21:25:55.630 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-跳过SELECT语句: SELECT COUNT(*) FROM npc_dialogue WHERE npc_id NOT IN (SELECT id FROM npc);
2025-05-07 21:25:55.631 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-执行SQL成功: INSERT OR REPLACE INTO system_config (key, value, ...
2025-05-07 21:25:55.631 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-执行关键更新语句成功
2025-05-07 21:25:55.631 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-修复草药类型物品图片路径：17条
2025-05-07 21:25:55.631 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-修复丹药类型物品图片路径：0条
2025-05-07 21:25:55.631 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-替换草药路径：0条
2025-05-07 21:25:55.631 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-替换灵草路径：0条
2025-05-07 21:25:55.631 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-替换丹药路径：0条
2025-05-07 21:25:55.631 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-修复法器类型物品图片路径：0条
2025-05-07 21:25:55.631 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-替换法器路径：0条
2025-05-07 21:25:55.631 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-修复法宝类型物品图片路径：0条
2025-05-07 21:25:55.631 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-替换法宝路径：0条
2025-05-07 21:25:55.631 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-修复符箓类型物品图片路径：17条
2025-05-07 21:25:55.632 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-替换符箓/符篆路径：0条
2025-05-07 21:25:55.632 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-特别处理阴阳镜图片路径
2025-05-07 21:25:55.632 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-修复其他类型物品图片路径：0条
2025-05-07 21:25:55.632 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-替换其他路径：0条
2025-05-07 21:25:55.632 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-修复灵宠类型物品图片路径：0条
2025-05-07 21:25:55.632 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-替换灵宠路径：0条
2025-05-07 21:25:55.632 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-修复特殊物品成功
2025-05-07 21:25:55.632 [http-nio-18888-exec-3] INFO  c.yiguang.controller.SystemMaintenanceController-修复灵草和符篆类型物品：32条
2025-05-07 21:25:55.635 [http-nio-18888-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor-Using 'application/json', given [text/plain, application/json, application/*+json, */*] and supported [application/json, application/*+json]
2025-05-07 21:25:55.635 [http-nio-18888-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor-Writing [com.yiguang.pojo.Result@188d73b5]
2025-05-07 21:25:55.635 [http-nio-18888-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet-Completed 200 OK
2025-05-07 21:25:55.636 [main] DEBUG org.springframework.web.client.RestTemplate-Response 200 OK
2025-05-07 21:25:55.637 [main] DEBUG org.springframework.web.client.RestTemplate-Reading to [java.lang.String] as "application/json"
2025-05-07 21:25:55.638 [main] INFO  com.yiguang.config.AutoImagePathFixConfig-自动图片路径修复成功: {"code":1,"msg":"一键修复所有物品图片路径成功","data":{"fixFormalTalismanCount":10,"remainingChinesePaths":0,"fixSpiritualHerbCount":22,"fixArtifactImages":{"updatedCount":17,"status":"success"},"fixOtherImages":{"updatedCount":0,"status":"success"},"fixItemImagePaths":{"totalStatements":34,"successCount":26,"errorCount":3,"status":"success"},"fixHerbAndPotionImages":{"updatedCount":17,"status":"success"},"updateItemImages":null}}
2025-05-07 21:25:55.638 [main] INFO  com.yiguang.config.SystemConfigInitializer-正在初始化系统配置...
2025-05-07 21:25:55.639 [main] INFO  com.yiguang.config.SystemConfigInitializer-system_config表已存在
2025-05-07 21:25:55.639 [main] INFO  com.yiguang.config.SystemConfigInitializer-系统配置表已更新
2025-05-07 21:25:55.639 [main] INFO  com.yiguang.config.DatabaseInitializer-开始检查数据库完整性...
2025-05-07 21:25:55.639 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [SELECT quality, element, COUNT(*) as count FROM spirit_root GROUP BY quality, element HAVING COUNT(*) > 1]
2025-05-07 21:25:55.639 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.640 [main] WARN  com.yiguang.config.DatabaseInitializer-检测到灵根表中存在数据重复问题，开始修复...
2025-05-07 21:25:55.640 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Executing SQL script from class path resource [db/fix_spirit_root.sql]
2025-05-07 21:25:55.640 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-8 returned as update count for SQL: CREATE TABLE IF NOT EXISTS spirit_root_backup AS SELECT * FROM spirit_root
2025-05-07 21:25:55.641 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-8 returned as update count for SQL: DROP TABLE IF EXISTS spirit_root
2025-05-07 21:25:55.641 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-8 returned as update count for SQL: CREATE TABLE IF NOT EXISTS spirit_root ( id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT NOT NULL, description TEXT, quality TEXT, element TEXT, cultivation_speed_bonus REAL )
2025-05-07 21:25:55.641 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-22 returned as update count for SQL: INSERT INTO spirit_root (id, name, description, quality, element, cultivation_speed_bonus) VALUES (1, '金灵根', '天生亲和金属性灵力，适合修炼金系法术', '天品', '金', 3.0), (2, '金灵根', '天生亲和金属性灵力，适合修炼金系法术', '地品', '金', 2.0), (3, '金灵根', '天生亲和金属性灵力，适合修炼金系法术', '人品', '金', 1.5), (4, '金灵根', '天生亲和金属性灵力，适合修炼金系法术', '凡品', '金', 1.0), (5, '木灵根', '天生亲和木属性灵力，适合修炼木系法术', '天品', '木', 3.0), (6, '木灵根', '天生亲和木属性灵力，适合修炼木系法术', '地品', '木', 2.0), (7, '木灵根', '天生亲和木属性灵力，适合修炼木系法术', '人品', '木', 1.5), (8, '木灵根', '天生亲和木属性灵力，适合修炼木系法术', '凡品', '木', 1.0), (9, '水灵根', '天生亲和水属性灵力，适合修炼水系法术', '天品', '水', 3.0), (10, '水灵根', '天生亲和水属性灵力，适合修炼水系法术', '地品', '水', 2.0), (11, '水灵根', '天生亲和水属性灵力，适合修炼水系法术', '人品', '水', 1.5), (12, '水灵根', '天生亲和水属性灵力，适合修炼水系法术', '凡品', '水', 1.0), (13, '火灵根', '天生亲和火属性灵力，适合修炼火系法术', '天品', '火', 3.0), (14, '火灵根', '天生亲和火属性灵力，适合修炼火系法术', '地品', '火', 2.0), (15, '火灵根', '天生亲和火属性灵力，适合修炼火系法术', '人品', '火', 1.5), (16, '火灵根', '天生亲和火属性灵力，适合修炼火系法术', '凡品', '火', 1.0), (17, '土灵根', '天生亲和土属性灵力，适合修炼土系法术', '天品', '土', 3.0), (18, '土灵根', '天生亲和土属性灵力，适合修炼土系法术', '地品', '土', 2.0), (19, '土灵根', '天生亲和土属性灵力，适合修炼土系法术', '人品', '土', 1.5), (20, '土灵根', '天生亲和土属性灵力，适合修炼土系法术', '凡品', '土', 1.0), (21, '五行灵根', '五行俱全，适合修炼各系法术', '天品', '五行', 5.0), (22, '变异灵根', '特殊灵根，拥有不可思议的潜力', '天品', '变异', 4.0)
2025-05-07 21:25:55.641 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-1 returned as update count for SQL: DELETE FROM sqlite_sequence WHERE name = 'spirit_root'
2025-05-07 21:25:55.641 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-1 returned as update count for SQL: INSERT INTO sqlite_sequence (name, seq) VALUES ('spirit_root', 22)
2025-05-07 21:25:55.641 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils--1 returned as update count for SQL: SELECT 'Spirit root table has been rebuilt successfully.' AS message
2025-05-07 21:25:55.641 [main] DEBUG o.springframework.jdbc.datasource.init.ScriptUtils-Executed SQL script from class path resource [db/fix_spirit_root.sql] in 1 ms.
2025-05-07 21:25:55.641 [main] INFO  com.yiguang.config.DatabaseInitializer-灵根表数据修复成功
2025-05-07 21:25:55.642 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [SELECT count(*) FROM sqlite_master WHERE type='table' AND name='player_npc_reward_history']
2025-05-07 21:25:55.642 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.642 [main] INFO  com.yiguang.config.DatabaseInitializer-player_npc_reward_history表已存在，无需创建
2025-05-07 21:25:55.642 [main] INFO  com.yiguang.config.DatabaseInitializer-数据库检查和修复完成
2025-05-07 21:25:55.642 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Creating new transaction with name [com.yiguang.service.impl.NPCServiceImpl.onApplicationEvent]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-05-07 21:25:55.642 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Acquired Connection [HikariProxyConnection@1043170851 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] for JDBC transaction
2025-05-07 21:25:55.642 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Switching JDBC Connection [HikariProxyConnection@1043170851 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] to manual commit
2025-05-07 21:25:55.643 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.643 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.647 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.647 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.647 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [SELECT DISTINCT npc_id FROM player_npc_relation WHERE npc_id IS NOT NULL]
2025-05-07 21:25:55.648 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.648 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.648 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [SELECT DISTINCT npc_id FROM npc_dialogue WHERE npc_id IS NOT NULL]
2025-05-07 21:25:55.649 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.649 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.649 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [SELECT DISTINCT npc_id FROM shop WHERE npc_id IS NOT NULL]
2025-05-07 21:25:55.649 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.649 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.649 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [SELECT DISTINCT master_npc_id FROM sect WHERE master_npc_id IS NOT NULL]
2025-05-07 21:25:55.649 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.649 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.649 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [SELECT DISTINCT npc_id FROM npc_interaction_option WHERE npc_id IS NOT NULL]
2025-05-07 21:25:55.649 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.649 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.649 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [SELECT DISTINCT npc_id FROM special_interaction WHERE npc_id IS NOT NULL]
2025-05-07 21:25:55.650 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.650 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.650 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [SELECT DISTINCT npc_id FROM npc_gift WHERE npc_id IS NOT NULL]
2025-05-07 21:25:55.650 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.650 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.650 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [SELECT DISTINCT npc_id FROM dialogue_group WHERE npc_id IS NOT NULL]
2025-05-07 21:25:55.651 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.651 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.651 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [SELECT DISTINCT npc_id FROM player_dialogue_history WHERE npc_id IS NOT NULL]
2025-05-07 21:25:55.651 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.651 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.651 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [SELECT DISTINCT npc_id_1 FROM npc_relationship WHERE npc_id_1 IS NOT NULL]
2025-05-07 21:25:55.651 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.651 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.651 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [SELECT DISTINCT npc_id_2 FROM npc_relationship WHERE npc_id_2 IS NOT NULL]
2025-05-07 21:25:55.651 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.651 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.651 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [SELECT DISTINCT npc_id FROM character_storyline WHERE npc_id IS NOT NULL]
2025-05-07 21:25:55.651 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.651 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.651 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [SELECT DISTINCT npc_id FROM npc_personality WHERE npc_id IS NOT NULL]
2025-05-07 21:25:55.652 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.652 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.652 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [SELECT DISTINCT npc_id FROM player_npc_emotion WHERE npc_id IS NOT NULL]
2025-05-07 21:25:55.652 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.652 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.652 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [SELECT DISTINCT npc_id FROM emotion_trigger_event WHERE npc_id IS NOT NULL]
2025-05-07 21:25:55.652 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.652 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.652 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [SELECT DISTINCT npc_id FROM npc_event_involvement WHERE npc_id IS NOT NULL]
2025-05-07 21:25:55.654 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.654 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.654 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.654 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_npc_relation SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.655 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.655 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.655 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.655 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_dialogue SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.655 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.655 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.655 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.655 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE shop SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.655 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.655 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.655 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.655 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE sect SET master_npc_id = ? WHERE master_npc_id = ?]
2025-05-07 21:25:55.655 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.655 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.655 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.655 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_interaction_option SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.655 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.655 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.655 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.655 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE special_interaction SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.655 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.655 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.655 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.655 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_gift SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.655 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.655 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.655 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.655 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE dialogue_group SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.655 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.655 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.655 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.655 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_dialogue_history SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.655 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.655 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.656 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.656 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_relationship SET npc_id_1 = ? WHERE npc_id_1 = ?]
2025-05-07 21:25:55.656 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.656 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.656 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.656 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_relationship SET npc_id_2 = ? WHERE npc_id_2 = ?]
2025-05-07 21:25:55.656 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.656 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.656 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.656 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE character_storyline SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.656 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.656 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.656 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.656 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_personality SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.656 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.656 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.656 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.656 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_npc_emotion SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.656 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.656 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.656 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.656 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE emotion_trigger_event SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.656 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.656 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.656 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.656 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_event_involvement SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.656 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.656 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [DELETE FROM npc WHERE id = ?]
2025-05-07 21:25:55.657 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.657 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.657 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.657 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_npc_relation SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.657 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.657 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.657 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.657 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_dialogue SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.657 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.657 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.657 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.657 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE shop SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.657 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.657 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.657 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.657 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE sect SET master_npc_id = ? WHERE master_npc_id = ?]
2025-05-07 21:25:55.657 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.657 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.657 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.657 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_interaction_option SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE special_interaction SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_gift SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE dialogue_group SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_dialogue_history SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_relationship SET npc_id_1 = ? WHERE npc_id_1 = ?]
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_relationship SET npc_id_2 = ? WHERE npc_id_2 = ?]
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE character_storyline SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_personality SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_npc_emotion SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE emotion_trigger_event SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_event_involvement SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.658 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [DELETE FROM npc WHERE id = ?]
2025-05-07 21:25:55.659 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.659 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.659 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.659 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_npc_relation SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.659 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.659 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.659 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.659 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_dialogue SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.659 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.659 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.659 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.659 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE shop SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.659 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.659 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.659 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.659 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE sect SET master_npc_id = ? WHERE master_npc_id = ?]
2025-05-07 21:25:55.659 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.659 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.659 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.659 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_interaction_option SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.659 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.659 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.659 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.659 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE special_interaction SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.659 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.659 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.660 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.660 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_gift SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.660 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.660 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.660 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.660 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE dialogue_group SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.660 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.660 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.660 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.660 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_dialogue_history SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.660 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.660 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.660 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.660 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_relationship SET npc_id_1 = ? WHERE npc_id_1 = ?]
2025-05-07 21:25:55.660 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.660 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.660 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.660 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_relationship SET npc_id_2 = ? WHERE npc_id_2 = ?]
2025-05-07 21:25:55.660 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.660 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.660 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.660 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE character_storyline SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.660 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.660 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.660 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.660 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_personality SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.660 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.660 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.660 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.660 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_npc_emotion SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.660 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.660 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.660 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.660 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE emotion_trigger_event SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.660 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.660 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.660 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.660 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_event_involvement SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.660 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.660 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [DELETE FROM npc WHERE id = ?]
2025-05-07 21:25:55.661 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.661 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.661 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.661 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_npc_relation SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.661 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.661 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.661 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.661 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_dialogue SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.661 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.661 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.661 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.661 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE shop SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.661 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.661 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.661 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.661 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE sect SET master_npc_id = ? WHERE master_npc_id = ?]
2025-05-07 21:25:55.661 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.661 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.661 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.661 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_interaction_option SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.661 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.661 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.661 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.661 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE special_interaction SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.661 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.661 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.661 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.661 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_gift SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.661 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.661 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.661 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.661 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE dialogue_group SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.661 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.661 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.661 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.661 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_dialogue_history SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.661 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.661 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.661 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.662 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_relationship SET npc_id_1 = ? WHERE npc_id_1 = ?]
2025-05-07 21:25:55.662 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.662 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.662 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.662 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_relationship SET npc_id_2 = ? WHERE npc_id_2 = ?]
2025-05-07 21:25:55.662 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.662 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.662 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.662 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE character_storyline SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.662 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.662 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.662 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.662 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_personality SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.662 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.662 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.662 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.662 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_npc_emotion SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.662 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.662 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.662 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.662 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE emotion_trigger_event SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.662 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.662 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.662 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.662 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_event_involvement SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.662 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.662 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [DELETE FROM npc WHERE id = ?]
2025-05-07 21:25:55.663 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.663 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.663 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.663 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_npc_relation SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.663 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.663 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.663 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.663 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_dialogue SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.663 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.663 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.663 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.663 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE shop SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.663 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.663 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.663 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.663 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE sect SET master_npc_id = ? WHERE master_npc_id = ?]
2025-05-07 21:25:55.663 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.663 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.663 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.663 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_interaction_option SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.663 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.663 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.663 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.663 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE special_interaction SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.663 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.663 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.664 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.664 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_gift SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.664 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.664 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.664 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.664 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE dialogue_group SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.664 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.664 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.664 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.664 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_dialogue_history SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.664 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.664 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.664 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.664 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_relationship SET npc_id_1 = ? WHERE npc_id_1 = ?]
2025-05-07 21:25:55.664 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.664 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.664 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.664 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_relationship SET npc_id_2 = ? WHERE npc_id_2 = ?]
2025-05-07 21:25:55.664 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.664 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.664 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.664 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE character_storyline SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.664 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.664 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.664 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.664 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_personality SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.664 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.664 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.664 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.664 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_npc_emotion SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.664 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.664 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.665 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.665 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE emotion_trigger_event SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.665 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.665 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.665 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.665 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_event_involvement SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.665 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.665 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [DELETE FROM npc WHERE id = ?]
2025-05-07 21:25:55.666 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.666 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.666 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.666 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_npc_relation SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.666 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.666 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.666 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.666 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_dialogue SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.666 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.666 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.666 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.666 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE shop SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.666 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.666 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.666 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.666 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE sect SET master_npc_id = ? WHERE master_npc_id = ?]
2025-05-07 21:25:55.666 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.666 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.666 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.666 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_interaction_option SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.666 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.666 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.666 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.666 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE special_interaction SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.666 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.666 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.666 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.666 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_gift SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.666 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.666 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.666 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.666 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE dialogue_group SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.666 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.666 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.666 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.666 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_dialogue_history SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.666 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.666 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.667 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.667 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_relationship SET npc_id_1 = ? WHERE npc_id_1 = ?]
2025-05-07 21:25:55.667 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.667 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.667 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.667 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_relationship SET npc_id_2 = ? WHERE npc_id_2 = ?]
2025-05-07 21:25:55.667 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.667 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.667 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.667 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE character_storyline SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.667 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.667 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.667 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.667 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_personality SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.667 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.667 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.667 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.667 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_npc_emotion SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.667 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.667 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.667 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.667 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE emotion_trigger_event SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.667 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.667 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.667 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.667 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_event_involvement SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.667 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.667 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [DELETE FROM npc WHERE id = ?]
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_npc_relation SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_dialogue SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE shop SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE sect SET master_npc_id = ? WHERE master_npc_id = ?]
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_interaction_option SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE special_interaction SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_gift SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE dialogue_group SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_dialogue_history SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_relationship SET npc_id_1 = ? WHERE npc_id_1 = ?]
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_relationship SET npc_id_2 = ? WHERE npc_id_2 = ?]
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE character_storyline SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_personality SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_npc_emotion SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE emotion_trigger_event SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_event_involvement SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.668 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [DELETE FROM npc WHERE id = ?]
2025-05-07 21:25:55.669 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.669 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.669 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.669 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_npc_relation SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.669 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.669 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.669 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.669 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_dialogue SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE shop SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE sect SET master_npc_id = ? WHERE master_npc_id = ?]
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_interaction_option SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE special_interaction SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_gift SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE dialogue_group SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_dialogue_history SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_relationship SET npc_id_1 = ? WHERE npc_id_1 = ?]
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_relationship SET npc_id_2 = ? WHERE npc_id_2 = ?]
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE character_storyline SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_personality SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_npc_emotion SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE emotion_trigger_event SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.670 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.671 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.671 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_event_involvement SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.671 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.671 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [DELETE FROM npc WHERE id = ?]
2025-05-07 21:25:55.671 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.671 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.671 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.671 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_npc_relation SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.671 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.671 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.671 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.671 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_dialogue SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.671 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.671 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.672 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.672 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE shop SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.672 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.672 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.672 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.672 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE sect SET master_npc_id = ? WHERE master_npc_id = ?]
2025-05-07 21:25:55.672 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.672 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.672 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.672 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_interaction_option SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.672 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.672 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.672 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.672 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE special_interaction SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.672 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.672 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.672 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.672 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_gift SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.672 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.672 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.672 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.673 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE dialogue_group SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.673 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.673 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.673 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.673 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_dialogue_history SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.673 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.673 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.673 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.673 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_relationship SET npc_id_1 = ? WHERE npc_id_1 = ?]
2025-05-07 21:25:55.673 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.673 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.673 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.673 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_relationship SET npc_id_2 = ? WHERE npc_id_2 = ?]
2025-05-07 21:25:55.673 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.673 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.673 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.673 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE character_storyline SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.673 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.673 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.673 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.673 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_personality SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.673 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.673 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.673 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.673 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_npc_emotion SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.673 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.673 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.673 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.673 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE emotion_trigger_event SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.673 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.673 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.673 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.673 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_event_involvement SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.673 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.673 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [DELETE FROM npc WHERE id = ?]
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_npc_relation SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_dialogue SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE shop SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE sect SET master_npc_id = ? WHERE master_npc_id = ?]
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_interaction_option SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE special_interaction SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_gift SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE dialogue_group SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_dialogue_history SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_relationship SET npc_id_1 = ? WHERE npc_id_1 = ?]
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_relationship SET npc_id_2 = ? WHERE npc_id_2 = ?]
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE character_storyline SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_personality SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_npc_emotion SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE emotion_trigger_event SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_event_involvement SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.674 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [DELETE FROM npc WHERE id = ?]
2025-05-07 21:25:55.675 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.675 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.675 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.675 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_npc_relation SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.675 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.675 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.675 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.675 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_dialogue SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.675 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.675 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.675 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.675 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE shop SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.675 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.675 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.675 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.675 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE sect SET master_npc_id = ? WHERE master_npc_id = ?]
2025-05-07 21:25:55.675 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.675 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.675 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.675 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_interaction_option SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.675 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.675 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.675 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.675 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE special_interaction SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.675 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.675 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.676 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.676 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_gift SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.676 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.676 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.676 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.676 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE dialogue_group SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.676 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.676 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.676 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.676 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_dialogue_history SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.676 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.676 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.676 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.676 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_relationship SET npc_id_1 = ? WHERE npc_id_1 = ?]
2025-05-07 21:25:55.676 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.676 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.676 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.676 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_relationship SET npc_id_2 = ? WHERE npc_id_2 = ?]
2025-05-07 21:25:55.676 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.676 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.676 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.676 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE character_storyline SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.676 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.676 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.676 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.676 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_personality SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.676 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.676 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.676 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.676 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_npc_emotion SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.676 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.676 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.676 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.676 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE emotion_trigger_event SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.676 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.676 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.676 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.676 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_event_involvement SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.676 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.676 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [DELETE FROM npc WHERE id = ?]
2025-05-07 21:25:55.677 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.677 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.677 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.677 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_npc_relation SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.677 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.677 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.677 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.677 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_dialogue SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE shop SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE sect SET master_npc_id = ? WHERE master_npc_id = ?]
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_interaction_option SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE special_interaction SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_gift SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE dialogue_group SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_dialogue_history SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_relationship SET npc_id_1 = ? WHERE npc_id_1 = ?]
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_relationship SET npc_id_2 = ? WHERE npc_id_2 = ?]
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE character_storyline SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_personality SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_npc_emotion SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE emotion_trigger_event SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_event_involvement SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.678 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [DELETE FROM npc WHERE id = ?]
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_npc_relation SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_dialogue SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE shop SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE sect SET master_npc_id = ? WHERE master_npc_id = ?]
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_interaction_option SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE special_interaction SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_gift SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE dialogue_group SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_dialogue_history SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_relationship SET npc_id_1 = ? WHERE npc_id_1 = ?]
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_relationship SET npc_id_2 = ? WHERE npc_id_2 = ?]
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE character_storyline SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_personality SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_npc_emotion SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE emotion_trigger_event SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_event_involvement SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.679 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [DELETE FROM npc WHERE id = ?]
2025-05-07 21:25:55.680 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.680 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.680 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.680 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_npc_relation SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.680 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.680 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.680 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.680 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_dialogue SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.680 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.680 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.680 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.680 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE shop SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.680 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.680 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.680 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.680 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE sect SET master_npc_id = ? WHERE master_npc_id = ?]
2025-05-07 21:25:55.680 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.680 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.680 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.680 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_interaction_option SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.680 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.680 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.680 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.680 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE special_interaction SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.680 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.680 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.680 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.680 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_gift SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.680 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.680 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.680 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.680 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE dialogue_group SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.680 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.680 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_dialogue_history SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_relationship SET npc_id_1 = ? WHERE npc_id_1 = ?]
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_relationship SET npc_id_2 = ? WHERE npc_id_2 = ?]
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE character_storyline SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_personality SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_npc_emotion SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE emotion_trigger_event SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_event_involvement SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [DELETE FROM npc WHERE id = ?]
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_npc_relation SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_dialogue SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE shop SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE sect SET master_npc_id = ? WHERE master_npc_id = ?]
2025-05-07 21:25:55.681 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_interaction_option SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE special_interaction SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_gift SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE dialogue_group SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_dialogue_history SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_relationship SET npc_id_1 = ? WHERE npc_id_1 = ?]
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_relationship SET npc_id_2 = ? WHERE npc_id_2 = ?]
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE character_storyline SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_personality SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_npc_emotion SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE emotion_trigger_event SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_event_involvement SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.682 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [DELETE FROM npc WHERE id = ?]
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_npc_relation SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_dialogue SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE shop SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE sect SET master_npc_id = ? WHERE master_npc_id = ?]
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_interaction_option SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE special_interaction SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_gift SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE dialogue_group SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_dialogue_history SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_relationship SET npc_id_1 = ? WHERE npc_id_1 = ?]
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_relationship SET npc_id_2 = ? WHERE npc_id_2 = ?]
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.683 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.684 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.684 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE character_storyline SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.684 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.684 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.684 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.684 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_personality SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.684 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.684 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.684 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.684 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_npc_emotion SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.684 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.684 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.684 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.684 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE emotion_trigger_event SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.684 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.684 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.684 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.684 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_event_involvement SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.684 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.684 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [DELETE FROM npc WHERE id = ?]
2025-05-07 21:25:55.684 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.684 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.684 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.684 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_npc_relation SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.684 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.684 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.684 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.684 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_dialogue SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.684 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.684 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.684 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.684 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE shop SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.684 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.684 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.684 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.684 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE sect SET master_npc_id = ? WHERE master_npc_id = ?]
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_interaction_option SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE special_interaction SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_gift SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE dialogue_group SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_dialogue_history SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_relationship SET npc_id_1 = ? WHERE npc_id_1 = ?]
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_relationship SET npc_id_2 = ? WHERE npc_id_2 = ?]
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE character_storyline SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_personality SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_npc_emotion SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE emotion_trigger_event SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_event_involvement SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [DELETE FROM npc WHERE id = ?]
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_npc_relation SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_dialogue SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE shop SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.685 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE sect SET master_npc_id = ? WHERE master_npc_id = ?]
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_interaction_option SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE special_interaction SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_gift SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE dialogue_group SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_dialogue_history SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_relationship SET npc_id_1 = ? WHERE npc_id_1 = ?]
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_relationship SET npc_id_2 = ? WHERE npc_id_2 = ?]
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE character_storyline SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_personality SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_npc_emotion SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE emotion_trigger_event SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_event_involvement SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [DELETE FROM npc WHERE id = ?]
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.686 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_npc_relation SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_dialogue SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE shop SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE sect SET master_npc_id = ? WHERE master_npc_id = ?]
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_interaction_option SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE special_interaction SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_gift SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE dialogue_group SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_dialogue_history SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_relationship SET npc_id_1 = ? WHERE npc_id_1 = ?]
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_relationship SET npc_id_2 = ? WHERE npc_id_2 = ?]
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE character_storyline SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_personality SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player_npc_emotion SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE emotion_trigger_event SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE npc_event_involvement SET npc_id = ? WHERE npc_id = ?]
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [DELETE FROM npc WHERE id = ?]
2025-05-07 21:25:55.687 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL update [UPDATE player_npc_relation SET relation_level = '陌生' WHERE favorability < 30 AND relation_level != '陌生']
2025-05-07 21:25:55.688 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL update [UPDATE player_npc_relation SET relation_level = '熟悉' WHERE favorability >= 30 AND favorability < 60 AND relation_level != '熟悉']
2025-05-07 21:25:55.688 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL update [UPDATE player_npc_relation SET relation_level = '友好' WHERE favorability >= 60 AND favorability < 80 AND relation_level != '友好']
2025-05-07 21:25:55.688 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL update [UPDATE player_npc_relation SET relation_level = '亲密' WHERE favorability >= 80 AND favorability < 95 AND relation_level != '亲密']
2025-05-07 21:25:55.688 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL update [UPDATE player_npc_relation SET relation_level = '尊敬' WHERE favorability >= 95 AND relation_level != '尊敬']
2025-05-07 21:25:55.688 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [SELECT COUNT(*) FROM player_npc_relation WHERE (favorability < 30 AND relation_level = '陌生') OR (favorability >= 30 AND favorability < 60 AND relation_level = '熟悉') OR (favorability >= 60 AND favorability < 80 AND relation_level = '友好') OR (favorability >= 80 AND favorability < 95 AND relation_level = '亲密') OR (favorability >= 95 AND relation_level = '尊敬')]
2025-05-07 21:25:55.689 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Initiating transaction commit
2025-05-07 21:25:55.689 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Committing JDBC transaction on Connection [HikariProxyConnection@1043170851 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96]
2025-05-07 21:25:55.689 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Releasing JDBC Connection [HikariProxyConnection@1043170851 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] after transaction
2025-05-07 21:25:55.689 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Creating new transaction with name [com.yiguang.service.impl.AlchemyRecipeServiceImpl.onApplicationEvent]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-05-07 21:25:55.689 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Acquired Connection [HikariProxyConnection@549357837 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] for JDBC transaction
2025-05-07 21:25:55.689 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Switching JDBC Connection [HikariProxyConnection@549357837 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] to manual commit
2025-05-07 21:25:55.689 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.689 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.690 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Initiating transaction commit
2025-05-07 21:25:55.690 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Committing JDBC transaction on Connection [HikariProxyConnection@549357837 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96]
2025-05-07 21:25:55.690 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Releasing JDBC Connection [HikariProxyConnection@549357837 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] after transaction
2025-05-07 21:25:55.690 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Creating new transaction with name [com.yiguang.service.impl.DatabaseInitializerUtils.onApplicationEvent]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-05-07 21:25:55.690 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Acquired Connection [HikariProxyConnection@1816269091 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] for JDBC transaction
2025-05-07 21:25:55.690 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Switching JDBC Connection [HikariProxyConnection@1816269091 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] to manual commit
2025-05-07 21:25:55.690 [main] INFO  com.yiguang.service.impl.DatabaseInitializerUtils-开始执行数据库初始化...
2025-05-07 21:25:55.690 [main] INFO  com.yiguang.service.impl.DatabaseInitializerUtils-开始修复NPC表...
2025-05-07 21:25:55.690 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.690 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.690 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [PRAGMA foreign_keys = OFF]
2025-05-07 21:25:55.690 [main] INFO  com.yiguang.service.impl.DatabaseInitializerUtils-已禁用外键约束
2025-05-07 21:25:55.690 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [SELECT COUNT(*) FROM npc]
2025-05-07 21:25:55.690 [main] INFO  com.yiguang.service.impl.DatabaseInitializerUtils-当前NPC表中有 48 条记录
2025-05-07 21:25:55.690 [main] INFO  com.yiguang.service.impl.DatabaseInitializerUtils-NPC数据已完整，无需修复
2025-05-07 21:25:55.690 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [SELECT COUNT(*) FROM npc]
2025-05-07 21:25:55.690 [main] INFO  com.yiguang.service.impl.DatabaseInitializerUtils-NPC表修复完成，当前共有 48 条记录
2025-05-07 21:25:55.690 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [PRAGMA foreign_keys = ON]
2025-05-07 21:25:55.690 [main] INFO  com.yiguang.service.impl.DatabaseInitializerUtils-已启用外键约束
2025-05-07 21:25:55.690 [main] INFO  com.yiguang.service.impl.DatabaseInitializerUtils-开始修复炼丹配方表...
2025-05-07 21:25:55.690 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.690 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.690 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [PRAGMA foreign_keys = OFF]
2025-05-07 21:25:55.690 [main] INFO  com.yiguang.service.impl.DatabaseInitializerUtils-已禁用外键约束
2025-05-07 21:25:55.690 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [SELECT id FROM alchemy_recipe]
2025-05-07 21:25:55.690 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO alchemy_recipe (id, name, description, main_ingredient_id, secondary_ingredient_ids, result_item_id, min_level, success_rate, cultivation_requirement) VALUES (1, '九转金丹方', '太上老君亲传的九转金丹炼制之法，需极高炼丹术', 320, '321,322,323,324', 410, 60, 30, '大罗金仙')]
2025-05-07 21:25:55.690 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO alchemy_recipe (id, name, description, main_ingredient_id, secondary_ingredient_ids, result_item_id, min_level, success_rate, cultivation_requirement) VALUES (2, '天元丹方', '融合天地元气的丹药配方，可助修士突破瓶颈', 324, '325,326,327', 412, 50, 50, '太乙真仙')]
2025-05-07 21:25:55.690 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO alchemy_recipe (id, name, description, main_ingredient_id, secondary_ingredient_ids, result_item_id, min_level, success_rate, cultivation_requirement) VALUES (3, '太上还魂丹方', '起死回生的神丹配方，救活已死之人', 320, '323,328,724', 420, 58, 40, '大罗金仙')]
2025-05-07 21:25:55.690 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO alchemy_recipe (id, name, description, main_ingredient_id, secondary_ingredient_ids, result_item_id, min_level, success_rate, cultivation_requirement) VALUES (4, '七转阴阳丹方', '调和阴阳，平衡五行的丹方', 324, '329,726,723', 421, 53, 60, '太乙真仙')]
2025-05-07 21:25:55.690 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO alchemy_recipe (id, name, description, main_ingredient_id, secondary_ingredient_ids, result_item_id, min_level, success_rate, cultivation_requirement) VALUES (5, '九阳神丹方', '增强力量，充盈气血的丹方', 325, '327,329,702', 422, 45, 70, '金仙')]
2025-05-07 21:25:55.690 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO alchemy_recipe (id, name, description, main_ingredient_id, secondary_ingredient_ids, result_item_id, min_level, success_rate, cultivation_requirement) VALUES (6, '玉清固元丹方', '固本培元，稳固道基的丹方', 325, '326,702,703', 423, 40, 80, '金仙')]
2025-05-07 21:25:55.690 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO alchemy_recipe (id, name, description, main_ingredient_id, secondary_ingredient_ids, result_item_id, min_level, success_rate, cultivation_requirement) VALUES (7, '天灵聚神丹方', '增强神识，提高法术威力的丹方', 326, '325,705,707', 424, 42, 75, '金仙')]
2025-05-07 21:25:55.690 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO alchemy_recipe (id, name, description, main_ingredient_id, secondary_ingredient_ids, result_item_id, min_level, success_rate, cultivation_requirement) VALUES (8, '混元护体丹方', '形成护体罡气，增强防御的丹方', 326, '327,704,708', 425, 43, 70, '金仙')]
2025-05-07 21:25:55.690 [main] INFO  com.yiguang.service.impl.DatabaseInitializerUtils-炼丹配方表修复完成
2025-05-07 21:25:55.690 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [PRAGMA foreign_keys = ON]
2025-05-07 21:25:55.690 [main] INFO  com.yiguang.service.impl.DatabaseInitializerUtils-已启用外键约束
2025-05-07 21:25:55.690 [main] INFO  com.yiguang.service.impl.DatabaseInitializerUtils-开始修复战斗场景表...
2025-05-07 21:25:55.690 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.690 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.690 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [PRAGMA foreign_keys = OFF]
2025-05-07 21:25:55.690 [main] INFO  com.yiguang.service.impl.DatabaseInitializerUtils-已禁用外键约束
2025-05-07 21:25:55.690 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [SELECT id FROM battle_location]
2025-05-07 21:25:55.690 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO battle_location (id, location_id, monster_groups, min_level, environment_effect, background_image, battle_music) VALUES (1, 1, '1,2,3', 10, '无特殊效果', 'forest.jpg', 'forest_battle.mp3')]
2025-05-07 21:25:55.690 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO battle_location (id, location_id, monster_groups, min_level, environment_effect, background_image, battle_music) VALUES (2, 2, '2,3,4', 20, '每回合降低5%生命值', 'cave.jpg', 'cave_battle.mp3')]
2025-05-07 21:25:55.690 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO battle_location (id, location_id, monster_groups, min_level, environment_effect, background_image, battle_music) VALUES (3, 3, '5,6', 30, '风系技能伤害提高15%', 'mountain.jpg', 'mountain_battle.mp3')]
2025-05-07 21:25:55.690 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO battle_location (id, location_id, monster_groups, min_level, environment_effect, background_image, battle_music) VALUES (4, 4, '7,8', 45, '水系技能伤害提高20%', 'holy_land.jpg', 'holy_battle.mp3')]
2025-05-07 21:25:55.690 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO battle_location (id, location_id, monster_groups, min_level, environment_effect, background_image, battle_music) VALUES (5, 5, '9,10', 55, '火系技能伤害提高25%，每回合灼烧所有单位', 'fire_mountain.jpg', 'fire_battle.mp3')]
2025-05-07 21:25:55.690 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO battle_location (id, location_id, monster_groups, min_level, environment_effect, background_image, battle_music) VALUES (6, 6, '11,12', 60, '暗系技能伤害提高25%，降低治疗效果50%', 'blood_sea.jpg', 'dark_battle.mp3')]
2025-05-07 21:25:55.690 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO battle_location (id, location_id, monster_groups, min_level, environment_effect, background_image, battle_music) VALUES (7, 7, '7,13,14', 35, '水系技能伤害提高15%，降低移动速度', 'river.jpg', 'water_battle.mp3')]
2025-05-07 21:25:55.690 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO battle_location (id, location_id, monster_groups, min_level, environment_effect, background_image, battle_music) VALUES (8, 8, '15,16', 50, '金系技能伤害提高15%，随机眩晕一名角色', 'reincarnation.jpg', 'spirit_battle.mp3')]
2025-05-07 21:25:55.690 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO battle_location (id, location_id, monster_groups, min_level, environment_effect, background_image, battle_music) VALUES (9, 9, '11,17', 45, '随机切换五行属性效果', 'ancient_valley.jpg', 'mystery_battle.mp3')]
2025-05-07 21:25:55.690 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO battle_location (id, location_id, monster_groups, min_level, environment_effect, background_image, battle_music) VALUES (10, 10, '18,19', 30, '风系技能伤害提高10%', 'spider_cave.jpg', 'cave_battle.mp3')]
2025-05-07 21:25:55.690 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO battle_location (id, location_id, monster_groups, min_level, environment_effect, background_image, battle_music) VALUES (11, 11, '20,21', 25, '暗系技能伤害提高10%', 'dark_mountain.jpg', 'dark_battle.mp3')]
2025-05-07 21:25:55.690 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO battle_location (id, location_id, monster_groups, min_level, environment_effect, background_image, battle_music) VALUES (12, 12, '22,23', 40, '土系技能伤害提高15%', 'five_finger_mountain.jpg', 'mountain_battle.mp3')]
2025-05-07 21:25:55.690 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO battle_location (id, location_id, monster_groups, min_level, environment_effect, background_image, battle_music) VALUES (13, 13, '24,25', 65, '光系技能伤害提高25%', 'heaven_palace.jpg', 'heaven_battle.mp3')]
2025-05-07 21:25:55.690 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO battle_location (id, location_id, monster_groups, min_level, environment_effect, background_image, battle_music) VALUES (14, 14, '26,27', 55, '生命恢复效果提高20%', 'heaven_garden.jpg', 'heaven_peaceful.mp3')]
2025-05-07 21:25:55.691 [main] INFO  com.yiguang.service.impl.DatabaseInitializerUtils-战斗场景表修复完成
2025-05-07 21:25:55.691 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [PRAGMA foreign_keys = ON]
2025-05-07 21:25:55.691 [main] INFO  com.yiguang.service.impl.DatabaseInitializerUtils-已启用外键约束
2025-05-07 21:25:55.691 [main] INFO  com.yiguang.service.impl.DatabaseInitializerUtils-数据库初始化完成
2025-05-07 21:25:55.691 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Initiating transaction commit
2025-05-07 21:25:55.691 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Committing JDBC transaction on Connection [HikariProxyConnection@1816269091 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96]
2025-05-07 21:25:55.691 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Releasing JDBC Connection [HikariProxyConnection@1816269091 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] after transaction
2025-05-07 21:25:55.691 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Creating new transaction with name [com.yiguang.service.impl.BattleLocationServiceImpl.onApplicationEvent]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-05-07 21:25:55.691 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Acquired Connection [HikariProxyConnection@954207047 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] for JDBC transaction
2025-05-07 21:25:55.691 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Switching JDBC Connection [HikariProxyConnection@954207047 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] to manual commit
2025-05-07 21:25:55.691 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.691 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.692 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.693 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.693 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.693 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE battle_record SET battle_location_id = ? WHERE battle_location_id = ?]
2025-05-07 21:25:55.693 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.693 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.693 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.693 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.693 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.693 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.693 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.693 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [DELETE FROM battle_location WHERE id = ?]
2025-05-07 21:25:55.694 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.694 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.694 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.694 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE battle_record SET battle_location_id = ? WHERE battle_location_id = ?]
2025-05-07 21:25:55.694 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.694 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.694 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.694 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.694 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.694 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.694 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.694 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [DELETE FROM battle_location WHERE id = ?]
2025-05-07 21:25:55.694 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.694 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.694 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.694 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE battle_record SET battle_location_id = ? WHERE battle_location_id = ?]
2025-05-07 21:25:55.694 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.694 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.694 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.694 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.694 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.694 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.694 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.694 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [DELETE FROM battle_location WHERE id = ?]
2025-05-07 21:25:55.695 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.695 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.695 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.695 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE battle_record SET battle_location_id = ? WHERE battle_location_id = ?]
2025-05-07 21:25:55.695 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.695 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.695 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.695 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.695 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.695 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.695 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.695 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [DELETE FROM battle_location WHERE id = ?]
2025-05-07 21:25:55.695 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.695 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.695 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.695 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE battle_record SET battle_location_id = ? WHERE battle_location_id = ?]
2025-05-07 21:25:55.695 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.695 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.695 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.695 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.695 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.695 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.695 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.695 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [DELETE FROM battle_location WHERE id = ?]
2025-05-07 21:25:55.696 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.696 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.696 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.696 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE battle_record SET battle_location_id = ? WHERE battle_location_id = ?]
2025-05-07 21:25:55.696 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.696 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.696 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.696 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.696 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.696 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.696 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.696 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [DELETE FROM battle_location WHERE id = ?]
2025-05-07 21:25:55.696 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.696 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.696 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.696 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE battle_record SET battle_location_id = ? WHERE battle_location_id = ?]
2025-05-07 21:25:55.696 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.696 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.696 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.696 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.696 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.696 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.696 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.696 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [DELETE FROM battle_location WHERE id = ?]
2025-05-07 21:25:55.697 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.697 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.697 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.697 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE battle_record SET battle_location_id = ? WHERE battle_location_id = ?]
2025-05-07 21:25:55.697 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.697 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.697 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.698 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.698 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.698 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.698 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.698 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [DELETE FROM battle_location WHERE id = ?]
2025-05-07 21:25:55.698 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.698 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.698 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.698 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE battle_record SET battle_location_id = ? WHERE battle_location_id = ?]
2025-05-07 21:25:55.698 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.698 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.698 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.698 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.698 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.698 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.698 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.698 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [DELETE FROM battle_location WHERE id = ?]
2025-05-07 21:25:55.698 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.698 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.698 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.698 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE battle_record SET battle_location_id = ? WHERE battle_location_id = ?]
2025-05-07 21:25:55.698 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.698 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.699 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.699 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.699 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.699 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.699 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.699 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [DELETE FROM battle_location WHERE id = ?]
2025-05-07 21:25:55.699 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.699 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.700 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.700 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE battle_record SET battle_location_id = ? WHERE battle_location_id = ?]
2025-05-07 21:25:55.700 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.700 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.700 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.700 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.700 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.700 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.700 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.700 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [DELETE FROM battle_location WHERE id = ?]
2025-05-07 21:25:55.700 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.700 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.700 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.700 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE battle_record SET battle_location_id = ? WHERE battle_location_id = ?]
2025-05-07 21:25:55.700 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.700 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.700 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.700 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.700 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.700 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.700 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.700 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [DELETE FROM battle_location WHERE id = ?]
2025-05-07 21:25:55.701 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.701 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.701 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.701 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE battle_record SET battle_location_id = ? WHERE battle_location_id = ?]
2025-05-07 21:25:55.701 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.701 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.701 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.701 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.701 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.701 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.701 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.701 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [DELETE FROM battle_location WHERE id = ?]
2025-05-07 21:25:55.701 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.701 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.701 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.701 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE battle_record SET battle_location_id = ? WHERE battle_location_id = ?]
2025-05-07 21:25:55.701 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.701 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.701 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.701 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.701 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.701 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.701 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.701 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [DELETE FROM battle_location WHERE id = ?]
2025-05-07 21:25:55.701 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Initiating transaction commit
2025-05-07 21:25:55.701 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Committing JDBC transaction on Connection [HikariProxyConnection@954207047 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96]
2025-05-07 21:25:55.701 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Releasing JDBC Connection [HikariProxyConnection@954207047 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] after transaction
2025-05-07 21:25:55.701 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [PRAGMA table_info(cultivation_technique)]
2025-05-07 21:25:55.701 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.701 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.702 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT COUNT(*) FROM cultivation_technique WHERE name = ?]
2025-05-07 21:25:55.702 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.702 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Creating new transaction with name [com.yiguang.service.impl.PlayerTechniqueTableFixer.onApplicationEvent]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-05-07 21:25:55.702 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Acquired Connection [HikariProxyConnection@1989871442 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] for JDBC transaction
2025-05-07 21:25:55.702 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Switching JDBC Connection [HikariProxyConnection@1989871442 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] to manual commit
2025-05-07 21:25:55.702 [main] INFO  c.yiguang.service.impl.PlayerTechniqueTableFixer-开始修复玩家功法表结构...
2025-05-07 21:25:55.702 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [PRAGMA foreign_keys = OFF]
2025-05-07 21:25:55.702 [main] INFO  c.yiguang.service.impl.PlayerTechniqueTableFixer-已禁用外键约束
2025-05-07 21:25:55.702 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.702 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.703 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [PRAGMA foreign_keys = OFF;]
2025-05-07 21:25:55.703 [main] INFO  c.yiguang.service.impl.PlayerTechniqueTableFixer-执行SQL成功: PRAGMA foreign_keys = OFF;...
2025-05-07 21:25:55.703 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [CREATE TABLE player_technique_backup AS SELECT * FROM player_technique;]
2025-05-07 21:25:55.703 [main] INFO  c.yiguang.service.impl.PlayerTechniqueTableFixer-执行SQL成功: CREATE TABLE player_technique_backup AS SELECT * F...
2025-05-07 21:25:55.703 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [DROP TABLE IF EXISTS player_technique;]
2025-05-07 21:25:55.703 [main] INFO  c.yiguang.service.impl.PlayerTechniqueTableFixer-执行SQL成功: DROP TABLE IF EXISTS player_technique;...
2025-05-07 21:25:55.703 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [CREATE TABLE IF NOT EXISTS player_technique (     id INTEGER PRIMARY KEY AUTOINCREMENT,     player_id INTEGER NOT NULL,     technique_id INTEGER NOT NULL,     mastery_level INTEGER DEFAULT 1,     FOREIGN KEY (player_id) REFERENCES player(id),     FOREIGN KEY (technique_id) REFERENCES cultivation_technique(id) );]
2025-05-07 21:25:55.703 [main] INFO  c.yiguang.service.impl.PlayerTechniqueTableFixer-执行SQL成功: CREATE TABLE IF NOT EXISTS player_technique (     ...
2025-05-07 21:25:55.703 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT INTO player_technique (id, player_id, technique_id, mastery_level) SELECT b.id, b.player_id, b.technique_id, b.mastery_level FROM player_technique_backup b JOIN player p ON b.player_id = p.id JOIN cultivation_technique c ON b.technique_id = c.id;]
2025-05-07 21:25:55.703 [main] INFO  c.yiguang.service.impl.PlayerTechniqueTableFixer-执行SQL成功: INSERT INTO player_technique (id, player_id, techn...
2025-05-07 21:25:55.703 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [DROP TABLE player_technique_backup;]
2025-05-07 21:25:55.703 [main] INFO  c.yiguang.service.impl.PlayerTechniqueTableFixer-执行SQL成功: DROP TABLE player_technique_backup;...
2025-05-07 21:25:55.703 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [PRAGMA foreign_keys = ON;]
2025-05-07 21:25:55.703 [main] INFO  c.yiguang.service.impl.PlayerTechniqueTableFixer-执行SQL成功: PRAGMA foreign_keys = ON;...
2025-05-07 21:25:55.703 [main] INFO  c.yiguang.service.impl.PlayerTechniqueTableFixer-SQL文件执行完成: db/fix_player_technique.sql
2025-05-07 21:25:55.703 [main] INFO  c.yiguang.service.impl.PlayerTechniqueTableFixer-玩家功法表结构修复完成
2025-05-07 21:25:55.703 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [PRAGMA foreign_keys = ON]
2025-05-07 21:25:55.703 [main] INFO  c.yiguang.service.impl.PlayerTechniqueTableFixer-已启用外键约束
2025-05-07 21:25:55.703 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Initiating transaction commit
2025-05-07 21:25:55.703 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Committing JDBC transaction on Connection [HikariProxyConnection@1989871442 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96]
2025-05-07 21:25:55.704 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Releasing JDBC Connection [HikariProxyConnection@1989871442 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] after transaction
2025-05-07 21:25:55.704 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-开始执行SQL文件: fix_missing_data.sql
2025-05-07 21:25:55.704 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [PRAGMA foreign_keys = OFF]
2025-05-07 21:25:55.704 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.704 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO item (id, name, type, subtype, description, rarity, level_requirement, base_value, max_stack, cultivation_level_requirement, category_id) VALUES (32, '九转金丹草', '灵草', '炼丹', '传说中的草药，是炼制九转金丹的主材料', '神话', 60, 5000, 10, '大罗金仙', 3), (33, '龙血精华', '灵草', '炼丹', '真龙血液提炼的精华，蕴含强大生命力', '神话', 55, 4000, 10, '太乙真仙', 3), (34, '天地玄黄气', '灵草', '炼丹', '天地初开时形成的五行之气，凝结成实体', '神话', 58, 4500, 5, '大罗金仙', 3), (35, '千年雪莲', '灵草', '炼丹', '生长在万年冰川上的雪莲，寒气内蕴', '稀有', 50, 3000, 20, '金仙', 3), (36, '五行灵芝', '灵草', '炼丹', '吸收五行之气的灵芝，五彩斑斓', '稀有', 45, 2500, 30, '金仙', 3), (37, '紫金莲子', '灵草', '炼丹', '蕴含纯净灵力的莲子，可辅助修炼', '稀有', 40, 2000, 40, '金仙', 3), (38, '星辰果', '灵草', '炼丹', '吸收星辰之力的奇异果实，有增强神识之效', '稀有', 42, 2200, 35, '金仙', 3), (39, '赤焰果', '灵草', '炼丹', '生长在火山口的果实，含有纯净火元素', '稀有', 38, 1800, 45, '金仙', 3), (40, '九幽冥花', '灵草', '炼丹', '生长在冥界的花朵，可沟通阴阳', '稀有', 53, 3500, 15, '太乙真仙', 3), (41, '太阴月精', '灵草', '炼丹', '凝结的月之精华，具有平衡阴阳之效', '稀有', 48, 2800, 25, '金仙', 3), (42, '太阳日精', '灵草', '炼丹', '凝结的日之精华，具有强大的阳刚之力', '稀有', 48, 2800, 25, '金仙', 3);]
2025-05-07 21:25:55.704 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.704 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-执行SQL成功: INSERT OR IGNORE INTO item (id, name, type, subtyp...
2025-05-07 21:25:55.704 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO item (id, name, type, subtype, description, rarity, level_requirement, base_value, max_stack, cultivation_level_requirement, category_id) VALUES (43, '九转金丹', '丹药', '高级', '太上老君亲传的九转金丹，服用后有脱胎换骨之效', '神话', 60, 15000, 5, '太乙真仙', 4), (44, '天元丹', '丹药', '高级', '融合天地元气，可助修士突破瓶颈的丹药', '神话', 50, 10000, 10, '金仙', 4), (45, '太上还魂丹', '丹药', '高级', '起死回生的神丹，可救活已死之人', '神话', 58, 20000, 3, '太乙真仙', 4), (46, '七转阴阳丹', '丹药', '高级', '调和阴阳，平衡五行的丹药', '稀有', 53, 8000, 15, '金仙', 4), (47, '九阳神丹', '丹药', '高级', '增强力量，充盈气血的丹药', '稀有', 45, 6000, 20, '金仙', 4), (48, '玉清固元丹', '丹药', '中级', '固本培元，稳固道基的丹药', '稀有', 40, 5000, 25, '金仙', 4), (49, '天灵聚神丹', '丹药', '中级', '增强神识，提高法术威力的丹药', '稀有', 42, 5500, 23, '金仙', 4), (50, '混元护体丹', '丹药', '中级', '形成护体罡气，增强防御的丹药', '稀有', 43, 5300, 24, '金仙', 4);]
2025-05-07 21:25:55.704 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.704 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-执行SQL成功: INSERT OR IGNORE INTO item (id, name, type, subtyp...
2025-05-07 21:25:55.704 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 9, s.id, 5000, 1, 20, '每人限购', 1, 1.0, 1, 0.5  -- 风火轮 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.704 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.704 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 9, s.id, 5000, 1, 20, '每人限购', 1, 1.0, 1, 0.5  -- 风火轮 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.704 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 9, s.id, 5000, 1, 20, '每人限购', 1, 1.0, 1, 0.5  -- 风火轮 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.704 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 10, s.id, 5000, 1, 20, '每人限购', 1, 1.0, 1, 0.5  -- 乾坤圈 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.704 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.704 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 10, s.id, 5000, 1, 20, '每人限购', 1, 1.0, 1, 0.5  -- 乾坤圈 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.704 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 10, s.id, 5000, 1, 20, '每人限购', 1, 1.0, 1, 0.5  -- 乾坤圈 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.704 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 11, s.id, 6000, 1, 25, '每人限购', 1, 1.0, 1, 0.5  -- 火尖枪 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.704 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.705 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 11, s.id, 6000, 1, 25, '每人限购', 1, 1.0, 1, 0.5  -- 火尖枪 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.705 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 11, s.id, 6000, 1, 25, '每人限购', 1, 1.0, 1, 0.5  -- 火尖枪 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.705 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 12, s.id, 8000, 1, 30, '每人限购', 1, 1.0, 1, 0.5  -- 九齿钉耙 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.705 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.705 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 12, s.id, 8000, 1, 30, '每人限购', 1, 1.0, 1, 0.5  -- 九齿钉耙 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.705 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 12, s.id, 8000, 1, 30, '每人限购', 1, 1.0, 1, 0.5  -- 九齿钉耙 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.705 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 13, s.id, 7000, 1, 28, '每人限购', 1, 1.0, 1, 0.5  -- 降妖宝杖 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.705 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.705 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 13, s.id, 7000, 1, 28, '每人限购', 1, 1.0, 1, 0.5  -- 降妖宝杖 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.705 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 13, s.id, 7000, 1, 28, '每人限购', 1, 1.0, 1, 0.5  -- 降妖宝杖 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.705 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 14, s.id, 10000, 1, 35, '每人限购', 1, 1.0, 1, 0.5  -- 玲珑宝塔 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.705 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.705 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 14, s.id, 10000, 1, 35, '每人限购', 1, 1.0, 1, 0.5  -- 玲珑宝塔 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.705 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 14, s.id, 10000, 1, 35, '每人限购', 1, 1.0, 1, 0.5  -- 玲珑宝塔 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.705 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 15, s.id, 12000, 1, 40, '每人限购', 1, 1.0, 1, 0.5  -- 芭蕉扇 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.705 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.705 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 15, s.id, 12000, 1, 40, '每人限购', 1, 1.0, 1, 0.5  -- 芭蕉扇 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.705 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 15, s.id, 12000, 1, 40, '每人限购', 1, 1.0, 1, 0.5  -- 芭蕉扇 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.705 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 16, s.id, 9000, 1, 32, '每人限购', 1, 1.0, 1, 0.5  -- 混铁棍 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.705 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.705 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 16, s.id, 9000, 1, 32, '每人限购', 1, 1.0, 1, 0.5  -- 混铁棍 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.705 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 16, s.id, 9000, 1, 32, '每人限购', 1, 1.0, 1, 0.5  -- 混铁棍 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.705 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 17, s.id, 8000, 1, 30, '每人限购', 1, 1.0, 1, 0.5  -- 照妖镜 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.705 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.705 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 17, s.id, 8000, 1, 30, '每人限购', 1, 1.0, 1, 0.5  -- 照妖镜 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.705 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 17, s.id, 8000, 1, 30, '每人限购', 1, 1.0, 1, 0.5  -- 照妖镜 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.705 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 18, s.id, 15000, 1, 45, '每人限购', 1, 1.0, 1, 0.5  -- 紫金葫芦 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.705 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.705 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 18, s.id, 15000, 1, 45, '每人限购', 1, 1.0, 1, 0.5  -- 紫金葫芦 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.705 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 18, s.id, 15000, 1, 45, '每人限购', 1, 1.0, 1, 0.5  -- 紫金葫芦 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.705 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 19, s.id, 10000, 1, 35, '每人限购', 1, 1.0, 1, 0.5  -- 昊天锤 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.705 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.705 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 19, s.id, 10000, 1, 35, '每人限购', 1, 1.0, 1, 0.5  -- 昊天锤 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.705 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 19, s.id, 10000, 1, 35, '每人限购', 1, 1.0, 1, 0.5  -- 昊天锤 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.705 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 20, s.id, 12000, 1, 40, '每人限购', 1, 1.0, 1, 0.5  -- 阴阳镜 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.705 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.705 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 20, s.id, 12000, 1, 40, '每人限购', 1, 1.0, 1, 0.5  -- 阴阳镜 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.705 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 20, s.id, 12000, 1, 40, '每人限购', 1, 1.0, 1, 0.5  -- 阴阳镜 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.705 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 21, s.id, 20000, 1, 50, '每人限购', 1, 1.0, 1, 0.5  -- 番天印 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.705 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.705 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 21, s.id, 20000, 1, 50, '每人限购', 1, 1.0, 1, 0.5  -- 番天印 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.705 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 21, s.id, 20000, 1, 50, '每人限购', 1, 1.0, 1, 0.5  -- 番天印 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.705 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 22, s.id, 8000, 1, 30, '每人限购', 1, 1.0, 1, 0.5  -- 金刚不坏衣 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.705 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.705 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 22, s.id, 8000, 1, 30, '每人限购', 1, 1.0, 1, 0.5  -- 金刚不坏衣 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.705 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 22, s.id, 8000, 1, 30, '每人限购', 1, 1.0, 1, 0.5  -- 金刚不坏衣 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.705 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 23, s.id, 10000, 1, 35, '每人限购', 1, 1.0, 1, 0.5  -- 八卦金光衣 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.705 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.705 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 23, s.id, 10000, 1, 35, '每人限购', 1, 1.0, 1, 0.5  -- 八卦金光衣 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.705 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 23, s.id, 10000, 1, 35, '每人限购', 1, 1.0, 1, 0.5  -- 八卦金光衣 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.705 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 24, s.id, 12000, 1, 40, '每人限购', 1, 1.0, 1, 0.5  -- 混元一气袍 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.705 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.705 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 24, s.id, 12000, 1, 40, '每人限购', 1, 1.0, 1, 0.5  -- 混元一气袍 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.705 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 24, s.id, 12000, 1, 40, '每人限购', 1, 1.0, 1, 0.5  -- 混元一气袍 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.705 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 25, s.id, 5000, 1, 25, '每人限购', 1, 1.0, 1, 0.5  -- 七星宝帽 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.705 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.705 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 25, s.id, 5000, 1, 25, '每人限购', 1, 1.0, 1, 0.5  -- 七星宝帽 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.705 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 25, s.id, 5000, 1, 25, '每人限购', 1, 1.0, 1, 0.5  -- 七星宝帽 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.705 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 26, s.id, 4000, 1, 20, '每人限购', 1, 1.0, 1, 0.5  -- 龙鳞护腕 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.705 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.706 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 26, s.id, 4000, 1, 20, '每人限购', 1, 1.0, 1, 0.5  -- 龙鳞护腕 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.706 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 26, s.id, 4000, 1, 20, '每人限购', 1, 1.0, 1, 0.5  -- 龙鳞护腕 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.706 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 27, s.id, 3000, 1, 15, '每人限购', 1, 1.0, 1, 0.5  -- 天蚕丝带 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.706 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.706 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 27, s.id, 3000, 1, 15, '每人限购', 1, 1.0, 1, 0.5  -- 天蚕丝带 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.706 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 27, s.id, 3000, 1, 15, '每人限购', 1, 1.0, 1, 0.5  -- 天蚕丝带 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.706 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 28, s.id, 6000, 1, 28, '每人限购', 1, 1.0, 1, 0.5  -- 玄武护盾 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.706 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.706 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 28, s.id, 6000, 1, 28, '每人限购', 1, 1.0, 1, 0.5  -- 玄武护盾 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.706 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 28, s.id, 6000, 1, 28, '每人限购', 1, 1.0, 1, 0.5  -- 玄武护盾 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.706 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 29, s.id, 7000, 1, 30, '每人限购', 1, 1.0, 1, 0.5  -- 昊天战靴 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.706 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.706 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 29, s.id, 7000, 1, 30, '每人限购', 1, 1.0, 1, 0.5  -- 昊天战靴 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.706 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 29, s.id, 7000, 1, 30, '每人限购', 1, 1.0, 1, 0.5  -- 昊天战靴 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.706 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 30, s.id, 4000, 1, 20, '每人限购', 1, 1.0, 1, 0.5  -- 太极玉佩 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.706 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.706 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 30, s.id, 4000, 1, 20, '每人限购', 1, 1.0, 1, 0.5  -- 太极玉佩 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.706 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 30, s.id, 4000, 1, 20, '每人限购', 1, 1.0, 1, 0.5  -- 太极玉佩 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.706 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 31, s.id, 5000, 1, 25, '每人限购', 1, 1.0, 1, 0.5  -- 如意护心镜 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.706 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.706 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 31, s.id, 5000, 1, 25, '每人限购', 1, 1.0, 1, 0.5  -- 如意护心镜 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.706 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 31, s.id, 5000, 1, 25, '每人限购', 1, 1.0, 1, 0.5  -- 如意护心镜 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.706 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 32, s.id, 20000, 1, 50, '每人限购', 1, 1.0, 1, 0.5  -- 九转金丹草 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.706 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.706 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 32, s.id, 20000, 1, 50, '每人限购', 1, 1.0, 1, 0.5  -- 九转金丹草 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.706 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 32, s.id, 20000, 1, 50, '每人限购', 1, 1.0, 1, 0.5  -- 九转金丹草 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.706 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 33, s.id, 15000, 1, 45, '每人限购', 1, 1.0, 1, 0.5  -- 龙涎香 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.706 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.706 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 33, s.id, 15000, 1, 45, '每人限购', 1, 1.0, 1, 0.5  -- 龙涎香 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.706 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 33, s.id, 15000, 1, 45, '每人限购', 1, 1.0, 1, 0.5  -- 龙涎香 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.706 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 34, s.id, 15000, 1, 45, '每人限购', 1, 1.0, 1, 0.5  -- 凤凰羽 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.706 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.706 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 34, s.id, 15000, 1, 45, '每人限购', 1, 1.0, 1, 0.5  -- 凤凰羽 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.706 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 34, s.id, 15000, 1, 45, '每人限购', 1, 1.0, 1, 0.5  -- 凤凰羽 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.706 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 35, s.id, 15000, 1, 45, '每人限购', 1, 1.0, 1, 0.5  -- 麒麟角 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.706 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.706 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 35, s.id, 15000, 1, 45, '每人限购', 1, 1.0, 1, 0.5  -- 麒麟角 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.706 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 35, s.id, 15000, 1, 45, '每人限购', 1, 1.0, 1, 0.5  -- 麒麟角 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.706 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 36, s.id, 12000, 1, 40, '每人限购', 1, 1.0, 1, 0.5  -- 九叶灵芝 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.706 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.706 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 36, s.id, 12000, 1, 40, '每人限购', 1, 1.0, 1, 0.5  -- 九叶灵芝 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.706 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 36, s.id, 12000, 1, 40, '每人限购', 1, 1.0, 1, 0.5  -- 九叶灵芝 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.706 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 37, s.id, 8000, 1, 30, '每人限购', 1, 1.0, 1, 0.5  -- 月华露 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.706 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.706 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 37, s.id, 8000, 1, 30, '每人限购', 1, 1.0, 1, 0.5  -- 月华露 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.706 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 37, s.id, 8000, 1, 30, '每人限购', 1, 1.0, 1, 0.5  -- 月华露 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.706 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 38, s.id, 10000, 1, 35, '每人限购', 1, 1.0, 1, 0.5  -- 玲珑仙果 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.706 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.706 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 38, s.id, 10000, 1, 35, '每人限购', 1, 1.0, 1, 0.5  -- 玲珑仙果 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.706 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 38, s.id, 10000, 1, 35, '每人限购', 1, 1.0, 1, 0.5  -- 玲珑仙果 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.706 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 39, s.id, 12000, 1, 40, '每人限购', 1, 1.0, 1, 0.5  -- 天香碧玉露 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.706 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.706 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 39, s.id, 12000, 1, 40, '每人限购', 1, 1.0, 1, 0.5  -- 天香碧玉露 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.706 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 39, s.id, 12000, 1, 40, '每人限购', 1, 1.0, 1, 0.5  -- 天香碧玉露 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.706 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 40, s.id, 10000, 1, 35, '每人限购', 1, 1.0, 1, 0.5  -- 七色莲心 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.706 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.706 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 40, s.id, 10000, 1, 35, '每人限购', 1, 1.0, 1, 0.5  -- 七色莲心 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.706 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 40, s.id, 10000, 1, 35, '每人限购', 1, 1.0, 1, 0.5  -- 七色莲心 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.706 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 41, s.id, 8000, 1, 30, '每人限购', 1, 1.0, 1, 0.5  -- 龙须草 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.706 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.706 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 41, s.id, 8000, 1, 30, '每人限购', 1, 1.0, 1, 0.5  -- 龙须草 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.706 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 41, s.id, 8000, 1, 30, '每人限购', 1, 1.0, 1, 0.5  -- 龙须草 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.706 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 42, s.id, 15000, 1, 45, '每人限购', 1, 1.0, 1, 0.5  -- 太阳日精 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.706 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.707 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 42, s.id, 15000, 1, 45, '每人限购', 1, 1.0, 1, 0.5  -- 太阳日精 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.707 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 42, s.id, 15000, 1, 45, '每人限购', 1, 1.0, 1, 0.5  -- 太阳日精 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.707 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 43, s.id, 50000, 1, 60, '每人限购', 1, 1.0, 1, 0.5  -- 九转金丹 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.707 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.707 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 43, s.id, 50000, 1, 60, '每人限购', 1, 1.0, 1, 0.5  -- 九转金丹 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.707 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 43, s.id, 50000, 1, 60, '每人限购', 1, 1.0, 1, 0.5  -- 九转金丹 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.707 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 44, s.id, 30000, 1, 50, '每人限购', 1, 1.0, 1, 0.5  -- 天元丹 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.707 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.707 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 44, s.id, 30000, 1, 50, '每人限购', 1, 1.0, 1, 0.5  -- 天元丹 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.707 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 44, s.id, 30000, 1, 50, '每人限购', 1, 1.0, 1, 0.5  -- 天元丹 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.707 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 45, s.id, 40000, 1, 55, '每人限购', 1, 1.0, 1, 0.5  -- 太上还魂丹 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.707 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.707 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 45, s.id, 40000, 1, 55, '每人限购', 1, 1.0, 1, 0.5  -- 太上还魂丹 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.707 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 45, s.id, 40000, 1, 55, '每人限购', 1, 1.0, 1, 0.5  -- 太上还魂丹 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.707 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 46, s.id, 35000, 1, 53, '每人限购', 1, 1.0, 1, 0.5  -- 七转阴阳丹 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.707 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.707 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 46, s.id, 35000, 1, 53, '每人限购', 1, 1.0, 1, 0.5  -- 七转阴阳丹 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.707 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 46, s.id, 35000, 1, 53, '每人限购', 1, 1.0, 1, 0.5  -- 七转阴阳丹 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.707 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 47, s.id, 25000, 1, 45, '每人限购', 1, 1.0, 1, 0.5  -- 九阳神丹 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.707 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.707 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 47, s.id, 25000, 1, 45, '每人限购', 1, 1.0, 1, 0.5  -- 九阳神丹 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.707 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 47, s.id, 25000, 1, 45, '每人限购', 1, 1.0, 1, 0.5  -- 九阳神丹 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.707 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 48, s.id, 20000, 1, 40, '每人限购', 1, 1.0, 1, 0.5  -- 玉清固元丹 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.707 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.707 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 48, s.id, 20000, 1, 40, '每人限购', 1, 1.0, 1, 0.5  -- 玉清固元丹 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.707 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 48, s.id, 20000, 1, 40, '每人限购', 1, 1.0, 1, 0.5  -- 玉清固元丹 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.707 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 49, s.id, 22000, 1, 42, '每人限购', 1, 1.0, 1, 0.5  -- 天灵聚神丹 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.707 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.707 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 49, s.id, 22000, 1, 42, '每人限购', 1, 1.0, 1, 0.5  -- 天灵聚神丹 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.707 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 49, s.id, 22000, 1, 42, '每人限购', 1, 1.0, 1, 0.5  -- 天灵聚神丹 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.707 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 50, s.id, 23000, 1, 43, '每人限购', 1, 1.0, 1, 0.5  -- 混元护体丹 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.707 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.707 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 50, s.id, 23000, 1, 43, '每人限购', 1, 1.0, 1, 0.5  -- 混元护体丹 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.707 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 50, s.id, 23000, 1, 43, '每人限购', 1, 1.0, 1, 0.5  -- 混元护体丹 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.707 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 51, s.id, 28000, 1, 48, '每人限购', 1, 1.0, 1, 0.5  -- 五行归一丹 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.707 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.707 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 51, s.id, 28000, 1, 48, '每人限购', 1, 1.0, 1, 0.5  -- 五行归一丹 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.707 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 51, s.id, 28000, 1, 48, '每人限购', 1, 1.0, 1, 0.5  -- 五行归一丹 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.707 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 52, s.id, 32000, 1, 52, '每人限购', 1, 1.0, 1, 0.5  -- 龙虎丹 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.707 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.707 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 52, s.id, 32000, 1, 52, '每人限购', 1, 1.0, 1, 0.5  -- 龙虎丹 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.707 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 52, s.id, 32000, 1, 52, '每人限购', 1, 1.0, 1, 0.5  -- 龙虎丹 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.707 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 53, s.id, 38000, 1, 56, '每人限购', 1, 1.0, 1, 0.5  -- 紫气东来丹 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.707 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.707 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 53, s.id, 38000, 1, 56, '每人限购', 1, 1.0, 1, 0.5  -- 紫气东来丹 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.707 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 53, s.id, 38000, 1, 56, '每人限购', 1, 1.0, 1, 0.5  -- 紫气东来丹 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.707 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 54, s.id, 42000, 1, 58, '每人限购', 1, 1.0, 1, 0.5  -- 太极化元丹 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.707 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.707 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 54, s.id, 42000, 1, 58, '每人限购', 1, 1.0, 1, 0.5  -- 太极化元丹 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.707 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 54, s.id, 42000, 1, 58, '每人限购', 1, 1.0, 1, 0.5  -- 太极化元丹 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.707 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 55, s.id, 8000, 1, 30, '每人限购', 1, 1.0, 1, 0.5  -- 玄黄镇魔符 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.707 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.707 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 55, s.id, 8000, 1, 30, '每人限购', 1, 1.0, 1, 0.5  -- 玄黄镇魔符 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.707 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 55, s.id, 8000, 1, 30, '每人限购', 1, 1.0, 1, 0.5  -- 玄黄镇魔符 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.707 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 56, s.id, 10000, 1, 35, '每人限购', 1, 1.0, 1, 0.5  -- 紫薇护体符 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.707 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.707 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 56, s.id, 10000, 1, 35, '每人限购', 1, 1.0, 1, 0.5  -- 紫薇护体符 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.707 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 56, s.id, 10000, 1, 35, '每人限购', 1, 1.0, 1, 0.5  -- 紫薇护体符 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.707 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 57, s.id, 12000, 1, 40, '每人限购', 1, 1.0, 1, 0.5  -- 天罡北斗符 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.707 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.707 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 57, s.id, 12000, 1, 40, '每人限购', 1, 1.0, 1, 0.5  -- 天罡北斗符 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.707 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 57, s.id, 12000, 1, 40, '每人限购', 1, 1.0, 1, 0.5  -- 天罡北斗符 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.707 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 58, s.id, 15000, 1, 45, '每人限购', 1, 1.0, 1, 0.5  -- 五雷正法符 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.707 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.707 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 58, s.id, 15000, 1, 45, '每人限购', 1, 1.0, 1, 0.5  -- 五雷正法符 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.707 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 58, s.id, 15000, 1, 45, '每人限购', 1, 1.0, 1, 0.5  -- 五雷正法符 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.707 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 59, s.id, 6000, 1, 25, '每人限购', 1, 1.0, 1, 0.5  -- 六甲神行符 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.707 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.708 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 59, s.id, 6000, 1, 25, '每人限购', 1, 1.0, 1, 0.5  -- 六甲神行符 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.708 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 59, s.id, 6000, 1, 25, '每人限购', 1, 1.0, 1, 0.5  -- 六甲神行符 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.708 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 60, s.id, 7000, 1, 28, '每人限购', 1, 1.0, 1, 0.5  -- 天眼洞察符 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.708 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.708 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 60, s.id, 7000, 1, 28, '每人限购', 1, 1.0, 1, 0.5  -- 天眼洞察符 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.708 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 60, s.id, 7000, 1, 28, '每人限购', 1, 1.0, 1, 0.5  -- 天眼洞察符 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.708 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 61, s.id, 9000, 1, 32, '每人限购', 1, 1.0, 1, 0.5  -- 阴阳和合符 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.708 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.708 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 61, s.id, 9000, 1, 32, '每人限购', 1, 1.0, 1, 0.5  -- 阴阳和合符 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.708 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 61, s.id, 9000, 1, 32, '每人限购', 1, 1.0, 1, 0.5  -- 阴阳和合符 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.708 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 62, s.id, 5000, 1, 20, '每人限购', 1, 1.0, 1, 0.5  -- 茅山镇尸符 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.708 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.708 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 62, s.id, 5000, 1, 20, '每人限购', 1, 1.0, 1, 0.5  -- 茅山镇尸符 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.708 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 62, s.id, 5000, 1, 20, '每人限购', 1, 1.0, 1, 0.5  -- 茅山镇尸符 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.708 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 63, s.id, 11000, 1, 38, '每人限购', 1, 1.0, 1, 0.5  -- 太乙分光符 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.708 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.708 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 63, s.id, 11000, 1, 38, '每人限购', 1, 1.0, 1, 0.5  -- 太乙分光符 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.708 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 63, s.id, 11000, 1, 38, '每人限购', 1, 1.0, 1, 0.5  -- 太乙分光符 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.708 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 64, s.id, 8000, 1, 30, '每人限购', 1, 1.0, 1, 0.5  -- 玉清净心符 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]
2025-05-07 21:25:55.708 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.708 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-执行SQL失败: INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 64, s.id, 8000, 1, 30, '每人限购', 1, 1.0, 1, 0.5  -- 玉清净心符 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;
2025-05-07 21:25:55.708 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-错误信息: StatementCallback; uncategorized SQLException for SQL [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT 64, s.id, 8000, 1, 30, '每人限购', 1, 1.0, 1, 0.5  -- 玉清净心符 FROM shop s WHERE s.name = '天灵阁' LIMIT 1;]; SQL state [null]; error code [1]; [SQLITE_ERROR] SQL error or missing database (no such column: s.id)
2025-05-07 21:25:55.708 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO shop_item (item_id, shop_id, price, stock, min_level, limit_type, limit_count, discount, is_sellable, sell_ratio) SELECT i.id, s.id, i.base_value, 1, i.level_requirement, '每人限购', 1, 1.0, 1, 0.5 FROM item i          JOIN shop s ON s.name = '天灵阁' WHERE i.type = '技能书' AND i.id >= 1001;]
2025-05-07 21:25:55.708 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.708 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-执行SQL成功: INSERT OR IGNORE INTO shop_item (item_id, shop_id,...
2025-05-07 21:25:55.708 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT OR IGNORE INTO location (id, name, description, level_requirement) VALUES (1, '青云山脉', '山势连绵起伏，灵气充沛，是修炼的绝佳之地', 1), (2, '幽冥洞窟', '黑暗阴冷的洞穴，藏有不少凶险和宝藏', 20), (3, '九龙山', '有九条龙脉汇聚的名山，灵气充沛', 30), (4, '天元圣地', '上古仙人修炼之处，遗留有诸多传承', 45), (5, '火焰山', '常年被烈焰环绕的山脉，是修炼火系功法的佳地', 55), (6, '血海之渊', '弥漫着浓郁血气的深渊，阴气极重', 60), (7, '东海龙宫', '东海龙王的居所，水灵气浓郁', 35), (8, '轮回古道', '通往六道轮回的古老通道，神秘莫测', 50), (9, '太古秘境', '远古遗留的秘境，每隔百年开启一次', 45), (10, '蜘蛛洞窟', '布满蜘蛛网的阴暗洞穴，危机四伏', 30), (11, '黑风山', '常年刮着黑风的山脉，多有妖邪出没', 25), (12, '五指山', '形似五指的奇特山脉，曾镇压过妖猴', 40), (13, '天宫', '仙人居住的天上宫阙，庄严华丽', 65), (14, '蟠桃园', '种植仙桃的园林，每三千年一次蟠桃盛会', 55);]
2025-05-07 21:25:55.708 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.708 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-执行SQL成功: INSERT OR IGNORE INTO location (id, name, descript...
2025-05-07 21:25:55.708 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [DELETE FROM alchemy_recipe;]
2025-05-07 21:25:55.708 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.708 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-执行SQL成功: DELETE FROM alchemy_recipe;...
2025-05-07 21:25:55.708 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT INTO alchemy_recipe (id, name, description, main_ingredient_id, secondary_ingredient_ids, result_item_id, min_level, success_rate, cultivation_requirement) VALUES (1, '九转金丹方', '太上老君亲传的九转金丹炼制之法，需极高炼丹术', 320, '321,322,323,324', 410, 60, 30, '大罗金仙'), (2, '天元丹方', '融合天地元气的丹药配方，可助修士突破瓶颈', 324, '325,326,327', 412, 50, 50, '太乙真仙'), (3, '太上还魂丹方', '起死回生的神丹配方，救活已死之人', 320, '323,328,724', 420, 58, 40, '大罗金仙'), (4, '七转阴阳丹方', '调和阴阳，平衡五行的丹方', 324, '329,726,723', 421, 53, 60, '太乙真仙'), (5, '九阳神丹方', '增强力量，充盈气血的丹方', 325, '327,329,702', 422, 45, 70, '金仙'), (6, '玉清固元丹方', '固本培元，稳固道基的丹方', 325, '326,702,703', 423, 40, 80, '金仙'), (7, '天灵聚神丹方', '增强神识，提高法术威力的丹方', 326, '325,705,707', 424, 42, 75, '金仙'), (8, '混元护体丹方', '形成护体罡气，增强防御的丹方', 326, '327,704,708', 425, 43, 70, '金仙');]
2025-05-07 21:25:55.708 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.708 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-执行SQL成功: INSERT INTO alchemy_recipe (id, name, description,...
2025-05-07 21:25:55.708 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [DELETE FROM battle_location;]
2025-05-07 21:25:55.708 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.708 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-执行SQL成功: DELETE FROM battle_location;...
2025-05-07 21:25:55.708 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [INSERT INTO battle_location (id, location_id, monster_groups, min_level, environment_effect, background_image, battle_music) VALUES (1, 1, '1,2,3', 10, '无特殊效果', 'forest.jpg', 'forest_battle.mp3'), (2, 2, '2,3,4', 20, '每回合降低5%生命值', 'cave.jpg', 'cave_battle.mp3'), (3, 3, '5,6', 30, '风系技能伤害提高15%', 'mountain.jpg', 'mountain_battle.mp3'), (4, 4, '7,8', 45, '水系技能伤害提高20%', 'holy_land.jpg', 'holy_battle.mp3'), (5, 5, '9,10', 55, '火系技能伤害提高25%，每回合灼烧所有单位', 'fire_mountain.jpg', 'fire_battle.mp3'), (6, 6, '11,12', 60, '暗系技能伤害提高25%，降低治疗效果50%', 'blood_sea.jpg', 'dark_battle.mp3'), (7, 7, '7,13,14', 35, '水系技能伤害提高15%，降低移动速度', 'river.jpg', 'water_battle.mp3'), (8, 8, '15,16', 50, '金系技能伤害提高15%，随机眩晕一名角色', 'reincarnation.jpg', 'spirit_battle.mp3'), (9, 9, '11,17', 45, '随机切换五行属性效果', 'ancient_valley.jpg', 'mystery_battle.mp3'), (10, 10, '18,19', 30, '风系技能伤害提高10%', 'spider_cave.jpg', 'cave_battle.mp3'), (11, 11, '20,21', 25, '暗系技能伤害提高10%', 'dark_mountain.jpg', 'dark_battle.mp3'), (12, 12, '22,23', 40, '土系技能伤害提高15%', 'five_finger_mountain.jpg', 'mountain_battle.mp3'), (13, 13, '24,25', 65, '光系技能伤害提高25%', 'heaven_palace.jpg', 'heaven_battle.mp3'), (14, 14, '26,27', 55, '生命恢复效果提高20%', 'heaven_garden.jpg', 'heaven_peaceful.mp3');]
2025-05-07 21:25:55.708 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.709 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-执行SQL成功: INSERT INTO battle_location (id, location_id, mons...
2025-05-07 21:25:55.709 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-SQL文件执行完成: fix_missing_data.sql
2025-05-07 21:25:55.709 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [PRAGMA foreign_keys = ON]
2025-05-07 21:25:55.709 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.709 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.709 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.709 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.709 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [PRAGMA table_info(alchemy_recipe)]
2025-05-07 21:25:55.709 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.709 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Creating new transaction with name [com.yiguang.service.impl.DatabaseFixerUtils.deduplicateTable]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-05-07 21:25:55.709 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Acquired Connection [HikariProxyConnection@1504267535 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] for JDBC transaction
2025-05-07 21:25:55.709 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Switching JDBC Connection [HikariProxyConnection@1504267535 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] to manual commit
2025-05-07 21:25:55.710 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-开始对表 alchemy_recipe 进行数据去重处理
2025-05-07 21:25:55.710 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [PRAGMA foreign_keys = OFF]
2025-05-07 21:25:55.710 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-外键约束已禁用
2025-05-07 21:25:55.710 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [PRAGMA table_info(alchemy_recipe)]
2025-05-07 21:25:55.710 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-创建临时表 alchemy_recipe_temp
2025-05-07 21:25:55.710 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [DROP TABLE IF EXISTS alchemy_recipe_temp]
2025-05-07 21:25:55.710 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [CREATE TABLE alchemy_recipe_temp AS SELECT * FROM alchemy_recipe WHERE 1=0]
2025-05-07 21:25:55.710 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [PRAGMA table_info(alchemy_recipe)]
2025-05-07 21:25:55.710 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [PRAGMA table_info(alchemy_recipe_temp)]
2025-05-07 21:25:55.710 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-从原表中选取不重复数据并插入临时表
2025-05-07 21:25:55.710 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL update [INSERT INTO alchemy_recipe_temp SELECT * FROM alchemy_recipe t1 WHERE id = (SELECT MIN(id) FROM alchemy_recipe t2 WHERE t1.id = t2.id AND t1.name = t2.name AND t1.description = t2.description AND t1.main_ingredient_id = t2.main_ingredient_id AND t1.secondary_ingredient_ids = t2.secondary_ingredient_ids AND t1.result_item_id = t2.result_item_id AND t1.min_level = t2.min_level AND t1.success_rate = t2.success_rate AND t1.cultivation_requirement = t2.cultivation_requirement)]
2025-05-07 21:25:55.710 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-成功插入 8 行不重复数据到临时表
2025-05-07 21:25:55.710 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-删除原表 alchemy_recipe
2025-05-07 21:25:55.710 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [DROP TABLE alchemy_recipe]
2025-05-07 21:25:55.711 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-将临时表 alchemy_recipe_temp 重命名为 alchemy_recipe
2025-05-07 21:25:55.711 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [ALTER TABLE alchemy_recipe_temp RENAME TO alchemy_recipe]
2025-05-07 21:25:55.713 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-表 alchemy_recipe 去重完成
2025-05-07 21:25:55.713 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-重新启用外键约束
2025-05-07 21:25:55.713 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [PRAGMA foreign_keys = ON]
2025-05-07 21:25:55.713 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Initiating transaction commit
2025-05-07 21:25:55.713 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Committing JDBC transaction on Connection [HikariProxyConnection@1504267535 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96]
2025-05-07 21:25:55.713 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Releasing JDBC Connection [HikariProxyConnection@1504267535 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] after transaction
2025-05-07 21:25:55.713 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [SELECT COUNT(*) FROM alchemy_recipe]
2025-05-07 21:25:55.713 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.713 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.713 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.713 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.713 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [PRAGMA table_info(battle_location)]
2025-05-07 21:25:55.713 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.713 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Creating new transaction with name [com.yiguang.service.impl.DatabaseFixerUtils.deduplicateTable]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-05-07 21:25:55.713 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Acquired Connection [HikariProxyConnection@1849052959 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] for JDBC transaction
2025-05-07 21:25:55.713 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Switching JDBC Connection [HikariProxyConnection@1849052959 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] to manual commit
2025-05-07 21:25:55.713 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-开始对表 battle_location 进行数据去重处理
2025-05-07 21:25:55.713 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [PRAGMA foreign_keys = OFF]
2025-05-07 21:25:55.713 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-外键约束已禁用
2025-05-07 21:25:55.713 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [PRAGMA table_info(battle_location)]
2025-05-07 21:25:55.714 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-创建临时表 battle_location_temp
2025-05-07 21:25:55.714 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [DROP TABLE IF EXISTS battle_location_temp]
2025-05-07 21:25:55.714 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [CREATE TABLE battle_location_temp AS SELECT * FROM battle_location WHERE 1=0]
2025-05-07 21:25:55.714 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [PRAGMA table_info(battle_location)]
2025-05-07 21:25:55.714 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [PRAGMA table_info(battle_location_temp)]
2025-05-07 21:25:55.714 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-从原表中选取不重复数据并插入临时表
2025-05-07 21:25:55.714 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL update [INSERT INTO battle_location_temp SELECT * FROM battle_location t1 WHERE id = (SELECT MIN(id) FROM battle_location t2 WHERE t1.id = t2.id AND t1.location_id = t2.location_id AND t1.monster_groups = t2.monster_groups AND t1.min_level = t2.min_level AND t1.environment_effect = t2.environment_effect AND t1.background_image = t2.background_image AND t1.battle_music = t2.battle_music)]
2025-05-07 21:25:55.714 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-成功插入 14 行不重复数据到临时表
2025-05-07 21:25:55.714 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-删除原表 battle_location
2025-05-07 21:25:55.714 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [DROP TABLE battle_location]
2025-05-07 21:25:55.714 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-将临时表 battle_location_temp 重命名为 battle_location
2025-05-07 21:25:55.714 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [ALTER TABLE battle_location_temp RENAME TO battle_location]
2025-05-07 21:25:55.716 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-表 battle_location 去重完成
2025-05-07 21:25:55.716 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-重新启用外键约束
2025-05-07 21:25:55.716 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [PRAGMA foreign_keys = ON]
2025-05-07 21:25:55.716 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Initiating transaction commit
2025-05-07 21:25:55.716 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Committing JDBC transaction on Connection [HikariProxyConnection@1849052959 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96]
2025-05-07 21:25:55.716 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Releasing JDBC Connection [HikariProxyConnection@1849052959 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] after transaction
2025-05-07 21:25:55.716 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [SELECT COUNT(*) FROM battle_location]
2025-05-07 21:25:55.716 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.716 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.716 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.716 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.716 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [PRAGMA table_info(npc)]
2025-05-07 21:25:55.716 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.716 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Creating new transaction with name [com.yiguang.service.impl.DatabaseFixerUtils.deduplicateTable]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-05-07 21:25:55.716 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Acquired Connection [HikariProxyConnection@1117681940 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] for JDBC transaction
2025-05-07 21:25:55.716 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Switching JDBC Connection [HikariProxyConnection@1117681940 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] to manual commit
2025-05-07 21:25:55.716 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-开始对表 npc 进行数据去重处理
2025-05-07 21:25:55.716 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [PRAGMA foreign_keys = OFF]
2025-05-07 21:25:55.716 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-外键约束已禁用
2025-05-07 21:25:55.716 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [PRAGMA table_info(npc)]
2025-05-07 21:25:55.716 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-创建临时表 npc_temp
2025-05-07 21:25:55.716 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [DROP TABLE IF EXISTS npc_temp]
2025-05-07 21:25:55.716 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [CREATE TABLE npc_temp AS SELECT * FROM npc WHERE 1=0]
2025-05-07 21:25:55.717 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [PRAGMA table_info(npc)]
2025-05-07 21:25:55.717 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [PRAGMA table_info(npc_temp)]
2025-05-07 21:25:55.717 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-从原表中选取不重复数据并插入临时表
2025-05-07 21:25:55.717 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL update [INSERT INTO npc_temp SELECT * FROM npc t1 WHERE id = (SELECT MIN(id) FROM npc t2 WHERE t1.id = t2.id AND t1.name = t2.name AND t1.description = t2.description AND t1.type = t2.type AND t1.location = t2.location AND t1.avatar = t2.avatar AND t1.dialogue_prefix = t2.dialogue_prefix)]
2025-05-07 21:25:55.717 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-成功插入 48 行不重复数据到临时表
2025-05-07 21:25:55.717 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-删除原表 npc
2025-05-07 21:25:55.717 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [DROP TABLE npc]
2025-05-07 21:25:55.722 [main] ERROR com.yiguang.service.impl.DatabaseFixerUtils-删除原表失败: StatementCallback; uncategorized SQLException for SQL [DROP TABLE npc]; SQL state [null]; error code [19]; [SQLITE_CONSTRAINT_FOREIGNKEY] A foreign key constraint failed (FOREIGN KEY constraint failed)
org.springframework.jdbc.UncategorizedSQLException: StatementCallback; uncategorized SQLException for SQL [DROP TABLE npc]; SQL state [null]; error code [19]; [SQLITE_CONSTRAINT_FOREIGNKEY] A foreign key constraint failed (FOREIGN KEY constraint failed)
	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1557)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:408)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:444)
	at com.yiguang.service.impl.DatabaseFixerUtils.deduplicateTable(DatabaseFixerUtils.java:209)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.yiguang.service.impl.DatabaseFixerUtils$$SpringCGLIB$$0.deduplicateTable(<generated>)
	at com.yiguang.service.impl.DatabaseDataDeduplicator.deduplicateTables(DatabaseDataDeduplicator.java:88)
	at com.yiguang.service.impl.DatabaseDataDeduplicator.onApplicationEvent(DatabaseDataDeduplicator.java:44)
	at com.yiguang.service.impl.DatabaseDataDeduplicator.onApplicationEvent(DatabaseDataDeduplicator.java:1)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:454)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:387)
	at org.springframework.boot.context.event.EventPublishingRunListener.ready(EventPublishingRunListener.java:109)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$ready$6(SpringApplicationRunListeners.java:80)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:118)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:112)
	at org.springframework.boot.SpringApplicationRunListeners.ready(SpringApplicationRunListeners.java:80)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:332)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.yiguang.MythologyApplication.main(MythologyApplication.java:18)
Caused by: org.sqlite.SQLiteException: [SQLITE_CONSTRAINT_FOREIGNKEY] A foreign key constraint failed (FOREIGN KEY constraint failed)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.CoreStatement.exec(CoreStatement.java:91)
	at org.sqlite.jdbc3.JDBC3Statement.lambda$execute$0(JDBC3Statement.java:56)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:458)
	at org.sqlite.jdbc3.JDBC3Statement.execute(JDBC3Statement.java:44)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.core.JdbcTemplate$1ExecuteStatementCallback.doInStatement(JdbcTemplate.java:435)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	... 30 common frames omitted
2025-05-07 21:25:55.722 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-重新启用外键约束
2025-05-07 21:25:55.722 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [PRAGMA foreign_keys = ON]
2025-05-07 21:25:55.723 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Initiating transaction commit
2025-05-07 21:25:55.723 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Committing JDBC transaction on Connection [HikariProxyConnection@1117681940 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96]
2025-05-07 21:25:55.723 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Releasing JDBC Connection [HikariProxyConnection@1117681940 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] after transaction
2025-05-07 21:25:55.723 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.723 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.723 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.723 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [PRAGMA table_info(cultivation_technique)]
2025-05-07 21:25:55.723 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.723 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Creating new transaction with name [com.yiguang.service.impl.DatabaseFixerUtils.deduplicateTable]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-05-07 21:25:55.723 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Acquired Connection [HikariProxyConnection@444402847 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] for JDBC transaction
2025-05-07 21:25:55.723 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Switching JDBC Connection [HikariProxyConnection@444402847 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] to manual commit
2025-05-07 21:25:55.723 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-开始对表 cultivation_technique 进行数据去重处理
2025-05-07 21:25:55.723 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [PRAGMA foreign_keys = OFF]
2025-05-07 21:25:55.723 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-外键约束已禁用
2025-05-07 21:25:55.723 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [PRAGMA table_info(cultivation_technique)]
2025-05-07 21:25:55.724 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-创建临时表 cultivation_technique_temp
2025-05-07 21:25:55.724 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [DROP TABLE IF EXISTS cultivation_technique_temp]
2025-05-07 21:25:55.724 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [CREATE TABLE cultivation_technique_temp AS SELECT * FROM cultivation_technique WHERE 1=0]
2025-05-07 21:25:55.724 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [PRAGMA table_info(cultivation_technique)]
2025-05-07 21:25:55.724 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [PRAGMA table_info(cultivation_technique_temp)]
2025-05-07 21:25:55.724 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-从原表中选取不重复数据并插入临时表
2025-05-07 21:25:55.724 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL update [INSERT INTO cultivation_technique_temp SELECT * FROM cultivation_technique t1 WHERE id = (SELECT MIN(id) FROM cultivation_technique t2 WHERE t1.id = t2.id AND t1.name = t2.name AND t1.description = t2.description AND t1.level = t2.level AND t1.type = t2.type AND t1.effect_description = t2.effect_description AND t1.requirement_level = t2.requirement_level AND t1.base_value = t2.base_value AND t1.effect = t2.effect AND t1.element = t2.element)]
2025-05-07 21:25:55.724 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-成功插入 4 行不重复数据到临时表
2025-05-07 21:25:55.724 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-删除原表 cultivation_technique
2025-05-07 21:25:55.724 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [DROP TABLE cultivation_technique]
2025-05-07 21:25:55.724 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-将临时表 cultivation_technique_temp 重命名为 cultivation_technique
2025-05-07 21:25:55.724 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [ALTER TABLE cultivation_technique_temp RENAME TO cultivation_technique]
2025-05-07 21:25:55.726 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-表 cultivation_technique 去重完成
2025-05-07 21:25:55.726 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-重新启用外键约束
2025-05-07 21:25:55.726 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [PRAGMA foreign_keys = ON]
2025-05-07 21:25:55.726 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Initiating transaction commit
2025-05-07 21:25:55.726 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Committing JDBC transaction on Connection [HikariProxyConnection@444402847 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96]
2025-05-07 21:25:55.727 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Releasing JDBC Connection [HikariProxyConnection@444402847 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] after transaction
2025-05-07 21:25:55.727 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [SELECT COUNT(*) FROM cultivation_technique]
2025-05-07 21:25:55.727 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.727 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.727 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.727 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.727 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [PRAGMA table_info(spirit_root)]
2025-05-07 21:25:55.727 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.727 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Creating new transaction with name [com.yiguang.service.impl.DatabaseFixerUtils.deduplicateTable]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-05-07 21:25:55.727 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Acquired Connection [HikariProxyConnection@723161117 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] for JDBC transaction
2025-05-07 21:25:55.727 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Switching JDBC Connection [HikariProxyConnection@723161117 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] to manual commit
2025-05-07 21:25:55.727 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-开始对表 spirit_root 进行数据去重处理
2025-05-07 21:25:55.727 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [PRAGMA foreign_keys = OFF]
2025-05-07 21:25:55.727 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-外键约束已禁用
2025-05-07 21:25:55.727 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [PRAGMA table_info(spirit_root)]
2025-05-07 21:25:55.727 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-创建临时表 spirit_root_temp
2025-05-07 21:25:55.727 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [DROP TABLE IF EXISTS spirit_root_temp]
2025-05-07 21:25:55.727 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [CREATE TABLE spirit_root_temp AS SELECT * FROM spirit_root WHERE 1=0]
2025-05-07 21:25:55.727 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [PRAGMA table_info(spirit_root)]
2025-05-07 21:25:55.727 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [PRAGMA table_info(spirit_root_temp)]
2025-05-07 21:25:55.727 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-从原表中选取不重复数据并插入临时表
2025-05-07 21:25:55.727 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL update [INSERT INTO spirit_root_temp SELECT * FROM spirit_root t1 WHERE id = (SELECT MIN(id) FROM spirit_root t2 WHERE t1.id = t2.id AND t1.name = t2.name AND t1.description = t2.description AND t1.quality = t2.quality AND t1.element = t2.element AND t1.cultivation_speed_bonus = t2.cultivation_speed_bonus)]
2025-05-07 21:25:55.727 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-成功插入 22 行不重复数据到临时表
2025-05-07 21:25:55.727 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-删除原表 spirit_root
2025-05-07 21:25:55.727 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [DROP TABLE spirit_root]
2025-05-07 21:25:55.728 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-将临时表 spirit_root_temp 重命名为 spirit_root
2025-05-07 21:25:55.728 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [ALTER TABLE spirit_root_temp RENAME TO spirit_root]
2025-05-07 21:25:55.729 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-表 spirit_root 去重完成
2025-05-07 21:25:55.729 [main] INFO  com.yiguang.service.impl.DatabaseFixerUtils-重新启用外键约束
2025-05-07 21:25:55.729 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [PRAGMA foreign_keys = ON]
2025-05-07 21:25:55.729 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Initiating transaction commit
2025-05-07 21:25:55.729 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Committing JDBC transaction on Connection [HikariProxyConnection@723161117 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96]
2025-05-07 21:25:55.729 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Releasing JDBC Connection [HikariProxyConnection@723161117 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] after transaction
2025-05-07 21:25:55.729 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [SELECT COUNT(*) FROM spirit_root]
2025-05-07 21:25:55.729 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.730 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Creating new transaction with name [com.yiguang.service.impl.DatabasePlayerTechniqueFixer.onApplicationEvent]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-05-07 21:25:55.730 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Acquired Connection [HikariProxyConnection@297642807 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] for JDBC transaction
2025-05-07 21:25:55.730 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Switching JDBC Connection [HikariProxyConnection@297642807 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] to manual commit
2025-05-07 21:25:55.730 [main] INFO  c.y.service.impl.DatabasePlayerTechniqueFixer-开始检查玩家功法数据...
2025-05-07 21:25:55.730 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [PRAGMA foreign_keys = OFF]
2025-05-07 21:25:55.730 [main] INFO  c.y.service.impl.DatabasePlayerTechniqueFixer-已禁用外键约束
2025-05-07 21:25:55.730 [main] INFO  c.y.service.impl.DatabasePlayerTechniqueFixer-未找到基础吐纳术，创建中...
2025-05-07 21:25:55.730 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:25:55.730 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [INSERT INTO cultivation_technique(name, description, level, type, effect_description, requirement_level, base_value, effect, element) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?)]
2025-05-07 21:25:55.730 [main] INFO  c.y.service.impl.DatabasePlayerTechniqueFixer-基础吐纳术创建成功
2025-05-07 21:25:55.730 [main] ERROR c.y.service.impl.DatabasePlayerTechniqueFixer-错误：无法创建或获取基础吐纳术
2025-05-07 21:25:55.730 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL statement [PRAGMA foreign_keys = ON]
2025-05-07 21:25:55.730 [main] INFO  c.y.service.impl.DatabasePlayerTechniqueFixer-已启用外键约束
2025-05-07 21:25:55.730 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Initiating transaction commit
2025-05-07 21:25:55.730 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Committing JDBC transaction on Connection [HikariProxyConnection@297642807 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96]
2025-05-07 21:25:55.730 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Releasing JDBC Connection [HikariProxyConnection@297642807 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] after transaction
2025-05-07 21:25:55.730 [main] INFO  com.yiguang.test.VerifyFixesApplication-================== 验证数据库修复结果 ==================
2025-05-07 21:25:55.730 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [PRAGMA table_info(cultivation_technique)]
2025-05-07 21:25:55.730 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.730 [main] INFO  com.yiguang.test.VerifyFixesApplication-修炼功法表结构:
2025-05-07 21:25:55.731 [main] INFO  com.yiguang.test.VerifyFixesApplication-列名: id, 类型: INT, 可为空: 是, 默认值: null, 主键: 否
2025-05-07 21:25:55.731 [main] INFO  com.yiguang.test.VerifyFixesApplication-列名: name, 类型: TEXT, 可为空: 是, 默认值: null, 主键: 否
2025-05-07 21:25:55.731 [main] INFO  com.yiguang.test.VerifyFixesApplication-列名: description, 类型: TEXT, 可为空: 是, 默认值: null, 主键: 否
2025-05-07 21:25:55.731 [main] INFO  com.yiguang.test.VerifyFixesApplication-列名: level, 类型: INT, 可为空: 是, 默认值: null, 主键: 否
2025-05-07 21:25:55.731 [main] INFO  com.yiguang.test.VerifyFixesApplication-列名: type, 类型: TEXT, 可为空: 是, 默认值: null, 主键: 否
2025-05-07 21:25:55.731 [main] INFO  com.yiguang.test.VerifyFixesApplication-列名: effect_description, 类型: TEXT, 可为空: 是, 默认值: null, 主键: 否
2025-05-07 21:25:55.731 [main] INFO  com.yiguang.test.VerifyFixesApplication-列名: requirement_level, 类型: INT, 可为空: 是, 默认值: null, 主键: 否
2025-05-07 21:25:55.731 [main] INFO  com.yiguang.test.VerifyFixesApplication-列名: base_value, 类型: INT, 可为空: 是, 默认值: null, 主键: 否
2025-05-07 21:25:55.731 [main] INFO  com.yiguang.test.VerifyFixesApplication-列名: effect, 类型: TEXT, 可为空: 是, 默认值: null, 主键: 否
2025-05-07 21:25:55.731 [main] INFO  com.yiguang.test.VerifyFixesApplication-列名: element, 类型: TEXT, 可为空: 是, 默认值: null, 主键: 否
2025-05-07 21:25:55.731 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [SELECT id, name, level, base_value, effect, element FROM cultivation_technique ORDER BY level LIMIT 10]
2025-05-07 21:25:55.731 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.731 [main] INFO  com.yiguang.test.VerifyFixesApplication-修炼功法数据 (前10条):
2025-05-07 21:25:55.731 [main] INFO  com.yiguang.test.VerifyFixesApplication-ID: null, 名称: 基础吐纳术, 等级: 1, 基础值: 30, 效果: 灵气亲和, 元素: 无
2025-05-07 21:25:55.731 [main] INFO  com.yiguang.test.VerifyFixesApplication-ID: 4, 名称: 聚灵吐纳术, 等级: 3, 基础值: 50, 效果: 灵气亲和, 元素: 无
2025-05-07 21:25:55.731 [main] INFO  com.yiguang.test.VerifyFixesApplication-ID: 6, 名称: 太虚功, 等级: 7, 基础值: 100, 效果: 心境提升,灵气亲和, 元素: 无
2025-05-07 21:25:55.731 [main] INFO  com.yiguang.test.VerifyFixesApplication-ID: 7, 名称: 紫霞神功, 等级: 9, 基础值: 120, 效果: 心境提升,根骨适应, 元素: 无
2025-05-07 21:25:55.731 [main] INFO  com.yiguang.test.VerifyFixesApplication-ID: 10, 名称: 混元大道, 等级: 18, 基础值: 200, 效果: 根骨适应,灵气亲和,心境提升, 元素: 无
2025-05-07 21:25:55.731 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [SELECT COUNT(*) FROM cultivation_technique WHERE effect IS NOT NULL]
2025-05-07 21:25:55.731 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.731 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [SELECT COUNT(*) FROM cultivation_technique WHERE element IS NOT NULL]
2025-05-07 21:25:55.731 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.731 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [SELECT COUNT(*) FROM cultivation_technique]
2025-05-07 21:25:55.731 [main] DEBUG o.springframework.jdbc.datasource.DataSourceUtils-Fetching JDBC Connection from DataSource
2025-05-07 21:25:55.731 [main] INFO  com.yiguang.test.VerifyFixesApplication-修炼功法总数: 5, 具有效果的记录数: 5, 具有元素的记录数: 5
2025-05-07 21:25:55.731 [main] INFO  com.yiguang.test.VerifyFixesApplication-================== 验证完成 ==================
2025-05-07 21:25:55.731 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Creating new transaction with name [com.yiguang.service.impl.CultivationTechniqueUpdater.onApplicationEvent]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-05-07 21:25:55.731 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Acquired Connection [HikariProxyConnection@629835140 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] for JDBC transaction
2025-05-07 21:25:55.731 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Switching JDBC Connection [HikariProxyConnection@629835140 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] to manual commit
2025-05-07 21:25:55.731 [main] INFO  c.yiguang.service.impl.CultivationTechniqueUpdater-检查功法表结构...
2025-05-07 21:25:55.731 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:25:55.731 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT name FROM sqlite_master WHERE type='table' AND name=?]
2025-05-07 21:25:55.731 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [PRAGMA table_info(cultivation_technique)]
2025-05-07 21:25:55.731 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL query [PRAGMA table_info(cultivation_technique)]
2025-05-07 21:25:55.731 [main] INFO  c.yiguang.service.impl.CultivationTechniqueUpdater-确保功法base_value设置正确...
2025-05-07 21:25:55.731 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL update [UPDATE cultivation_technique SET base_value = 50 WHERE base_value IS NULL OR base_value = 0]
2025-05-07 21:25:55.731 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL update [UPDATE cultivation_technique SET base_value = 50 WHERE name = '聚灵吐纳术']
2025-05-07 21:25:55.731 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL update [UPDATE cultivation_technique SET base_value = 80 WHERE name = '玄元功']
2025-05-07 21:25:55.731 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL update [UPDATE cultivation_technique SET base_value = 100 WHERE name = '太虚功']
2025-05-07 21:25:55.731 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL update [UPDATE cultivation_technique SET base_value = 120 WHERE name = '紫霞神功']
2025-05-07 21:25:55.731 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL update [UPDATE cultivation_technique SET base_value = 150 WHERE name = '流元大法']
2025-05-07 21:25:55.731 [main] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing SQL update [UPDATE cultivation_technique SET base_value = 200 WHERE name = '混元大道']
2025-05-07 21:25:55.731 [main] INFO  c.yiguang.service.impl.CultivationTechniqueUpdater-功法base_value设置完成
2025-05-07 21:25:55.732 [main] INFO  c.yiguang.service.impl.CultivationTechniqueUpdater-功法表结构和数据更新完成
2025-05-07 21:25:55.732 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Initiating transaction commit
2025-05-07 21:25:55.732 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Committing JDBC transaction on Connection [HikariProxyConnection@629835140 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96]
2025-05-07 21:25:55.732 [main] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Releasing JDBC Connection [HikariProxyConnection@629835140 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] after transaction
2025-05-07 21:25:55.732 [main] DEBUG o.s.boot.availability.ApplicationAvailabilityBean-Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2025-05-07 21:26:01.869 [http-nio-18888-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet-POST "/api/battle/round", parameters={}
2025-05-07 21:26:01.870 [http-nio-18888-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping-Mapped to com.yiguang.controller.BattleController#executeBattleRound(Map)
2025-05-07 21:26:01.870 [http-nio-18888-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor-Read "application/json;charset=UTF-8" to [{playerId=1, action=SKILL, targetId=1}]
2025-05-07 21:26:01.871 [http-nio-18888-exec-4] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Creating new transaction with name [com.yiguang.service.impl.BattleServiceImpl.executeRound]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-05-07 21:26:01.871 [http-nio-18888-exec-4] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Acquired Connection [HikariProxyConnection@95975091 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] for JDBC transaction
2025-05-07 21:26:01.871 [http-nio-18888-exec-4] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Switching JDBC Connection [HikariProxyConnection@95975091 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] to manual commit
2025-05-07 21:26:01.873 [http-nio-18888-exec-4] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL query
2025-05-07 21:26:01.873 [http-nio-18888-exec-4] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [SELECT * FROM skill WHERE id = ?]
2025-05-07 21:26:01.874 [http-nio-18888-exec-4] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:26:01.874 [http-nio-18888-exec-4] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player SET name = ?, player_id = ?, gender = ?, lifespan = ?, spirit_root = ?, spirit_root_quality = ?, destiny = ?, cultivation_level = ?, cultivation_progress = ?, spirit_stone = ?, health = ?, max_health = ?, mana = ?, max_mana = ?, strength = ?, agility = ?, intelligence = ?, luck = ?, defense = ?, magic_defense = ?, attack_power = ?, magic_power = ?, cultivation_rate = ?, avatar = ?, character_image = ?, cave_dwelling_id = ?, sect_id = ? WHERE id = ?]
2025-05-07 21:26:01.875 [http-nio-18888-exec-4] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL update
2025-05-07 21:26:01.875 [http-nio-18888-exec-4] DEBUG org.springframework.jdbc.core.JdbcTemplate-Executing prepared SQL statement [UPDATE player SET name = ?, player_id = ?, gender = ?, lifespan = ?, spirit_root = ?, spirit_root_quality = ?, destiny = ?, cultivation_level = ?, cultivation_progress = ?, spirit_stone = ?, health = ?, max_health = ?, mana = ?, max_mana = ?, strength = ?, agility = ?, intelligence = ?, luck = ?, defense = ?, magic_defense = ?, attack_power = ?, magic_power = ?, cultivation_rate = ?, avatar = ?, character_image = ?, cave_dwelling_id = ?, sect_id = ? WHERE id = ?]
2025-05-07 21:26:01.875 [http-nio-18888-exec-4] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Initiating transaction commit
2025-05-07 21:26:01.875 [http-nio-18888-exec-4] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Committing JDBC transaction on Connection [HikariProxyConnection@95975091 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96]
2025-05-07 21:26:01.875 [http-nio-18888-exec-4] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Releasing JDBC Connection [HikariProxyConnection@95975091 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] after transaction
2025-05-07 21:26:01.876 [http-nio-18888-exec-4] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor-Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-07 21:26:01.877 [http-nio-18888-exec-4] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor-Writing [{result={round=2, lastAction=SKILL, battleEnded=false, opponentStatus={attackPower=300, mana=0, defe (truncated)...]
2025-05-07 21:26:01.879 [http-nio-18888-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet-Completed 200 OK
2025-05-07 21:26:07.189 [http-nio-18888-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet-POST "/api/battle/escape", parameters={}
2025-05-07 21:26:07.189 [http-nio-18888-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping-Mapped to com.yiguang.controller.BattleController#escapeBattle(Map)
2025-05-07 21:26:07.191 [http-nio-18888-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor-Read "application/json;charset=UTF-8" to [{playerId=1}]
2025-05-07 21:26:07.191 [http-nio-18888-exec-5] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Creating new transaction with name [com.yiguang.service.impl.BattleServiceImpl.escape]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-05-07 21:26:07.191 [http-nio-18888-exec-5] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Acquired Connection [HikariProxyConnection@1391630058 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] for JDBC transaction
2025-05-07 21:26:07.191 [http-nio-18888-exec-5] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Switching JDBC Connection [HikariProxyConnection@1391630058 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] to manual commit
2025-05-07 21:26:07.192 [http-nio-18888-exec-5] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Initiating transaction commit
2025-05-07 21:26:07.192 [http-nio-18888-exec-5] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Committing JDBC transaction on Connection [HikariProxyConnection@1391630058 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96]
2025-05-07 21:26:07.192 [http-nio-18888-exec-5] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Releasing JDBC Connection [HikariProxyConnection@1391630058 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] after transaction
2025-05-07 21:26:07.192 [http-nio-18888-exec-5] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor-Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-07 21:26:07.193 [http-nio-18888-exec-5] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor-Writing [{result={success=true, message=成功逃离战斗！, rewards={}}, battleSummary={escapeSuccess=true, message=成功逃离 (truncated)...]
2025-05-07 21:26:07.193 [http-nio-18888-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet-Completed 200 OK
2025-05-07 21:26:12.290 [http-nio-18888-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet-POST "/api/battle/escape", parameters={}
2025-05-07 21:26:12.291 [http-nio-18888-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping-Mapped to com.yiguang.controller.BattleController#escapeBattle(Map)
2025-05-07 21:26:12.291 [http-nio-18888-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor-Read "application/json;charset=UTF-8" to [{playerId=1}]
2025-05-07 21:26:12.291 [http-nio-18888-exec-6] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Creating new transaction with name [com.yiguang.service.impl.BattleServiceImpl.escape]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-05-07 21:26:12.291 [http-nio-18888-exec-6] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Acquired Connection [HikariProxyConnection@394896874 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] for JDBC transaction
2025-05-07 21:26:12.291 [http-nio-18888-exec-6] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Switching JDBC Connection [HikariProxyConnection@394896874 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] to manual commit
2025-05-07 21:26:12.291 [http-nio-18888-exec-6] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Initiating transaction rollback
2025-05-07 21:26:12.292 [http-nio-18888-exec-6] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Rolling back JDBC transaction on Connection [HikariProxyConnection@394896874 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96]
2025-05-07 21:26:12.292 [http-nio-18888-exec-6] DEBUG o.s.jdbc.datasource.DataSourceTransactionManager-Releasing JDBC Connection [HikariProxyConnection@394896874 wrapping org.sqlite.jdbc4.JDBC4Connection@739e8b96] after transaction
2025-05-07 21:26:12.292 [http-nio-18888-exec-6] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor-Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-05-07 21:26:12.293 [http-nio-18888-exec-6] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor-Writing [{success=false, message=玩家不在战斗中}]
2025-05-07 21:26:12.293 [http-nio-18888-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet-Completed 400 BAD_REQUEST
2025-05-07 21:26:19.893 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool-HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-05-07 21:26:19.893 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool-HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-05-07 21:26:49.898 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool-HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-05-07 21:26:49.898 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool-HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-05-07 21:27:07.487 [SpringApplicationShutdownHook] DEBUG o.s.boot.availability.ApplicationAvailabilityBean-Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
2025-05-07 21:27:07.487 [SpringApplicationShutdownHook] DEBUG o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext-Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@44a2b17b, started on Wed May 07 21:25:48 CST 2025
2025-05-07 21:27:07.490 [SpringApplicationShutdownHook] DEBUG o.s.context.support.DefaultLifecycleProcessor-Stopping beans in phase 2147482623
2025-05-07 21:27:07.492 [SpringApplicationShutdownHook] INFO  o.s.boot.web.embedded.tomcat.GracefulShutdown-Commencing graceful shutdown. Waiting for active requests to complete
2025-05-07 21:27:07.502 [tomcat-shutdown] INFO  o.s.boot.web.embedded.tomcat.GracefulShutdown-Graceful shutdown complete
2025-05-07 21:27:07.502 [SpringApplicationShutdownHook] DEBUG o.s.context.support.DefaultLifecycleProcessor-Stopping beans in phase 2147481599
2025-05-07 21:27:07.502 [tomcat-shutdown] DEBUG o.s.context.support.DefaultLifecycleProcessor-Bean 'webServerGracefulShutdown' completed its stop procedure
2025-05-07 21:27:07.504 [SpringApplicationShutdownHook] DEBUG o.s.context.support.DefaultLifecycleProcessor-Bean 'webServerStartStop' completed its stop procedure
2025-05-07 21:27:07.504 [SpringApplicationShutdownHook] DEBUG o.s.context.support.DefaultLifecycleProcessor-Stopping beans in phase 1073741823
2025-05-07 21:27:07.504 [SpringApplicationShutdownHook] DEBUG o.s.context.support.DefaultLifecycleProcessor-Bean 'applicationTaskExecutor' completed its stop procedure
2025-05-07 21:27:07.504 [SpringApplicationShutdownHook] DEBUG o.s.context.support.DefaultLifecycleProcessor-Stopping beans in phase -2147483647
2025-05-07 21:27:07.504 [SpringApplicationShutdownHook] DEBUG o.s.context.support.DefaultLifecycleProcessor-Bean 'springBootLoggingLifecycle' completed its stop procedure
2025-05-07 21:27:07.505 [SpringApplicationShutdownHook] DEBUG o.s.jmx.export.annotation.AnnotationMBeanExporter-Unregistering JMX-exposed beans on shutdown
2025-05-07 21:27:07.505 [SpringApplicationShutdownHook] DEBUG o.s.jmx.export.annotation.AnnotationMBeanExporter-Unregistering JMX-exposed beans
2025-05-07 21:27:07.506 [SpringApplicationShutdownHook] DEBUG o.s.scheduling.concurrent.ThreadPoolTaskExecutor-Shutting down ExecutorService 'applicationTaskExecutor'
2025-05-07 21:27:07.510 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource-HikariPool-1 - Shutdown initiated...
2025-05-07 21:27:07.511 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool-HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2025-05-07 21:27:07.513 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase-HikariPool-1 - Closing connection org.sqlite.jdbc4.JDBC4Connection@739e8b96: (connection evicted)
2025-05-07 21:27:07.514 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase-HikariPool-1 - Closing connection org.sqlite.jdbc4.JDBC4Connection@29bcd6b: (connection evicted)
2025-05-07 21:27:07.514 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase-HikariPool-1 - Closing connection org.sqlite.jdbc4.JDBC4Connection@c5c3348: (connection evicted)
2025-05-07 21:27:07.514 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase-HikariPool-1 - Closing connection org.sqlite.jdbc4.JDBC4Connection@863a61b: (connection evicted)
2025-05-07 21:27:07.514 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase-HikariPool-1 - Closing connection org.sqlite.jdbc4.JDBC4Connection@4d613973: (connection evicted)
2025-05-07 21:27:07.514 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase-HikariPool-1 - Closing connection org.sqlite.jdbc4.JDBC4Connection@114d4521: (connection evicted)
2025-05-07 21:27:07.514 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase-HikariPool-1 - Closing connection org.sqlite.jdbc4.JDBC4Connection@7ce6f233: (connection evicted)
2025-05-07 21:27:07.514 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase-HikariPool-1 - Closing connection org.sqlite.jdbc4.JDBC4Connection@6920d0ca: (connection evicted)
2025-05-07 21:27:07.514 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase-HikariPool-1 - Closing connection org.sqlite.jdbc4.JDBC4Connection@2d4ec63c: (connection evicted)
2025-05-07 21:27:07.514 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase-HikariPool-1 - Closing connection org.sqlite.jdbc4.JDBC4Connection@5651eaf9: (connection evicted)
2025-05-07 21:27:07.515 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool-HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2025-05-07 21:27:07.515 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource-HikariPool-1 - Shutdown completed.
